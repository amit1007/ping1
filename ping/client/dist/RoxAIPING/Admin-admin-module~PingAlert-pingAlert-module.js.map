{"version":3,"sources":["webpack:///./src/app/PingAlert/ping-alert.service.ts"],"names":[],"mappings":"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","file":"Admin-admin-module~PingAlert-pingAlert-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst pingAlertApi = \"/pingAlert\";\nconst QlikSenseMeasuresUrl = \"/QlikSenseMeasures\";\nconst QlikSenseUrl = \"/QlikSense\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class PingAlertService {\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(error);\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }  \n\n  //#region All CRUD Operation's\n  \n  getAlerts(): Observable<any> {\n    \n    return this.http.get(pingAlertApi, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n  getLoginIDWiseAlerts(id:string): Observable<any> {\n    console.log('in service APi',id); \n    const loginURL=\"/pingAlert/LoggedUserWiseAlertData\"\n    const url = `${loginURL}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n  getLoginIDWiseAlertsHistory(id:string): Observable<any> {\n    console.log('in service APi',id); \n    const AlertHistory=\"/history/LoggedUserWiseAlertHistoryData\"\n    const url = `${AlertHistory}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n  getHistory(userId:string): Observable<any> {\n    // const httpOptions1 = {\n    //   headers: new HttpHeaders({'Token': localStorage.getItem('jwtToken')})\n    // };\n    const URL = \"/history/userId\";\n    return this.http.get(URL, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n  getAlertHistroy(id: string): Observable<any> {\n    const URL = \"/history\";\n    const url = `${URL}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n  // Total Alert Count\n  getAlertsMax(): Observable<any> {\n    return this.http.get(pingAlertApi+'/count', httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n  //Get Alert max count \n  getAlertsMaxCount(searchDate:string): Observable<any> {\n    const URL = pingAlertApi+\"/maxCountMonth\";\n    const url = `${URL}/${searchDate}`\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n  getAlert(id: string): Observable<any> {\n    const url = `${pingAlertApi}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n  postAlert(data): Observable<any> {\n    console.log('-------------',data)\n    var caty=this.http.post(pingAlertApi, data, httpOptions)\n    .pipe(\n      catchError(this.handleError)\n    );\n    console.log('Caty.....',caty);\n    return caty;\n    // return this.http.post(pingAlertApi, data, httpOptions)\n    //   .pipe(\n    //     catchError(this.handleError)\n    //   );\n  }  \n  //Edit Alert \n  updateAlert(id,data): Observable<any> {\n    const url = `${pingAlertApi}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n  // tigger true or false\n  updatetriggerAlert(data): Observable<any> {\n    const url = `${pingAlertApi}/trigger/${data.id}`;\n    console.log(data);\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }  \n  deleteAlert(id: string): Observable<{}> {\n    const url = `${pingAlertApi}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }  \n  deleteAlertIsActive(id: string): Observable<{}> {\n    const isActive = 'IsActive'\n    console.log('deleteAlertIsActive TS FIle....')\n    const url = `${pingAlertApi}/${isActive}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  //#region QlikSense Object's\n  getQlikSenseObject(qlikUserDetail): Observable<any> {  \n    // const httpOptions1 = {\n    //   headers: new HttpHeaders({user_directory :qlikUserDetail.user_directory,\n    //     user_name :qlikUserDetail.user_name ,\n    //     origin : qlikUserDetail.origin})\n    // };\n    return this.http.get(QlikSenseUrl+'/', httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n  CreateSession():Observable<any>{\n\n    return this.http.get(QlikSenseMeasuresUrl+'/', httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n\n  }\n\n  getNumFormat(data): Observable<any> {\n\n    const NumFormateURl =\"NumFormate\";\n      return this.http.post(NumFormateURl, data,httpOptions).pipe(  \n      catchError(this.handleError));\n    \n  }\n\n  getMeasures(getMesValue) : Observable<any>{\n\n    return this.http.post(QlikSenseMeasuresUrl+'/getMeasureValue', getMesValue,httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  \n  }\n\n  getDiamention(getMesValue) : Observable<any>{\n\n    return this.http.post(QlikSenseMeasuresUrl+'/getDiamentionValue', getMesValue,httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  \n  }\n  getFielddValue(getMesValue) : Observable<any>{\n\n    return this.http.post(QlikSenseMeasuresUrl+'/getFielddValue', getMesValue,httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  \n  }\n\n  getFilter(putValue) : Observable<any>{\n\n    return this.http.post(QlikSenseMeasuresUrl+'/getFilterValue', putValue,httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  \n  }\n  \n\n  sendMail(data,mailby) : Observable<any>{\n\n    const httpOptionsMail = {\n      headers: new HttpHeaders({'Content-Type': 'application/json',\n              'ping-mail-by': mailby              \n         })\n    };\n\n    // console.log(\"###***********\"+data);\n    const sendMailURL = \"/sendMail\";\n    return this.http.post(sendMailURL,data,httpOptionsMail)\n        .pipe(\n          catchError(this.handleError)\n        );\n  }\n\n  //edited Mail Send...\n  sendMailEdited(data,mailby) : Observable<any>{\n\n    const httpOptionsMail = {\n      headers: new HttpHeaders({'Content-Type': 'application/json',\n              'ping-mail-by': mailby              \n         })\n    };\n\n    // console.log(\"###***********\"+data);\n    const sendMailURL = \"/sendMail/editAlertMail\";\n    return this.http.post(sendMailURL,data,httpOptionsMail)\n        .pipe(\n          catchError(this.handleError)\n        );\n  }\n\n  ValidateEmailID(data) : Observable<any>{\n\n    console.log(\"In Validate Email ID\"+data);\n    const sendMailURL = \"/sendMail/ValidateID\";\n    return this.http.post(sendMailURL, data, httpOptions)\n        .pipe(\n          catchError(this.handleError)\n        );\n  }\n\n\n  ValidateEmailServer(data) : Observable<any>{\n\n    console.log(\"In Validate Email ID\"+data);\n    const sendMailURL = \"/TestMailServer\";\n    return this.http.post(sendMailURL, data, httpOptions)\n        .pipe(\n          catchError(this.handleError)\n        );\n  }\n\n  setSheduled(data) : Observable<any>{\n\n    console.log(data);\n    const SetSheduledURL = \"/SetSheduled\";\n    return this.http.post(SetSheduledURL, data, httpOptions)\n        .pipe(\n          catchError(this.handleError)\n        );\n  }\n  setSheduledDia(data) : Observable<any>{\n\n    console.log(data);\n    const SetSheduledURL = \"/SetSheduled/Diamention\";\n    return this.http.post(SetSheduledURL, data, httpOptions)\n        .pipe(\n          catchError(this.handleError)\n        );\n  }\n\n  setSheduledFilter(data) : Observable<any>{\n    console.log(data);\n    const SetSheduledURL = \"/SetSheduled/Filter\";\n    return this.http.post(SetSheduledURL, data, httpOptions)\n        .pipe(\n          catchError(this.handleError)\n        );\n  }\n\n \n  //#endregion\n    //region  ping User creationb Details\n\n //MobileNotify\n getMobileNotify(EmailID:string): Observable<any> {\n  const httpOptions1 = {\n    headers: new HttpHeaders({'Token': EmailID})\n  };\n  return this.http.get(pingAlertApi+'/MobileNotify', httpOptions1).pipe(\n    map(this.extractData),\n    catchError(this.handleError));\n}\n//#endregion\n\nDecodeUserToken():Observable<any>{\n  // console.log('In ping Decode User verify function',localStorage.getItem('jwtToken'));\n   //console.log(data);\n   var ValidToken1=localStorage.getItem('jwtToken')\n   console.log(\"Validated Token is If Condition\"+ValidToken1)\n  \n   if(ValidToken1!=null)\n     {\n      console.log(\"Validated Token is If Condition\"+ValidToken1)\n       const httpOptions1 = {\n         headers: new HttpHeaders({'x-access-token':ValidToken1\n       })\n       };\n       const url ='/PingComman/decodeUserToken';   \n       return this.http.get(url,httpOptions1)\n         .pipe(\n           catchError(this.handleError)\n         );\n     }\n     else\n     {\n      console.log(\"Validated Token is else Condition\"+ValidToken1)\n      //  return null;\n     }  \n }\n\n onEdit(id: string): Observable<any> {\n  const url = `${pingAlertApi}/${id}`;\n  // console.log(url);\n  return this.http.get(url, httpOptions)\n  .pipe(\n    map(this.extractData, () => {\n      console.log(this.extractData);\n    }),\n    catchError(this.handleError)\n  );\n}\n \n}"],"sourceRoot":""}