{"version":3,"sources":["webpack:///./src/app/Admin/Datasource/create-datasource/create-datasource.component.css","webpack:///./src/app/Admin/Datasource/create-datasource/create-datasource.component.html","webpack:///./src/app/Admin/Datasource/create-datasource/create-datasource.component.ts","webpack:///./src/app/Admin/Datasource/datasource-details/datasource-details.component.css","webpack:///./src/app/Admin/Datasource/datasource-details/datasource-details.component.html","webpack:///./src/app/Admin/Datasource/datasource-details/datasource-details.component.ts","webpack:///./src/app/Admin/Datasource/edit-datasource/edit-datasource.component.css","webpack:///./src/app/Admin/Datasource/edit-datasource/edit-datasource.component.html","webpack:///./src/app/Admin/Datasource/edit-datasource/edit-datasource.component.ts","webpack:///./src/app/Admin/DeliveryChannel/create-delivery-channel/create-delivery-channel.component.css","webpack:///./src/app/Admin/DeliveryChannel/create-delivery-channel/create-delivery-channel.component.html","webpack:///./src/app/Admin/DeliveryChannel/create-delivery-channel/create-delivery-channel.component.ts","webpack:///./src/app/Admin/DeliveryChannel/delivery-channel-details/delivery-channel-details.component.css","webpack:///./src/app/Admin/DeliveryChannel/delivery-channel-details/delivery-channel-details.component.html","webpack:///./src/app/Admin/DeliveryChannel/delivery-channel-details/delivery-channel-details.component.ts","webpack:///./src/app/Admin/DeliveryChannel/edit-delivery-channel/edit-delivery-channel.component.css","webpack:///./src/app/Admin/DeliveryChannel/edit-delivery-channel/edit-delivery-channel.component.html","webpack:///./src/app/Admin/DeliveryChannel/edit-delivery-channel/edit-delivery-channel.component.ts","webpack:///./src/app/Admin/LicenseDetails/license-details/license-details.component.css","webpack:///./src/app/Admin/LicenseDetails/license-details/license-details.component.html","webpack:///./src/app/Admin/LicenseDetails/license-details/license-details.component.ts","webpack:///./src/app/Admin/MasterForms/ChannelMaster/ChannelType/channel-type-details/channel-type-details.component.css","webpack:///./src/app/Admin/MasterForms/ChannelMaster/ChannelType/channel-type-details/channel-type-details.component.html","webpack:///./src/app/Admin/MasterForms/ChannelMaster/ChannelType/channel-type-details/channel-type-details.component.ts","webpack:///./src/app/Admin/MasterForms/ChannelMaster/ChannelType/create-channel-type/create-channel-type.component.css","webpack:///./src/app/Admin/MasterForms/ChannelMaster/ChannelType/create-channel-type/create-channel-type.component.html","webpack:///./src/app/Admin/MasterForms/ChannelMaster/ChannelType/create-channel-type/create-channel-type.component.ts","webpack:///./src/app/Admin/MasterForms/ChannelName/channel-name-details/channel-name-details.component.css","webpack:///./src/app/Admin/MasterForms/ChannelName/channel-name-details/channel-name-details.component.html","webpack:///./src/app/Admin/MasterForms/ChannelName/channel-name-details/channel-name-details.component.ts","webpack:///./src/app/Admin/MasterForms/ChannelName/create-channel-name/create-channel-name.component.css","webpack:///./src/app/Admin/MasterForms/ChannelName/create-channel-name/create-channel-name.component.html","webpack:///./src/app/Admin/MasterForms/ChannelName/create-channel-name/create-channel-name.component.ts","webpack:///./src/app/Admin/SuperAdmin/alert-list/alert-list.component.css","webpack:///./src/app/Admin/SuperAdmin/alert-list/alert-list.component.html","webpack:///./src/app/Admin/SuperAdmin/alert-list/alert-list.component.ts","webpack:///./src/app/Admin/SuperAdmin/show-all-user-list/show-all-user-list.component.css","webpack:///./src/app/Admin/SuperAdmin/show-all-user-list/show-all-user-list.component.html","webpack:///./src/app/Admin/SuperAdmin/show-all-user-list/show-all-user-list.component.ts","webpack:///./src/app/Admin/SuperAdmin/show-in-active-users/show-in-active-users.component.css","webpack:///./src/app/Admin/SuperAdmin/show-in-active-users/show-in-active-users.component.html","webpack:///./src/app/Admin/SuperAdmin/show-in-active-users/show-in-active-users.component.ts","webpack:///./src/app/Admin/SuperAdmin/super-admin-home/super-admin-home.component.css","webpack:///./src/app/Admin/SuperAdmin/super-admin-home/super-admin-home.component.html","webpack:///./src/app/Admin/SuperAdmin/super-admin-home/super-admin-home.component.ts","webpack:///./src/app/Admin/admin-routing.module.ts","webpack:///./src/app/Admin/admin.module.ts","webpack:///./src/app/Admin/user-register/edit-user-details/edit-user-details.component.css","webpack:///./src/app/Admin/user-register/edit-user-details/edit-user-details.component.html","webpack:///./src/app/Admin/user-register/edit-user-details/edit-user-details.component.ts","webpack:///./src/app/Admin/user-register/user-details/user-details.component.css","webpack:///./src/app/Admin/user-register/user-details/user-details.component.html","webpack:///./src/app/Admin/user-register/user-details/user-details.component.ts","webpack:///./src/app/Admin/user-register/user-register.component.css","webpack:///./src/app/Admin/user-register/user-register.component.html","webpack:///./src/app/Admin/user-register/user-register.component.ts"],"names":[],"mappings":"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","file":"Admin-admin-module.js","sourcesContent":["module.exports = \"\\r\\ninput[type=\\\"file\\\"] {\\r\\n    display: none;\\r\\n  }\\r\\n  .custom-file-upload {\\r\\n    border: 1px solid #ccc;\\r\\n    display: inline-block;\\r\\n    padding: 6px 12px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  #container{\\r\\n    border: 1px dotted rgb(173, 170, 170);\\r\\n  }\\r\\n  .example-full-width {\\r\\n  width: 100%;\\r\\n  }\\r\\n  .mat-form-field{\\r\\n  width: 80%;\\r\\n  }\\r\\n  #btn-default{\\r\\n    background-color: rgb(249, 25, 66);\\r\\n    color: rgb(255, 255, 255);\\r\\n  }\\r\\n  #google{\\r\\n  \\r\\n    opacity: 5px;\\r\\n    color: lightgray;\\r\\n  }\\r\\n  \"","module.exports = \"<br><br><br><br>\\n\\n<!-- \\n<div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4 col-lg-offset-1\\\">\\n            <p class=\\\"pingText\\\">Please enter the details of the DataSource for Ping:</p>\\n        </div>\\n      </div> -->\\n        <div class=\\\"container\\\" id=\\\"container\\\"><br>\\n       <div class=\\\"row\\\">\\n              <form  id=\\\"form_width\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onFormSubmit(userForm.value)\\\" >\\n                      <div class=\\\"form-group \\\">\\n                       <div class=\\\"col-md-6\\\">\\n           \\n                \\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-9 col-lg-offset-1\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                          <input matInput placeholder=\\\"Source Name\\\" formControlName=\\\"sourcename\\\">\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                    <br>\\n                     <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-9 col-lg-offset-1\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                            <mat-select  placeholder=\\\"Source Type\\\" formControlName = \\\"type\\\">\\n                                <mat-option *ngFor='let type of food' [value]=\\\"type.value\\\">\\n                                  {{type.viewValue}}\\n                                </mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                        \\n                        </div>\\n                    </div> \\n                    <br>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-9 col-lg-offset-1\\\">\\n                              <!-- <input  class=\\\"form-control\\\" formControlName=\\\"hostname\\\">  -->\\n                                <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                                  <input matInput placeholder=\\\"Host Name\\\" formControlName=\\\"hostname\\\">\\n                                </mat-form-field>\\n                                <p id=\\\"google\\\">eg. qlikserver.domain.com </p>\\n                        </div>\\n                        </div>\\n                      <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-9 col-lg-offset-1\\\">\\n                      <mat-form-field>\\n                        <input matInput placeholder=\\\"Connect as Username\\\" formControlName=\\\"connect\\\">\\n                      </mat-form-field>\\n                      </div>\\n                      </div>\\n                      \\n                    <br>\\n                   \\n               \\n            \\n         </div>\\n         <div class=\\\"col-md-6\\\" >\\n             <div *ngIf=\\\"UploadCertificateFlag\\\">\\n                  <div class=\\\"row\\\">\\n                          <div class=\\\"col-md-3\\\">\\n                            <label>Certificates</label><br>\\n                          </div>\\n                        </div>\\n                            <label matTooltip=\\\"Upload .pfx or .pem\\\" for=\\\"file-upload\\\" class=\\\"custom-file-upload\\\">\\n                              <i class=\\\"glyphicon glyphicon-upload\\\"></i> Upload File\\n                          </label>\\n                          <input  id=\\\"file-upload\\\" type=\\\"file\\\" \\n                          class=\\\"upload\\\" \\n                          ng2FileSelect\\n                          accept=\\\"*.csv\\\" \\n                          />\\n                        <br>\\n                        <table class=\\\"table\\\" >\\n                            <thead>\\n                            <tr>\\n                                <th>Name</th>\\n                                <th>Size</th>\\n                                <th>Progress</th>\\n                                <th>Status</th>\\n                                <th>Actions</th>\\n                            </tr>\\n                            </thead>\\n                         <tbody>\\n                            <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                                <td><strong>{{ item?.file?.name }}</strong></td>\\n                                <td *ngIf=\\\"uploader.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n                                <td *ngIf=\\\"uploader.isHTML5\\\">\\n                                    <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\n                                        <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\n                                    </div>\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <span *ngIf=\\\"item.isSuccess\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></span>\\n                                    <!-- <span *ngIf=\\\"item.isCancel\\\"><i class=\\\"glyphicon glyphicon-ban-circle\\\"></i></span> -->\\n                                    <span *ngIf=\\\"item.isError\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></span>\\n                                </td>\\n                                <td nowrap>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\"\\n                                            (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\n                                        <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\n                                    </button>\\n                                   \\n                                    <!-- <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\"\\n                                            (click)=\\\"item.cancel()\\\" [disabled]=\\\"!item.isUploading\\\">\\n                                        <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel\\n                                    </button> -->\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\"\\n                                            (click)=\\\"item.remove()\\\">\\n                                        <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove\\n                                    </button>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n             </div>\\n             <!-- <div class=\\\"form-group\\\"> -->\\n                  <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-9\\\">\\n                  <mat-form-field appearance=\\\"fill\\\">\\n                    <input matInput placeholder=\\\"Directory\\\" formControlName=\\\"userdirectory\\\">\\n                  </mat-form-field>\\n                  </div>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-9\\\">\\n                      <mat-form-field appearance=\\\"fill\\\">\\n                        <input matInput placeholder=\\\"Certificate Password\\\" formControlName=\\\"certPassword\\\">\\n                      </mat-form-field>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                          <div class=\\\"col-md-9\\\">\\n                          <mat-form-field appearance=\\\"fill\\\">\\n                            <input matInput placeholder=\\\"MonogoDB Port\\\" formControlName=\\\"mongoDbPort\\\">\\n                          </mat-form-field>\\n                          </div>\\n                  </div>\\n             <!-- </div> -->\\n            \\n                  \\n         </div>\\n         <div class=\\\"row\\\">\\n              <div class=\\\"col-md-2\\\">\\n                  <button  type=\\\"submit\\\"\\n                   id=\\\"btn-default\\\"     \\n                   mat-raised-button>Test Connection</button> \\n              </div>\\n            </div>\\n      </div>\\n      </form>\\n       </div>\\n       \\n          \\n        <br>\\n      </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\nimport { FileUploader } from 'ng2-file-upload';\nimport { AdminService } from '../../admin.service';\nimport { AppService } from '../../../app.service';\nconst URL = '../upload/';\nexport interface Food {\n  value: string;\n  viewValue: string;\n}\n@Component({\n  selector: 'app-create-datasource',\n  templateUrl: './create-datasource.component.html',\n  styleUrls: ['./create-datasource.component.css']\n})\nexport class CreateDatasourceComponent implements OnInit {\n\n  public uploader:FileUploader = new FileUploader({url: URL});\n  \n  food: Food[] = [\n    {value: 'None', viewValue: 'None'},\n    {value: 'QlikSense Server', viewValue: 'Qlik-Sense Server'},\n    {value: 'Power BI', viewValue: 'Power BI'},\n    {value: 'Oracle DB', viewValue: 'Oracle DB'}\n  ];\n  UploadCertificateFlag:boolean=false;\n  userForm: FormGroup;\n  sourcename:string='';\n  userdirectory:string='';\n  hostname:string='';\n  connect:string='';\n  type:string='';\n  origin:string;\n  certPassword:string;\n  mongoDbPort:string;\n \n  //  Next Version \n  // color = 'accent';\n  // checked = false;\n  // disabled = false;\n\n  // device = true;\n  // devic = false;\n  // stream = false;\n  // Sales = false ;\n  // Inventory = false;\n  // Operations = false;\n  // Finance = false;\n  // Processing = false;\n  // Archive = false;\n  // Application = false;\n  // Good = false;\n  // Stock =false;\n  // Human= false;\n  // HR = false ;\n  // Consumer = false;\n  constructor(private router: Router, \n              private commanApi:AppService,\n              private api: AdminService, \n              private formBuilder: FormBuilder,\n              public snackbar: MatSnackBar,) { }  \n\n              ngOnInit() {    \n                this.commanApi.getLoggeddUser().subscribe(res=>{\n                  console.log(\"int \"+res.InsertBy+\" res.PingUserID\"+res.PingUserID)\n                this.userForm.get('InsertBy').setValue(res.InsertBy)\n                this.userForm.get('LoggedID').setValue(res.PingUserID)\n                },err=>{\n                  console.log(\"session Expires in datasource details\"+err)\n                  this.router.navigate(['/login']);\n                })\n                // console.log(this.foods)\n                this.userForm = this.formBuilder.group({\n                  \"dataSourceId\" :\"01\",\n                  'sourcename' :'',\n                  'userdirectory':'qlik-sense',\n                  'hostname' : '',\n                  'connect' : '',\n                  'InsertBy':'',\n                  'LoggedID':'',\n                  'type':'qlik-sense',\n                  'certPassword':'',\n                  'mongoDbPort':''\n                })\n              }\n            \n            \n            \n              onFormSubmit(form:NgForm) {            \n                console.log(\"Hi........\")\n                console.log(\"form:\",form)\n                // this.router.navigate(['/data-source']);\n                // this.snackbar.open('wait connection in process Check DataBase', 'Close', {\n                  // duration: 4000,});\n            \n                this.api.DataSourceEdit(form)\n                 .subscribe(res => {\n                           //  console.log(res);         \n                      this.snackbar.open(res.request, 'Close', {\n                        duration: 6000,\n                      });\n\n                      if(res.status === 200 ){\n                        this.router.navigate(['/admin/dataSourceDetails']);\n                      } \n\n                    }, (err) => {\n                        this.snackbar.open('Something Went Wrong...', 'Close', {\n                          duration: 3000,\n                      });\n                   \n                  });\n              }}\n            ","module.exports = \"/*  REal*/\\r\\n\\r\\ntable {\\r\\n    width: 100%;\\r\\n    transition: none !important;\\r\\n    box-shadow: none !important;\\r\\n    margin-top: -30px;\\r\\n  }\\r\\n\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 70%;\\r\\n  }\\r\\n\\r\\n#row2{\\r\\n    \\r\\n    padding-top: 8px;\\r\\n    padding-bottom: 10px;\\r\\n  }\\r\\n\\r\\n.table-responsive{\\r\\n    margin-top: -15px;\\r\\n    padding-top: 40px;\\r\\n  }\\r\\n\\r\\ntr.mat-header-row{\\r\\n    height: 37px;\\r\\n  }\\r\\n\\r\\n.table-bordered>thead>tr>th{\\r\\n    border: 1px solid  rgb(249, 25, 66);\\r\\n  }\\r\\n\\r\\ntd{\\r\\n    color: rgb(127, 127, 127)\\r\\n  }\\r\\n\\r\\n.mat-header-cell {\\r\\n    color: rgb(102,102,102);\\r\\n  }\\r\\n\\r\\nth{\\r\\n    padding-top: -100px;\\r\\n    font-size: 14px;\\r\\n    background-color: rgb(238, 238, 238);\\r\\n  }\\r\\n\\r\\n#th_allign{\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n#button{\\r\\n    background-color: rgb(249, 25, 66);\\r\\n    color: rgb(255, 255, 255);\\r\\n    text-decoration: none;\\r\\n  }\\r\\n\\r\\n#height{\\r\\n    height: 10px;\\r\\n  }\\r\\n\\r\\n* {\\r\\n    font-family: 'Nunito', 'Glyphicons Halflings';\\r\\n  } \\r\\n  \"","module.exports = \"    <br><br><br><br>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"btn-group btn-breadcrumb \\\">\\n                      <a routerLink=\\\"/home\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n                      <a  class=\\\"btn btn-default\\\">Admin</a>\\n                      <a routerLink=\\\"/admin/dataSourceDetails\\\" class=\\\"btn btn-default active\\\">Data Source</a>\\n              </div>\\n            </div>\\n          </div>\\n    </div>\\n\\n<!-- Main Data Code -->\\n \\n  <div class=\\\"container\\\">\\n         <div class=\\\"col-md-8\\\"></div>\\n         <div class=\\\"col-md-4\\\">\\n            <div class=\\\"input-group\\\" style=\\\"float:right\\\">\\n                <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" id=\\\"txtSearch\\\"/> -->\\n                <input class=\\\"form-control\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" >\\n                    <div class=\\\"input-group-btn\\\">\\n                        <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n                            <span class=\\\"glyphicon glyphicon-search\\\"></span>\\n                        </button>\\n                </div>\\n            </div>\\n         </div>\\n       </div>\\n\\n\\n\\n<br>\\n<div class=\\\"container\\\">\\n<div class=\\\"table-responsive\\\" >\\n<table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\" mat-elevation-z8 table-bordered table-striped\\\"> \\n\\n <ng-container matColumnDef=\\\"sourcename\\\" >\\n    <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\" >Data Source Name </th>\\n   <td mat-cell *matCellDef=\\\"let element\\\">  &nbsp; {{element.sourcename}} </td>\\n  </ng-container>\\n\\n  \\n  <ng-container matColumnDef=\\\"type\\\" >\\n    <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\" >Data Source Type</th>\\n   <td mat-cell *matCellDef=\\\"let element\\\">  &nbsp;{{element.type}} </td>\\n  </ng-container> \\n\\n\\n <ng-container matColumnDef=\\\"hostname\\\">\\n      <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\" >Data Source Host </th>\\n     <td mat-cell *matCellDef=\\\"let element\\\">  &nbsp;{{element.hostname}} </td>\\n    </ng-container>    \\n\\n\\n\\n  <!-- Colum Edit/ Delete --> \\n  <ng-container matColumnDef=\\\"edit\\\">\\n      <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\" >Edit / Delete  </th>\\n     <td mat-cell *matCellDef=\\\"let element\\\">\\n       <div class=\\\"row col-md-offset-3\\\">\\n          &nbsp; &nbsp;\\n         <div class=\\\"col-md-2\\\">\\n             <a style=\\\"cursor: pointer;\\\" [routerLink]=\\\"['/admin/editDataSource',element._id]\\\" ><i matTooltip=\\\"Edit\\\" class=\\\"glyphicon glyphicon-pencil\\\" ></i></a>\\n         </div>\\n         &nbsp; \\n <div class=\\\"col-md-2\\\">\\n              <a matTooltip=\\\"Delete\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteAlert(element._id)\\\"> <i class=\\\"glyphicon glyphicon-trash\\\"></i></a>\\n             <!-- <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteAlert(element._id)\\\"><mat-icon>delete</mat-icon></a> -->\\n          </div>\\n      </div>\\n     </td>\\n  </ng-container>\\n\\n\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n</div>\\n\\n<br>  \\n\\n\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-3\\\">\\n<a id=\\\"button\\\" mat-raised-button [routerLink]=\\\"['/admin/createDataSource']\\\">Create New</a>\\n</div>\\n\\n<div class=\\\"col-md-9\\\">\\n<mat-paginator [pageSizeOptions]=\\\"[10,20,50,100,150,200,250]\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n</div>\\n</div>\\n\\n\"","import { Component, OnInit,ViewChild} from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport {MatTableDataSource,MatPaginator,MatSort} from '@angular/material';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminService } from '../../admin.service';\nimport { AppService } from '../../../app.service';\n\n@Component({\n  selector: 'app-datasource-details',\n  templateUrl: './datasource-details.component.html',\n  styleUrls: ['./datasource-details.component.css']\n})\nexport class DatasourceDetailsComponent implements OnInit {\n\n  constructor(private api: AdminService,private commonApi:AppService,private router: Router,public snackbar: MatSnackBar) { }\n\n\n  displayedColumns: string[]= ['sourcename','type', 'hostname', 'edit']; \n  \n  dataSource = new MatTableDataSource();\n   \n  applyFilter(filterValue: string) {\n     this.dataSource.filter = filterValue.trim().toLowerCase();\n   }\n     \n \n \n\n \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n// applyFilter(filterValue: string) {\n//     filterValue = filterValue.trim(); // Remove whitespace\n//     filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n//     this.dataSource.filter = filterValue;\n//   }\n \nngOnInit() {\n  this.commonApi.getLoggeddUser().subscribe(res=>{\n    this.api.DataSourceDetails()\n    .subscribe(res => {\n      console.log('DataSourceDetails:',res);\n      this.dataSource = new MatTableDataSource(res);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort =this.sort;\n    }, err => {\n      console.log(err);\n    });\n\n      // this.api.DataSourceDetails()\n      // .subscribe(res => {\n      //   console.log('res:',res);\n      //   this.Intents = res;\n      //   console.log('this.Intents:',this.Intents)\n      // }, err => {\n      //   console.log(err);\n      // });\n  },err=>{\n    console.log(\"Session expire in Create Delivery channel\"+err);\n    this.router.navigate(['/login'])\n  })\n \n}\n\n// delete User\ndeleteAlert(id) {\nconsole.log('In Delete User');\nconsole.log(id);\nthis.api.deleteDataSourceNew(id)\n.subscribe(res => {\n  console.log('user new DataSource');\n  this.api.getDataSourceNew()\n  .subscribe(res => {\n    // this.sankbar.open('Succesfully deleted user', 'Close', {\n    //   duration: 3000,\n    // });\n    console.log(res);\n    this.dataSource = new MatTableDataSource(res);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }, err => {\n    console.log(err);\n  });\n        }, (err) => {\nconsole.log(err);\n}\n);\n}\n\n}\n\n// export class AlertDataSource extends DataSource<any> {\n// constructor(private api: ApiService) {\n//   super();\n// }\n\n// connect() {\n//   return this.api.DataSourceDetails();\n// }\n\n// disconnect() {\n\n// }\n\n\n\n// }\n","module.exports = \"\\r\\n\\r\\n#container{\\r\\n    border: 1px dotted rgb(173, 170, 170);\\r\\n  \\r\\n  }\\r\\n  \\r\\n  \\r\\n  /* .btn-default{\\r\\n  margin-left: 120px;\\r\\n  margin-top:-75px;\\r\\n  } */\\r\\n  \\r\\n  \\r\\n  /* .example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n  } */\\r\\n  \\r\\n  \\r\\n  .example-full-width {\\r\\n  width: 100%;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .mat-form-field{\\r\\n  width: 80%;\\r\\n  }\"","module.exports = \"<br><br><br><br>\\n\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"btn-group btn-breadcrumb \\\">\\n                <a routerLink=\\\"/home\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n                <a  class=\\\"btn btn-default\\\">Admin</a>\\n                <a routerLink=\\\"/admin/dataSourceDetails\\\" class=\\\"btn btn-default\\\">Data Source</a>\\n                <a routerLink=\\\"/admin/createDataSource\\\" class=\\\"btn btn-default active\\\">Create/Edit Data Sources</a>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-5\\\"></div>\\n      <div class=\\\" col-md-4\\\" ></div>\\n      <div class=\\\"col-md-3\\\"></div>\\n  </div>\\n  <br><br>\\n\\n  <div id=\\\"shift\\\">\\n  <div class=\\\"container\\\" id=\\\"container\\\"><br>\\n \\n    <div class=\\\"form-group \\\">\\n        <form   [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onFormSubmit(userForm.value)\\\" >\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-1\\\"></div>\\n              <!-- <div class=\\\"col-md-2\\\">\\n                <div>Source Name</div>\\n              </div> -->\\n              <div class=\\\"col-md-5\\\">\\n                <!-- <input class=\\\"form-control\\\" formControlName=\\\"sourcename\\\"> -->\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                  <input matInput placeholder=\\\"Source Name\\\" formControlName=\\\"sourcename\\\">\\n                </mat-form-field>\\n              </div>\\n            </div>\\n            <br>\\n            <br>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-1\\\"></div>\\n                <!-- <div class=\\\"col-md-2\\\">\\n                  <div>User Directory</div>\\n                </div> -->\\n                <div class=\\\"col-md-5\\\">\\n                  <!-- <input class=\\\"form-control\\\" formControlName=\\\"userdirectory\\\"> -->\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput  placeholder=\\\"User Directory\\\" formControlName=\\\"userdirectory\\\">\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <br>\\n              <br>\\n              <div class=\\\"row\\\">\\n              <div class=\\\"col-md-1\\\"></div>\\n              <div class=\\\"col-md-5\\\">\\n              <!-- <div class=\\\"col-md-1\\\"></div> -->\\n               <mat-form-field>\\n              <mat-select  placeholder=\\\"Connect as\\\" formControlName = \\\"connect\\\">\\n                <mat-option *ngFor='let food of foods' [value]=\\\"food.value\\\">\\n                  {{food.viewValue}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n              </div>\\n            </div>\\n      \\n             <br>\\n             <br>\\n             <div class=\\\"row\\\">\\n              <div class=\\\"col-md-1\\\"></div>\\n              <div class=\\\"col-md-8\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"MonogoDB Port\\\" formControlName=\\\"mongoDbPort\\\">\\n              </mat-form-field>\\n              </div>\\n              </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-1\\\"></div>\\n              <div class=\\\"col-md-8\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Certificate Password\\\" formControlName=\\\"certPassword\\\">\\n              </mat-form-field>\\n              </div>\\n              </div>\\n            <div class=\\\"row\\\">\\n            <div class=\\\"col-md-1\\\"></div>\\n            <div class=\\\"col-md-5\\\">\\n                   \\n                    <!-- <input  class=\\\"form-control\\\" formControlName=\\\"hostname\\\">  -->\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput   placeholder=\\\"Host Name\\\" formControlName=\\\"hostname\\\">\\n                    </mat-form-field>\\n\\n\\n                  </div> \\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-10\\\">\\n\\n                      <!-- <input class=\\\"form-control\\\" formControlName=\\\"connect\\\">  -->\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"Source Type\\\"   formControlName=\\\"type\\\">\\n                      </mat-form-field>\\n                      </div>\\n                      <!-- <div class=\\\"col-md-7\\\"></div><br> -->\\n                      \\n                    </div>\\n                    <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-8\\\">\\n                        <button type=\\\"submit\\\" id=\\\"btn-default\\\" class=\\\"btn btn-default form-control\\\">Test Connection</button>\\n                        <!-- <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Test Connection</button> -->\\n                      </div>\\n                    </div>\\n      \\n                  </div>\\n             \\n            </div>\\n           \\n        </form>\\n    </div>\\n \\n  <br><br>\\n\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { AdminService } from '../../admin.service';\nexport interface Food {\n  value: string;\n  viewValue: string;\n}\n@Component({\n  selector: 'app-edit-datasource',\n  templateUrl: './edit-datasource.component.html',\n  styleUrls: ['./edit-datasource.component.css']\n})\nexport class EditDatasourceComponent implements OnInit {\n\n    \n  foods: Food[] = [\n    {value: 'None', viewValue: 'None'},\n    {value: 'Server', viewValue: 'Server'},\n    {value: 'qsadmin', viewValue: 'qsadmin'},\n    {value: 'administrator', viewValue: 'administrator'}\n  ];\n\n  userForm: FormGroup;\n  sourcename:string='';\n  userdirectory:string='';\n  hostname:string='';\n  connect:string='';\n  type:string='';\n  mongoDbPort:string='';  \n  certPassword:string;\n\n \n  // constructor(private router: Router, \n  //             private api: ApiService, \n  //             private formBuilder: FormBuilder,\n  //             public snackbar: MatSnackBar,) { }\n\nconstructor(private route: ActivatedRoute,\n             private api: AdminService, \n             private router: Router,\n                private formBuilder: FormBuilder,\n                public snackbar: MatSnackBar,\n               ) { }\n\n\n               ngOnInit() {\n                console.log('route succesfully');\n                console.log(this.route.snapshot.params['id']);\n                this.onEdit(this.route.snapshot.params['id']);\n            \n                console.log('test route succesfully');\n                console.log(this.route.snapshot.params['id']);\n                this.onEdit(this.route.snapshot.params['id']);\n          \n             \n                 \n              \n              this.userForm = this.formBuilder.group({\n                'sourcename' :'' ,\n                'userdirectory':'',\n                'hostname' : '',\n                'connect' : '',\n                'type':'',\n                'mongoDbPort':'',  \n                'certPassword':'',\n                \n              })\n            }\n            onEdit(id) {\n              console.log('In Edit  datasourse');\n              console.log(id);\n              this.api.getDataSourceCahnnel(id).subscribe( res => {\n                console.log('Get Edit Data');\n                console.log(res);\n          \n                const id8 = res._id;\n                console.log(id8);\n                 this.userForm.get('sourcename').setValue(res.sourcename);\n                 this.userForm.get('userdirectory').setValue(res.userdirectory);\n                 this.userForm.get('hostname').setValue(res.hostname);\n                 this.userForm.get('connect').setValue(res.connect);\n                 this.userForm.get('type').setValue(res.type);\n                 this.userForm.get('mongoDbPort').setValue(res.mongoDbPort);\n                 this.userForm.get('certPassword').setValue(res.certPassword);\n              });\n              \n            }\n          \n          \n          \n            // onFormSubmit(form:NgForm) {\n            //   console.log(\"Hi..\")\n            //   console.log(\"form:\",form)\n           \n            //   this.api.DataSourceEdit(form)\n            //    .subscribe(res => {\n            //      console.log('res',res)\n            //       }, (err) => {\n            //         this.snackbar.open('Enter Valid Field', 'Close', {\n            //           duration: 3000,\n            //       });\n            //     });\n            // }}\n          onFormSubmit(form:NgForm) {\n                console.log(this.route.snapshot.params['id'])\n                this.api.DataSourceEditDetails(this.route.snapshot.params['id'], form)\n                  .subscribe(res => {\n                      res['_id']=this.route.snapshot.params['id']\n                      let id = res['_id'];\n                      this.snackbar.open('Added DataSource Details.. ', 'Close', {\n                        duration: 3000,\n                      });\n                      this.router.navigate(['admin/dataSourceDetails']);\n                    }, (err) => {\n                      this.snackbar.open('Something went wrong...!!', 'Close', {\n                        duration: 3000,\n                      });\n                      console.log(err);\n                    }\n                  );\n              }\n          \n          \n          \n          \n            }\n          ","module.exports = \"#edit{\\r\\n    background-color:rgb(231, 76, 60);\\r\\n    padding-top: 14px;\\r\\n}\\r\\n\\r\\n.btn-primary{\\r\\n    margin-left: 40%;\\r\\n}\\r\\n\\r\\n#container1{\\r\\n    border: 1px solid rgb(236, 235, 235);\\r\\n    margin-left:20%\\r\\n}\\r\\n\\r\\n/* #margin{\\r\\n    margin-left: 10% ;\\r\\n} */\\r\\n\\r\\n.btn-primary {\\r\\n  background-color:rgb(231, 76, 60);\\r\\n  border: rgb(231, 76, 60);\\r\\n}\\r\\n\\r\\n.example-form {\\r\\n    min-width: 80px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n.example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n.example-full-width:nth-last-child() {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n.button-row {\\r\\n    margin: 10px 0;\\r\\n  }\\r\\n\\r\\n.text-ping{\\r\\n    color: red\\r\\n}\\r\\n\\r\\n.text-white{\\r\\n    color: white;\\r\\n}\\r\\n\"","module.exports = \"<br><br><br><br>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n          <div class=\\\"btn-group btn-breadcrumb \\\">\\n              <a routerLink=\\\"/pingAlert/alertInbox\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n              <a class=\\\"btn btn-default\\\">Admin</a>\\n              <a routerLink=\\\"/admin/deliveryChannelDetails\\\" class=\\\"btn btn-default\\\">Delivery Channel Details</a>\\n              <a class=\\\"btn btn-default active\\\">Create/Edit Delivery Channel</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<br>\\n<div class=\\\"container\\\">\\n    <form [formGroup]=\\\"frmCreateDeliveryChannel\\\" (ngSubmit)=\\\"onFormSubmit(frmCreateDeliveryChannel.value)\\\">\\n        <mat-card>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                    <mat-label>Channel Name </mat-label>\\n                  <!-- <mat-select placeholder=\\\"Channel Name\\\" formControlName=\\\"DeliveryChannelName\\\" name=\\\"ChannelName1\\\" required>\\n                      <mat-option>--  Select Channel Name --</mat-option>\\n                    <mat-option *ngFor=\\\"let chName of ChannelNameArr\\\" [value]=\\\"chName.CahnnelName\\\">\\n                      {{chName.CahnnelName}}\\n                    </mat-option>\\n                  </mat-select> -->\\n                  <input type=\\\"text\\\" matInput placeholder=\\\"Channel Name\\\" formControlName=\\\"DeliveryChannelName\\\"\\n                    [errorStateMatcher]=\\\"matcher\\\" required>\\n                  <mat-error>\\n                      <span *ngIf=\\\"!frmCreateDeliveryChannel.get('DeliveryChannelName').valid && frmCreateDeliveryChannel.get('DeliveryChannelName').touched\\\">Please select user access</span>\\n                    </mat-error>\\n                  <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>how_to_reg</mat-icon> -->\\n                  <!-- [selected]=\\\"car.color.id == qlikSenseApps.Appid\\\" -->\\n                </mat-form-field>\\n                </div>\\n                </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                        <mat-label>Channel Type</mat-label>\\n                      <mat-select required placeholder=\\\"Channel Type\\\" formControlName=\\\"DeliveryChannelType\\\" name=\\\"userRole\\\" (selectionChange)=\\\"ChannelTypeChanged($event.value)\\\" required >\\n                          <mat-option>-- Select Channel TYpe --</mat-option>\\n                        <mat-option *ngFor=\\\"let CType of ChannelType\\\" [value]=\\\"CType.CahnnelTypeName\\\">\\n                          {{CType.CahnnelTypeName}}\\n                        </mat-option>\\n                      </mat-select>\\n                      <mat-error>\\n                          <span *ngIf=\\\"!frmCreateDeliveryChannel.get('DeliveryChannelType').valid && frmCreateDeliveryChannel.get('DeliveryChannelType').touched\\\">Please select user role</span>\\n                        </mat-error>\\n                    </mat-form-field>\\n                    </div>\\n                    </div>\\n                </div>\\n        </mat-card>\\n        <br><br>\\n      <ng-container *ngIf=\\\"ShowEmail\\\">\\n          <mat-panel-title>\\n              Email Connection Details:\\n          </mat-panel-title>\\n   <mat-card>\\n   <div class=\\\"container\\\">\\n           <div class=\\\"from-group\\\">\\n               <div class=\\\"row\\\">\\n                  \\n                   <div class=\\\"col-md-5\\\">\\n                     \\n                     <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                       <mat-label>Address </mat-label>\\n                       \\n                       <input required matInput placeholder=\\\"Enter Delivery Channel Name\\\" formControlName=\\\"Address\\\"\\n                              [errorStateMatcher]=\\\"matcher\\\">\\n                       <mat-error>\\n                         <span *ngIf=\\\"!frmCreateDeliveryChannel.get('Address').valid && frmCreateDeliveryChannel.get('Address').touched\\\">Please enter specific Address</span>\\n                       </mat-error>\\n                       \\n                     </mat-form-field>\\n                   </div>\\n                   <div class=\\\"col-md-4\\\">\\n                     <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n                       <mat-label>PortNo </mat-label>\\n                       \\n                       <input required  matInput placeholder=\\\"Select Channel\\\" formControlName=\\\"PortNo\\\"\\n                              [errorStateMatcher]=\\\"matcher\\\">\\n                              <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n\\n                              <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>perm_identity</mat-icon> -->\\n                       <mat-error>\\n                         <span *ngIf=\\\"!frmCreateDeliveryChannel.get('PortNo').valid && frmCreateDeliveryChannel.get('PortNo').touched\\\">Please enter Port No.</span>\\n                       </mat-error>\\n                     </mat-form-field>\\n                   </div>\\n                   \\n               </div>\\n           <br>\\n           <div class=\\\"row\\\">\\n               <div class=\\\"col-md-5\\\">\\n                   <mat-radio-group formControlName=\\\"SecurityLayerID\\\">\\n                       <mat-radio-button class=\\\"example-margin\\\" color =\\\"warn\\\" value=\\\"TLS Security\\\" (click)=\\\"show = 'false' \\\">Use TLS(Transport Layer Security)</mat-radio-button>\\n                        <br>\\n                       <mat-radio-button class=\\\"example-margin\\\" color =\\\"warn\\\" value=\\\"SSL Security\\\" (click)=\\\"show = 'true' \\\">Use SSL(Secure Socet Layer)</mat-radio-button>\\n                   </mat-radio-group>\\n               </div>\\n           </div>\\n           <br>\\n           <div class=\\\"row\\\">\\n               <div class=\\\"col-md-5\\\">\\n                 <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                   <mat-label>User Email </mat-label>\\n                   <!-- <span matPrefix>+1 &nbsp;</span> -->\\n                   <input required matInput email placeholder=\\\"Enter User Email\\\" formControlName=\\\"EmailUserName\\\"\\n                          [errorStateMatcher]=\\\"matcher\\\">\\n                   <mat-error>\\n                     <span *ngIf=\\\"!frmCreateDeliveryChannel.get('EmailUserName').valid && frmCreateDeliveryChannel.get('EmailUserName').touched\\\">Please enter User Email</span>\\n                   </mat-error>\\n                   <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>folder_shared</mat-icon> -->\\n                 </mat-form-field>\\n               </div>\\n             <div class=\\\"col-md-6\\\">\\n                 <div class=\\\"row\\\">\\n                     <div class=\\\"col-md-5\\\">\\n                       <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n                         <mat-label>Password </mat-label>\\n                         <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n                         <input required type=\\\"password\\\" matInput placeholder=\\\"Enter Password\\\" formControlName=\\\"Password\\\"\\n                                [errorStateMatcher]=\\\"matcher\\\" >\\n                                <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n\\n                                <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>perm_identity</mat-icon> -->\\n\\n                         <mat-error>\\n                           <span *ngIf=\\\"!frmCreateDeliveryChannel.get('Password').valid && frmCreateDeliveryChannel.get('Password').touched\\\">Please enter password</span>\\n                         </mat-error>\\n                       </mat-form-field>\\n                     </div>\\n                   <div class=\\\"col-md-2\\\">\\n                       <button type=\\\"button\\\" (click)=\\\"MailConfirmation(frmCreateDeliveryChannel.value)\\\"  class=\\\"btn btn-primary\\\">Test Connection</button>\\n                   </div>\\n                 </div>\\n             </div>\\n           </div><br>\\n           <div class=\\\"row\\\">\\n               <div class=\\\"col-md-5\\\">\\n                 <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n                   <mat-label>Default Sender Email ID </mat-label>\\n                   <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n                   <input required matInput placeholder=\\\"Enter Default Sennder Email Id\\\" formControlName=\\\"DefaultSenderEmail\\\"\\n                          [errorStateMatcher]=\\\"matcher\\\">\\n                          <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n\\n                          <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>perm_identity</mat-icon> -->\\n\\n                   <mat-error>\\n                     <span *ngIf=\\\"!frmCreateDeliveryChannel.get('DefaultSenderEmail').valid && frmCreateDeliveryChannel.get('DefaultSenderEmail').touched\\\">Please enter User Email ID</span>\\n                   </mat-error>\\n                 </mat-form-field>\\n               </div>\\n             </div>\\n            \\n         </div>\\n         <br><br><br>\\n       <!-- <div class=\\\"row\\\">\\n         <div class=\\\"col-md-5\\\"></div>\\n         <div>\\n           <button class=\\\" col-md-2\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onAddValues(email, app)\\\" type=\\\"submit\\\">Save</button>\\n           &nbsp;&nbsp;&nbsp;&nbsp;\\n           <button class=\\\" col-md-2\\\" class=\\\"btn btn-default\\\" >Cancel</button>\\n         </div>\\n\\n\\n       </div> -->\\n   </div>\\n\\n   </mat-card>\\n      </ng-container> \\n      <br>       \\n\\n<!-- Mobile Channel Details -->\\n<!-- *********************************************** -->\\n<ng-container *ngIf=\\\"ShowMobileApp\\\">\\n<mat-panel-title>\\n  Mobile App Connection Details:\\n</mat-panel-title>\\n<mat-card>\\n<div class=\\\"container\\\">\\n<div class=\\\"from-group\\\">\\n  <div class=\\\"row\\\">\\n      \\n      <div class=\\\"col-md-5\\\">\\n        <!-- <input type=\\\"text\\\" class=\\\"form-control\\\"> -->\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n          <mat-label>Device Name </mat-label>\\n        <mat-select required placeholder=\\\"Device Name\\\" formControlName=\\\"DeviceName\\\" name=\\\"DeviceName\\\" required>\\n            <mat-option>--  Select Device Name --</mat-option>\\n          <mat-option *ngFor=\\\"let chName of MobileChannels\\\" [value]=\\\"chName.name\\\">\\n            {{chName.name}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n            <span *ngIf=\\\"!frmCreateDeliveryChannel.get('DeliveryChannelName').valid && frmCreateDeliveryChannel.get('DeliveryChannelName').touched\\\">Please select user access</span>\\n          </mat-error>\\n        <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>how_to_reg</mat-icon> -->\\n        <!-- [selected]=\\\"car.color.id == qlikSenseApps.Appid\\\" -->\\n      </mat-form-field>\\n      </div>\\n      <!-- <div class=\\\"col-md-1\\\"></div> -->      \\n      \\n  </div>\\n<br>\\n\\n<!-- API KEY Contol -->\\n<div class=\\\"row\\\">\\n  \\n  <div class=\\\"col-md-5\\\">\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n      <mat-label>API Key</mat-label>\\n      <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n      <input required matInput placeholder=\\\"Enter API Key\\\" formControlName=\\\"APIKey\\\"\\n              [errorStateMatcher]=\\\"matcher\\\">\\n              <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n\\n              <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>perm_identity</mat-icon> -->\\n\\n      <mat-error>\\n        <span *ngIf=\\\"!frmCreateDeliveryChannel.get('APIKey').valid && frmCreateDeliveryChannel.get('APIKey').touched\\\">Please Enter API Key</span>\\n      </mat-error>\\n    </mat-form-field>\\n  </div>\\n</div>\\n\\n<!-- Sender Key Controls -->\\n<div class=\\\"row\\\">\\n  \\n  <div class=\\\"col-md-5\\\">\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n      <mat-label>Sender Key</mat-label>\\n      <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n      <input matInput placeholder=\\\"Enter Sender Key\\\" formControlName=\\\"SenderKey\\\"\\n            [errorStateMatcher]=\\\"matcher\\\">\\n            <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n\\n            <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>perm_identity</mat-icon> -->\\n\\n      <mat-error>\\n        <span *ngIf=\\\"!frmCreateDeliveryChannel.get('SenderKey').valid && frmCreateDeliveryChannel.get('SenderKey').touched\\\">Please Enter Sender Key</span>\\n      </mat-error>\\n    </mat-form-field>\\n  </div>\\n</div>\\n\\n<!-- Server controls -->\\n<div class=\\\"row\\\">\\n  \\n  <div class=\\\"col-md-5\\\">\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n      <mat-label>Server</mat-label>\\n      <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n      <input matInput placeholder=\\\"Enter Server\\\" formControlName=\\\"Server\\\"\\n            [errorStateMatcher]=\\\"matcher\\\">\\n            <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n\\n            <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>perm_identity</mat-icon> -->\\n\\n      <mat-error>\\n        <span *ngIf=\\\"!frmCreateDeliveryChannel.get('Server').valid && frmCreateDeliveryChannel.get('Server').touched\\\">Please Enter Server Details</span>\\n      </mat-error>\\n    </mat-form-field>\\n  </div>\\n</div>\\n\\n\\n</div>\\n<br><br><br>\\n<!-- <div class=\\\"row\\\">\\n<div class=\\\"col-md-5\\\"></div>\\n<div>\\n<button class=\\\" col-md-2\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onAddValues(email, app)\\\" type=\\\"submit\\\">Save</button>\\n&nbsp;&nbsp;&nbsp;&nbsp;\\n<button class=\\\" col-md-2\\\" class=\\\"btn btn-default\\\" >Cancel</button>\\n</div>\\n\\n\\n</div> -->\\n</div>\\n\\n</mat-card>\\n</ng-container>\\n<br>\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-5\\\"></div>\\n<button style=\\\"margin-left: 10px;\\\" class=\\\"col-md-1\\\" [disabled]=\\\"!frmCreateDeliveryChannel.valid\\\" mat-raised-button id=\\\"btn-danger\\\" (click)=\\\"onAddValues(email, app)\\\" type=\\\"submit\\\">Save</button>\\n<button style=\\\"margin-left: 10px;\\\" class=\\\" col-md-1\\\" mat-raised-button id=\\\"btn-default\\\" >Cancel</button>\\n</div>\\n  </form>\\n</div>\\n      \\n  \\n\\n   \\n\\n    \\n    <!-- <p>Form value: {{ frmCreateDeliveryChannel.value | json }}</p> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminService } from '../../admin.service';\nimport { AppService } from '../../../app.service';\n\n@Component({\n  selector: 'app-create-delivery-channel',\n  templateUrl: './create-delivery-channel.component.html',\n  styleUrls: ['./create-delivery-channel.component.css']\n})\nexport class CreateDeliveryChannelComponent implements OnInit {\n  matcher;\n  ChannelNameArr = [\n  ];\n  ChannelType = [\n  ];\n  public ShowMobileApp:boolean = false;\n  public ShowEmail:boolean = false;\n  public ShowEmailDetails:boolean = true;\n  frmCreateDeliveryChannel: FormGroup;\n  DeliveryChannelID: String='';\n  DeliveryChannelName: String='';\n  DeliveryChannelType : String='';\n  Address : String='';\n  PortNo : String='';\n  SecurityLayerID : String='';\n  EmailUserName : String='';\n  Password:String='';\n  DefaultSenderEmail:String='';\n  InsertBy : String= '';\n  usercount:String='';\n  count: number=0;\n  LoginUserID: string = '';\n  APIKey:String='';\n  SenderKey:String='';\n  Server:String=''\n  userID: string = '';\n  uID: any =  '';\n  selectedChannelValue:any='';\n  MobileChannels = [\n    { id: 1, name: 'IOS' },\n    { id: 2, name: 'Android' }\n  ];\n\n  RRole = [\n    { id: 2, name: 'Administrator' },\n    { id: 3, name: 'Connnection Manager' },\n    { id: 4, name: 'User' }\n  ];\n  constructor(private router: Router,private CommApi:AppService, private api: AdminService, private formBuilder: FormBuilder,public snackbar: MatSnackBar,) { }\n\n  ngOnInit() {\n    this.CommApi.getLoggeddUser().subscribe(res=>{\n      this.frmCreateDeliveryChannel.get('InsertBy').setValue(res.PingUserName) \n      this.frmCreateDeliveryChannel.get('LoginUserID').setValue(res.PingUserID)\n      this.api.getDeliveryCahnnels()\n      .subscribe(res => {\n       console.log(\" count Channel res\");console.log(res);\n        this.count=res.length;\n        this.count=this.count+1;\n        this.userID = 'DC-' + this.count ;\n        this.uID = this.frmCreateDeliveryChannel.get('DeliveryChannelID').setValue(this.userID);\n  \n      }, err => {\n        console.log(err);\n        this.usercount='0';\n      });\n  \n     //  this.api.getAllDeliveryCahnnels()\n     //  .subscribe(res => {\n     //    console.log(\"********* New Method\"+res);\n     //    this.count=res.length;\n     //    this.count=this.count+1;\n     //    this.userID = 'DC-' + this.count ;\n     //    this.uID = this.frmCreateDeliveryChannel.get('DeliveryChannelID').setValue(this.userID);\n     //   console.log(\"******????\"+this.userID)\n     //  }, err => {\n     //    console.log(err);\n     //    this.usercount='0';\n     //  });\n  \n      this.api.getChannelNames()\n      .subscribe(res => {\n      console.log(res);\n      for (var i = 0; i < res.length; i++) {\n                  var ChannelID ;\n                  var ChannelName;\n                  ChannelID =  res[i].ChannelID;\n                  ChannelName =  res[i].ChannelName;\n  \n                  console.log('-------',ChannelID,'-----',ChannelName);\n                 // console.log('Applist data -----',JSON.stringify(res[i],null,4));\n  \n                  this.ChannelNameArr.push(\n                    {\n                      \"ChannelID\": ChannelID,\n                      \"CahnnelName\": ChannelName\n                    }\n                  );\n          }\n          var chnName=JSON.stringify(this.ChannelNameArr,null,4);\n          console.log(\"New Channel Name\"+chnName) ;\n          console.log(\"----------------------------\");\n          // console.log(this.QlikSenseMeasures);\n          // console.log(\"--------------------------------\")\n          // console.log(this.QlikSenseDiamentions);\n  \n      // this.visibleProgressBar=false;\n      }, err => {\n         console.log(err);\n        //  this.visibleProgressBar=false;\n      });\n      // this.usercount=usersCnt\n   //Get Channel Type\n   this.api.getChannelTypes()\n   .subscribe(res => {\n  console.log('Cahnnel Types*****'+res);\n  \n   for (var i = 0; i < res.length; i++) {\n               var ChannelTypeID ;\n               var ChannelTypeName;                \n               ChannelTypeID =  res[i].ChannelTypeID;\n               ChannelTypeName =  res[i].ChannelTypeName;\n  \n               console.log('-------',ChannelTypeID,'-----',ChannelTypeName);\n              // console.log('Applist data -----',JSON.stringify(res[i],null,4));\n  \n               this.ChannelType.push(\n                 {\n                   \"ChannelTypeID\": ChannelTypeID,\n                   \"CahnnelTypeName\": ChannelTypeName\n                 }\n               );\n       }\n       var chnName1=JSON.stringify(this.ChannelType,null,4);\n      console.log(\"New Channel Type  Name\"+chnName1) ;\n       console.log(\"----------------------------\");\n       // console.log(this.QlikSenseMeasures);\n       // console.log(\"--------------------------------\")\n       // console.log(this.QlikSenseDiamentions);\n  \n   // this.visibleProgressBar=false;    \n   }, err => {\n      console.log(err);\n     //  this.visibleProgressBar=false;\n   });\n    },err => {\n      console.log(\"err\");\n      console.log(err);\n      this.router.navigate(['/login']);\n    })\n \n\n    this.frmCreateDeliveryChannel = this.formBuilder.group({\n      // id: '',\n      DeliveryChannelID:[this.uID,Validators.required],\n      DeliveryChannelName: new FormControl(this.ChannelNameArr, Validators.required),\n      DeliveryChannelType : new FormControl(this.ChannelType,Validators.required),\n      Address :[null,Validators.required],\n      PortNo :[null,Validators.required],\n      SecurityLayerID :[null,Validators.required],\n      EmailUserName :[null,Validators.required],\n      Password:[null,Validators.required],\n      DefaultSenderEmail:[null,Validators.required],\n      InsertBy : '',\n      LoginUserID:'',\n      APIKey:[null,Validators.required],\n      SenderKey:[null,Validators.required], \n      Server:[null,Validators.required],\n      DeviceName: new FormControl(this.MobileChannels, Validators.required),\n    })\n\n  }\n  onAddValues(email,app){}\n  email;\n  app;\n\n  ChannelTypeChanged(event) {\n   //update the ui\n   this.selectedChannelValue =event;\n   console.log(\"Selected Value is\"+this.selectedChannelValue)  \n   if(event==\"Email\"){\n     console.log(\"In email select value\"+this.selectedChannelValue);\n       this.ShowEmail=true;\n       this.ShowMobileApp=false;\n       // this.frmCreateDeliveryChannel = this.formBuilder.group({\n       //    id: '',\n       //   // DeliveryChannelID:[this.uID,Validators.required],\n       //   // DeliveryChannelName: new FormControl(this.ChannelNameArr, Validators.required),\n       //   // DeliveryChannelType : new FormControl(this.ChannelType,Validators.required),\n       //   Address :[null,Validators.required],\n       //   PortNo :[null,Validators.required],\n       //   SecurityLayerID :[null,Validators.required],\n       //   EmailUserName :[null,Validators.required],\n       //   Password:[null,Validators.required],\n       //   DefaultSenderEmail:[null,Validators.required],\n       //   InsertBy : AuthService.loggedUserName,\n       //   LoginUserID:AuthService.loggedUserTableID,\n       //   APIKey:[null],\n       //   SenderKey:[null],\n       //   Server:[null],\n       //   DeviceName: new FormControl(this.MobileChannels),\n       // })\n   }\n   else if(event==\"Mobile App\"){\n     console.log(\"In Mobile App select value\"+this.selectedChannelValue);\n     this.ShowMobileApp=true;\n     this.ShowEmail=false;\n     // this.frmCreateDeliveryChannel = this.formBuilder.group({\n     //    id: '',\n     //   // DeliveryChannelID:[this.uID,Validators.required],\n     //   // DeliveryChannelName: new FormControl(this.ChannelNameArr, Validators.required),\n     //   // DeliveryChannelType : new FormControl(this.ChannelType,Validators.required),\n     //   Address :[null],\n     //   PortNo :[null],\n     //   SecurityLayerID :[null],\n     //   EmailUserName :[null],\n     //   Password:[null],\n     //   DefaultSenderEmail:[null],\n     //   InsertBy : AuthService.loggedUserName,\n     //   LoginUserID:AuthService.loggedUserTableID,\n     //   APIKey:[null,Validators.required],\n     //   SenderKey:[null,Validators.required],\n     //   Server:[null,Validators.required],\n     //   DeviceName: new FormControl(this.MobileChannels, Validators.required),\n     // })\n   }\n   else if(event==\"Email,Mobile App\"){\n     console.log(\"In Email,Mobile App select value\"+this.selectedChannelValue);\n     this.ShowMobileApp=true;\n     this.ShowEmail=true;\n     // this.frmCreateDeliveryChannel = this.formBuilder.group({\n     //    id: '',\n     //   // DeliveryChannelID:[this.uID,Validators.required],\n     //   // DeliveryChannelName: new FormControl(this.ChannelNameArr, Validators.required),\n     //   // DeliveryChannelType : new FormControl(this.ChannelType,Validators.required),\n     //   Address :[null],\n     //   PortNo :[null],\n     //   SecurityLayerID :[null],\n     //   EmailUserName :[null],\n     //   Password:[null],\n     //   DefaultSenderEmail:[null],\n     //   InsertBy : AuthService.loggedUserName,\n     //   LoginUserID:AuthService.loggedUserTableID,\n     //   APIKey:[null,Validators.required],\n     //   SenderKey:[null,Validators.required],\n     //   Server:[null,Validators.required],\n     //   DeviceName: new FormControl(this.MobileChannels, Validators.required),\n     // })\n   }\n   else{\n     this.ShowMobileApp=false;\n     this.ShowEmail=false;\n   }\n }\n\n  onFormSubmit(form:NgForm) {\n    this.api.postDeliveryChannel(form)\n      .subscribe(res => {\n          this.snackbar.open('Succesfully submitted Delivery Channel details', 'Close', {\n            duration: 3000,\n          });\n          this.router.navigate(['/admin/deliveryChannelDetails']);\n          console.log(\"Successfully Record Saved....\");\n        }, (err) => {\n          this.snackbar.open('Something went wrong..!!', 'Close', {\n            duration: 3000,\n          });\n          console.log(err);\n        });\n  }\n\n  MailConfirmation(form:NgForm)\n  {\n     // Send Create Alert Mail....\n     this.api.ValidateEmailID(form).subscribe(res => {\n      console.log('Mail Sent');      \n     console.log('*****'+JSON.stringify(res,null,4));\n })\n }\n\n}","module.exports = \"/* Structure */\\r\\ntable {\\r\\n    width: 100%;\\r\\n    transition: none !important;\\r\\n    box-shadow: none !important;\\r\\n    margin-top: -30px;\\r\\n  }\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 70%;\\r\\n  }\\r\\n#table-responsive{\\r\\n    margin-top: 5px;\\r\\n  }\\r\\n#row2{\\r\\n    margin-top: -2px;\\r\\n    padding-top: 8px;\\r\\n    padding-bottom: 10px;\\r\\n  }\\r\\n.table-responsive{\\r\\n    margin-top: -15px;\\r\\n    padding-top: 40px;\\r\\n  }\\r\\ntr.mat-header-row{\\r\\n    height: 37px;\\r\\n  }\\r\\n.table-bordered>thead>tr>th{\\r\\n    border: 1px solid rgb(231, 76, 60);\\r\\n  }\\r\\n/* Switch Button */\\r\\ntd{\\r\\n    color: rgb(127, 127, 127)\\r\\n  }\\r\\n.mat-header-cell {\\r\\n    color: rgb(102,102,102);\\r\\n  }\\r\\nth{\\r\\n    padding-top: -100px;\\r\\n    font-size: 14px;\\r\\n    background-color: rgb(238, 238, 238);\\r\\n  }\\r\\n#btn{\\r\\n    background-color: rgb(249, 25, 66);\\r\\n    color: rgb(255, 255, 255)\\r\\n  }\\r\\n.switch {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    width: 60px;\\r\\n    height: 24px;\\r\\n  }\\r\\n/* Hide default HTML checkbox */\\r\\n.switch input {display:none;}\\r\\n/* The slider */\\r\\n.slider {\\r\\n    position: absolute;\\r\\n    cursor: pointer;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    background-color: rgb(216, 50, 50);\\r\\n    transition: .4s;\\r\\n  }\\r\\n.slider:before {\\r\\n    position: absolute;\\r\\n    content: \\\"\\\";\\r\\n    height: 16px;\\r\\n    width: 16px;\\r\\n    left: 4px;\\r\\n    bottom: 4px;\\r\\n    background-color: white;\\r\\n    transition: .4s;\\r\\n  }\\r\\ninput:checked + .slider {\\r\\n    background-color:rgb(64, 143, 64);\\r\\n  }\\r\\ninput:focus + .slider {\\r\\n    box-shadow: 0 0 1px rgb(64, 143, 64);\\r\\n  }\\r\\ninput:checked + .slider:before {\\r\\n    -webkit-transform: translateX(26px);\\r\\n    transform: translateX(36px);\\r\\n  }\\r\\n/* Rounded sliders */\\r\\n.slider.round {\\r\\n    border-radius: 34px;\\r\\n  }\\r\\n.slider.round:before {\\r\\n    border-radius: 50%;\\r\\n  }\\r\\n\"","module.exports = \"<br><br><br><br>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"btn-group btn-breadcrumb \\\">\\n                <a routerLink=\\\"/pingAlert/alertInbox\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n                <a class=\\\"btn btn-default\\\">Admin</a>\\n                <a routerLink=\\\"/admin/deliveryChannelDetails\\\" class=\\\"btn btn-default\\\">Delivery Channel Details</a>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <form [formGroup]=\\\"editPingUser\\\" (ngSubmit)=\\\"onFormSubmit(QlikServer.value)\\\">\\n        <div class=\\\"row\\\">\\n      \\n            <div class=\\\"col-md-5\\\">\\n                <!-- <input type=\\\"text\\\" class=\\\"form-control\\\"> -->\\n                <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                  <mat-label>Channel Type *</mat-label>\\n                <mat-select placeholder=\\\"Device Name\\\" formControlName=\\\"DeviceName\\\" (selectionChange)=\\\"ChannelTypeChanged($event.value)\\\" name=\\\"DeviceName\\\" required>\\n                    <mat-option>--  Select Device Name --</mat-option>\\n                  <mat-option *ngFor=\\\"let chName of ChannelType\\\" [value]=\\\"chName.CahnnelTypeName\\\">\\n                    {{chName.CahnnelTypeName}}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error>\\n                    <span *ngIf=\\\"!editPingUser.get('DeviceName').valid && editPingUser.get('DeviceName').touched\\\">Please select user access</span>\\n                  </mat-error>\\n                <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>how_to_reg</mat-icon> -->\\n                <!-- [selected]=\\\"car.color.id == qlikSenseApps.Appid\\\" -->\\n              </mat-form-field>\\n              </div>\\n            <!-- <div class=\\\"col-md-1\\\"></div> -->      \\n            <div class=\\\"input-group col-md-4\\\" style=\\\"float:right\\\">\\n              <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" id=\\\"txtSearch\\\"/> -->\\n              <input class=\\\"form-control\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" >\\n                  <div class=\\\"input-group-btn\\\">\\n                      <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n                          <span class=\\\"glyphicon glyphicon-search\\\"></span>\\n                      </button>\\n                  </div>\\n              </div>\\n        </div>\\n     \\n      </form>\\n     </div>\\n    </div>\\n</div>\\n<ng-container *ngIf=\\\"ShowEmailDetails\\\">\\n    <div class=\\\"container\\\" id=\\\"table-responsive\\\">\\n      <h3>Show Email Details</h3>\\n        <div class=\\\"table-responsive\\\" >\\n            <table name=\\\"EmailDetails\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\" mat-elevation-z8 table-bordered table-striped\\\">\\n\\n              <!-- USerID Column -->\\n              <ng-container matColumnDef=\\\"DeliveryChannelID\\\">\\n              <th  mat-header-cell *matHeaderCellDef style=\\\"margin-left: 100px;\\\">Delivery Channel ID</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.DeliveryChannelID}} </td>\\n              </ng-container>\\n\\n              <!-- USerNAme Column -->\\n              <ng-container matColumnDef=\\\"DeliveryChannelName\\\">\\n              <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;Channel Name </th>\\n              <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.DeliveryChannelName}} </td>\\n              </ng-container>\\n\\n              <!-- Directory Column -->\\n              <ng-container matColumnDef=\\\"DeliveryChannelType\\\">\\n                <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;Channel Type </th>\\n                <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.DeliveryChannelType}} </td>\\n                </ng-container>\\n\\n                  <!-- Access Column -->\\n              <ng-container matColumnDef=\\\"Address\\\">\\n                <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;Address </th>\\n                <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.Address}} </td>\\n                </ng-container>\\n\\n                  <!-- Role Column -->\\n              <ng-container matColumnDef=\\\"PortNo\\\">\\n                <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;Port No </th>\\n                <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.PortNo}} </td>\\n                </ng-container>\\n\\n                  <!-- EmailId Column -->\\n              <ng-container matColumnDef=\\\"SecurityLayerID\\\">\\n                <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;Security Layer</th>\\n                <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.SecurityLayerID}} </td>\\n                </ng-container>\\n\\n                   <!-- Email User Column -->\\n              <ng-container matColumnDef=\\\"EmailUserName\\\">\\n                <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;User Email</th>\\n                <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.EmailUserName}} </td>\\n                </ng-container>\\n\\n                   <!-- Default User Email Column -->\\n                   <ng-container matColumnDef=\\\"DefaultSenderEmail\\\">\\n                    <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;Default User Email</th>\\n                    <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.DefaultSenderEmail}} </td>\\n                    </ng-container>\\n  \\n\\n              <!-- alertsetTime Column -->\\n              <!-- <ng-container matColumnDef=\\\"Setdate\\\">\\n              <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp; Set date </th>\\n              <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp;{{element.alertsetTime | date}} </td>\\n              </ng-container> -->\\n\\n\\n                 <!-- alertsetTime Column -->\\n             <!-- <ng-container matColumnDef=\\\"SetTime\\\">\\n                <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp; Set Time </th>\\n                <td mat-cell name=\\\"SetTime\\\" *matCellDef=\\\"let element\\\">  &nbsp;{{element.alertsetTime | date:\\\"HH:MM\\\"}} </td>\\n              </ng-container> -->\\n\\n    <!-- Trigger -->\\n\\n              <!-- <ng-container matColumnDef=\\\"trigger\\\">\\n                <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Trigger  </th> -->\\n               <!-- <td mat-cell *matCellDef=\\\"let element\\\"> {{element.trigger}} </td> -->\\n               <!-- <td mat-cell *matCellDef=\\\"let element\\\">\\n                    <mat-slide-toggle\\n                          class=\\\"example-margin\\\"\\n                          name=\\\"trigger\\\"\\n                          [color]=\\\"color\\\"\\n                          [checked]=\\\"checked\\\"\\n                          [disabled]=\\\"disabled\\\"\\n                          [(ngModel)]=\\\"element.trigger\\\"> {{element.trigger}}\\n                    </mat-slide-toggle>\\n                 </td>\\n              </ng-container> -->\\n\\n              <!-- Colum Edit/ Delete -->\\n              <ng-container matColumnDef=\\\"edit\\\">\\n                  <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Edit / Delete  </th>\\n\\n                 <td mat-cell *matCellDef=\\\"let element\\\">\\n                   <div class=\\\"row col-md-offset-3\\\">\\n                     <div class=\\\"col-md-2\\\">\\n                        <!-- <a routerLink=\\\"/edit_alert\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                        <!-- <a type='submit' [routerLink]=\\\"['/edit_new',element.id]\\\" (click)=\\\"onEdit(element._id)\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                        <a type='submit' [routerLink]=\\\"['/admin/editDeliveryChannel/',element._id]\\\"  style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a>\\n\\n                      </div>\\n                     &nbsp;\\n                     <div class=\\\"col-md-2\\\">\\n                          <a style=\\\"cursor: pointer;\\\" (click)=\\\"deleteUser(element._id)\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></a>\\n                         <!-- <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteAlert(element._id)\\\"><mat-icon>delete</mat-icon></a> -->\\n                      </div>\\n                   </div>\\n                 </td>\\n               </ng-container>\\n              <!-- <ng-container matColumnDef=\\\"Edit/Delete\\\">\\n                  <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;<strong>Edit / Delete</strong>  </th>\\n                 <td>\\n                   <div class=\\\"row\\\">\\n                     <div class=\\\"col-md-2\\\">\\n                      <button class=\\\"btn btn-primary\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></button>\\n                     </div>\\n                     <div class=\\\"col-md-2\\\">\\n                        <button class=\\\"btn btn-primary\\\"> <i class=\\\"glyphicon glyphicon-trash\\\"></i></button>\\n                      </div>\\n                   </div>\\n                 </td>\\n\\n              </ng-container> -->\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n            </table>\\n\\n        </div>\\n\\n\\n      <br>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3\\\">\\n            <!-- <a class=\\\"btn btn-danger\\\" [routerLink]=\\\"['/TestDelivery']\\\">Create User</a> -->\\n            <button mat-raised-button id=\\\"btn\\\" [routerLink]=\\\"['/admin/createDeliveryChannel']\\\">Create Channel</button>\\n        </div>\\n        <div class=\\\"col-md-9\\\">\\n          <mat-paginator  [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20, 30, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n      </div>\\n      </div>\\n    </div>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"ShowMobileApp\\\">\\n    <div class=\\\"container\\\" id=\\\"table-responsive\\\">\\n      <h3>Show Mobile App Details</h3>\\n      <div class=\\\"table-responsive\\\" >\\n          <table name=\\\"MobileDetails\\\" mat-table [dataSource]=\\\"dataSource2\\\" matSort class=\\\" mat-elevation-z8 table-bordered table-striped\\\">\\n\\n            <!-- USerID Column -->\\n            <ng-container matColumnDef=\\\"DeliveryChannelID\\\">\\n            <th  mat-header-cell *matHeaderCellDef style=\\\"margin-left: 100px;\\\">Delivery Channel ID</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.DeliveryChannelID}} </td>\\n            </ng-container>\\n\\n            <!-- USerNAme Column -->\\n            <ng-container matColumnDef=\\\"DeliveryChannelName\\\">\\n            <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;Channel Name </th>\\n            <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.DeliveryChannelName}} </td>\\n            </ng-container>\\n\\n            <!-- Directory Column -->\\n            <ng-container matColumnDef=\\\"DeliveryChannelType\\\">\\n              <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;Channel Type </th>\\n              <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.DeliveryChannelType}} </td>\\n              </ng-container>\\n\\n                <!-- APIKey Column -->\\n            <ng-container matColumnDef=\\\"APIKey\\\">\\n              <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;API Key </th>\\n              <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.APIKey}} </td>\\n              </ng-container>\\n\\n                <!-- Role Column -->\\n            <!-- <ng-container matColumnDef=\\\"PortNo\\\">\\n              <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;Port No </th>\\n              <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.PortNo}} </td>\\n              </ng-container> -->\\n\\n                <!-- SenderKey Column -->\\n            <ng-container matColumnDef=\\\"SenderKey\\\">\\n              <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;Sender Key</th>\\n              <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.SenderKey}} </td>\\n              </ng-container>\\n\\n                 <!-- Server Column -->\\n            <ng-container matColumnDef=\\\"Server\\\">\\n              <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;Server</th>\\n              <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.Server}} </td>\\n              </ng-container>\\n\\n                 <!-- DeviceName Column -->\\n                 <ng-container matColumnDef=\\\"DeviceName\\\">\\n                  <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp;Device Name</th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.DeviceName}} </td>\\n                  </ng-container>\\n\\n            <!-- Colum Edit/ Delete -->\\n            <ng-container matColumnDef=\\\"edit\\\">\\n                <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Edit / Delete  </th>\\n\\n               <td mat-cell *matCellDef=\\\"let element\\\">\\n                 <div class=\\\"row\\\">\\n                   <div class=\\\"col-md-2\\\">\\n                      <!-- <a routerLink=\\\"/edit_alert\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                      <!-- <a type='submit' [routerLink]=\\\"['/edit_new',element.id]\\\" (click)=\\\"onEdit(element._id)\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                      <a type='submit' [routerLink]=\\\"['/admin/editDeliveryChannel/',element._id]\\\"  style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a>\\n\\n                    </div>\\n                   &nbsp;\\n                   <div class=\\\"col-md-2\\\">\\n                        <a style=\\\"cursor: pointer;\\\" (click)=\\\"deleteUser(element._id)\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></a>\\n                       <!-- <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteAlert(element._id)\\\"><mat-icon>delete</mat-icon></a> -->\\n                    </div>\\n                 </div>\\n               </td>\\n             </ng-container>\\n            <!-- <ng-container matColumnDef=\\\"Edit/Delete\\\">\\n                <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;<strong>Edit / Delete</strong>  </th>\\n               <td>\\n                 <div class=\\\"row\\\">\\n                   <div class=\\\"col-md-2\\\">\\n                    <button class=\\\"btn btn-primary\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></button>\\n                   </div>\\n                   <div class=\\\"col-md-2\\\">\\n                      <button class=\\\"btn btn-primary\\\"> <i class=\\\"glyphicon glyphicon-trash\\\"></i></button>\\n                    </div>\\n                 </div>\\n               </td>\\n\\n            </ng-container> -->\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n          </table>\\n\\n      </div>\\n\\n\\n      <br>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3\\\">\\n            <!-- <a class=\\\"btn btn-danger\\\" [routerLink]=\\\"['/TestDelivery']\\\">Create User</a> -->\\n            <a class=\\\"btn btn-danger\\\" [routerLink]=\\\"['/admin/createDeliveryChannel']\\\">Create Channel</a>\\n        </div>\\n        <div class=\\\"col-md-4\\\"></div>\\n        <div class=\\\"col-md-5\\\">\\n          <mat-paginator  [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20, 30, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n      </div>\\n      </div>\\n    </div>\\n</ng-container>\\n\\n   \\n\"","import { Component, OnInit , ViewChild, Injectable} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Location} from '@angular/common';\nimport {  FormGroup,FormBuilder, FormControl, NgForm ,Validators} from '@angular/forms';\nimport { identifier } from '../../../../../node_modules/@types/babel-types';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminService } from '../../admin.service';\n\n@Component({\n  selector: 'app-delivery-channel-details',\n  templateUrl: './delivery-channel-details.component.html',\n  styleUrls: ['./delivery-channel-details.component.css']\n})\nexport class DeliveryChannelDetailsComponent implements OnInit {\n  QlikServer;\n  editPingUser: FormGroup;\n  DeliveryChannelID: string;\n    DeliveryChannelName: string;\n    DeliveryChannelType : string;\n    Address : string;\n    PortNo : string;\n    SecurityLayerID : string;\n    EmailUserName : string;\n    Password:string;\n    DefaultSenderEmail:string;\n    InsertBy : string;\n    APIKey:String='';\n    SenderKey:String='';\n    Server:String=''\n    MobileChannels = [\n      { id: 1, name: 'IOS' },\n      { id: 2, name: 'Android' }\n    ];\n    ChannelType = [\n    ];\n\n    public ShowMobileApp:boolean = false;\n    public ShowEmailDetails:boolean = true;\n    selectedChannelValue:any='';\n    constructor(private api: AdminService, private router: Router, private location: Location, private route: ActivatedRoute,public snackbar: MatSnackBar,private formBuilder: FormBuilder) { }\n    displayedColumns = ['DeliveryChannelID','DeliveryChannelName','DeliveryChannelType','Address','PortNo','SecurityLayerID','EmailUserName','DefaultSenderEmail','edit'];\n    displayedColumns2 =['DeliveryChannelID','DeliveryChannelName','DeliveryChannelType','APIKey','SenderKey','Server','DeviceName','edit'];\n    dataSource = new MatTableDataSource();\n    dataSource2 = new MatTableDataSource();\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    @ViewChild(MatPaginator) paginator1: MatPaginator;\n    @ViewChild(MatSort) sort1: MatSort;\n\n    applyFilter(filterValue: string) {\n      filterValue = filterValue.trim(); // Remove whitespace\n      filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n      this.dataSource.filter = filterValue;\n    }\n    ngOnInit() {\n      //this.onEdit(this.route.snapshot.params['id']);\n      this.api.getChannelTypes()\n      .subscribe(res => {\n           //console.log('Cahnnel Types*****'+res);\n\n       for (var i = 0; i < res.length; i++) {\n              var ChannelTypeID ;\n              var ChannelTypeName;                \n              ChannelTypeID =  res[i].ChannelTypeID;\n              ChannelTypeName =  res[i].ChannelTypeName;\n\n              //console.log('-------',ChannelTypeID,'-----',ChannelTypeName);\n             // console.log('Applist data -----',JSON.stringify(res[i],null,4));\n\n              this.ChannelType.push(\n                {\n                  \"ChannelTypeID\": ChannelTypeID,\n                  \"CahnnelTypeName\": ChannelTypeName\n                }\n              );\n          }\n      var chnName1=JSON.stringify(this.ChannelType,null,4);\n          //console.log(\"New Channel Type  Name\"+chnName1) ;\n         // console.log(\"----------------------------\");\n            // console.log(this.QlikSenseMeasures);\n            // console.log(\"--------------------------------\")\n            // console.log(this.QlikSenseDiamentions);\n\n        // this.visibleProgressBar=false;    \n        }, err => {\n          console.log(err);\n          //  this.visibleProgressBar=false;\n        });\n      this.api.getDeliveryCahnnels()\n      .subscribe(res => {\n        // if(res.code == 200){\n          console.log(\"Delivery channel : \",JSON.stringify(res,null,4));\n          this.dataSource = new MatTableDataSource(res);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          this.dataSource2 = new MatTableDataSource(res);\n          this.dataSource2.paginator = this.paginator;\n          this.dataSource2.sort = this.sort;\n        // }\n\n\n      }, err => {\n        console.log(err);\n      });\n      this.editPingUser = new FormGroup ({\n\n        DeliveryChannelID:new FormControl(),\n          DeliveryChannelName:new FormControl(),\n          DeliveryChannelType:new FormControl(),\n          Address :new FormControl(),\n          PortNo :new FormControl(),\n          SecurityLayerID :new FormControl(),\n          EmailUserName :new FormControl(),\n          Password:new FormControl(),\n          DefaultSenderEmail:new FormControl(),\n         \n          DeviceName: new FormControl(this.MobileChannels),\n          InsertBy :new FormControl(localStorage.getItem('User')),\n      });\n\n      this.editPingUser = this.formBuilder.group({\n        // id: '',\n        // DeliveryChannelID:[this.uID,Validators.required],\n        // DeliveryChannelName: new FormControl(this.ChannelNameArr, Validators.required),\n        // DeliveryChannelType : new FormControl(this.ChannelType,Validators.required),\n        Address :[null,Validators.required],\n        PortNo :[null,Validators.required],\n        SecurityLayerID :[null,Validators.required],\n        EmailUserName :[null,Validators.required],\n        Password:[null,Validators.required],\n        DefaultSenderEmail:[null,Validators.required],\n        InsertBy : '',\n        LoginUserID:'',\n        APIKey:[null,Validators.required],\n        SenderKey:[null,Validators.required],\n        Server:[null,Validators.required],\n       \n        DeviceName: new FormControl(this.ChannelType, Validators.required),\n      })\n    }\n\n    onFormSubmit(form){}\n\n\n    ChannelTypeChanged(event) {\n      //update the ui\n      this.selectedChannelValue =event;\n      //console.log(\"Selected Value is\"+this.selectedChannelValue)  \n      if(event==\"Email\"){\n       // console.log(\"In email select value\"+this.selectedChannelValue);\n          this.ShowEmailDetails=true;\n          this.ShowMobileApp=false;\n          this.api.getAllDeliveryEmailChannel()\n          .subscribe(res => {\n            // if(res.code == 200){\n             // console.log(res);\n              this.dataSource = new MatTableDataSource(res);\n              this.dataSource.paginator = this.paginator;\n              this.dataSource.sort = this.sort;\n            // }\n    \n    \n          }, err => {\n            console.log(err);\n          });\n      }\n      else if(event==\"Mobile App\"){\n        //console.log(\"In Mobile App select value\"+this.selectedChannelValue);\n        this.ShowMobileApp=true;\n        this.ShowEmailDetails=false;\n        this.api.getMobileAppDeliveryCahnnels()\n        .subscribe(res => {\n          // if(res.code == 200){\n            //console.log(res);\n            this.dataSource2 = new MatTableDataSource(res);\n            this.dataSource2.paginator = this.paginator;\n            this.dataSource2.sort = this.sort;\n          // }\n  \n  \n        }, err => {\n          console.log(err);\n        });\n      }\n      else{\n        this.ShowMobileApp=false;\n        this.ShowEmailDetails=false;\n      }\n    }\n\n\n    // Edit User\n  onEdit(id) {\n    console.log('In Edit User');\n    console.log(id);\n    this.api.getDeliveryCahnnel(id)\n    .subscribe( res => {\n      console.log(res);\n      this.DeliveryChannelID = id;\n    });\n  }\n  // delete User\n  deleteUser(id) {\n    console.log('In Delete User');\n    console.log(id);\n    this.api.deleteDeliveryChannel(id)\n    .subscribe(res => {\n      console.log('ping user new Data');\n      this.api.getDeliveryCahnnels()\n      .subscribe(res => {\n        this.snackbar.open('Succesfully deleted user', 'Close', {\n          duration: 3000,\n        });\n        console.log(res);\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }, err => {\n        console.log(err);\n      });\n              // this.api.getPingUsersNew()\n              // .subscribe( res => {\n              //   console.log('ping user new Data');\n              //   console.log(res);\n              //   this.snackbar.open('Succesfully deleted user', 'Close', {\n              //     duration: 3000,\n              //   });\n              //   this.dataSource = new MatTableDataSource(res);\n              //   this.dataSource.sort = this.sort;\n              //   this.dataSource.paginator = this.paginator;\n              // }, err => {\n              //   console.log(err);\n              // });\n\n      // this.router.navigateByUrl(\"/alert_Inbox\");\n      // this.router.navigate(['/alert_examples']);\n    }, (err) => {\n    console.log(err);\n    }\n    );\n  }\n\n}\n\nexport interface Element {\n  DeliveryChannelID: string;\n  DeliveryChannelName: string;\n  DeliveryChannelType: string;\n  Address: string;\n  PortNo: string;\n  SecurityLayerID: string;\n  EmailUserName : string;\n  Password : string;\n  InsertBy : string;\n  DefaultSenderEmail: string;\n  APIKey: string;\n  SenderKey : string;\n  Server : string;\n  DeviceName:string;\n\n}\n\nexport interface Element1 {\n  DeliveryChannelID: string;\n  DeliveryChannelName: string;\n  DeliveryChannelType: string;\n  // Address: string;\n  // PortNo: string;\n  // SecurityLayerID: string;\n  // EmailUserName : string;\n  // Password : string;\n  // InsertBy : string;\n  // DefaultSenderEmail: string;\n  APIKey: string;\n  SenderKey : string;\n  Server : string;\n  DeviceName:string;\n}\n// export class DeliveryDataSource extends DataSource<any> {\n//   constructor(private api: ApiService) {\n//     super();\n//   }\n\n//   connect() {\n//     return  this.api.getDeliveryCahnnels()\n//   }\n\n//   disconnect() {\n\n//   }\n// }\n\n// export class DeliveryDataSourceMobileApp extends DataSource<any> {\n//   constructor(private api: ApiService) {\n//     super();\n//   }\n\n//   connect() {\n//     return  this.api.getDeliveryCahnnels()\n//   }\n\n//   disconnect() {\n\n//   }\n// }","module.exports = \"#edit{\\r\\n    background-color:rgb(231, 76, 60);\\r\\n    padding-top: 14px;\\r\\n}\\r\\n\\r\\n.btn-primary{\\r\\n    margin-left: 40%;\\r\\n}\\r\\n\\r\\n#container1{\\r\\n    border: 1px solid rgb(236, 235, 235);\\r\\n    margin-left:20%\\r\\n}\\r\\n\\r\\n/* #margin{\\r\\n    margin-left: 10% ;\\r\\n} */\\r\\n\\r\\n.btn-primary {\\r\\n  background-color:rgb(231, 76, 60);\\r\\n  border: rgb(231, 76, 60);\\r\\n}\\r\\n\\r\\n.example-form {\\r\\n    min-width: 80px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n.example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n.example-full-width:nth-last-child() {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n.button-row {\\r\\n    margin: 10px 0;\\r\\n  }\\r\\n\\r\\n.text-ping{\\r\\n    color: red\\r\\n}\\r\\n\\r\\n.text-white{\\r\\n    color: white;\\r\\n}\\r\\n\"","module.exports = \"<br><br><br><br>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"btn-group btn-breadcrumb \\\">\\n              <a routerLink=\\\"/pingAlert/alertInbox\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n              <a class=\\\"btn btn-default\\\">Admin</a>\\n              <a routerLink=\\\"/admin/deliveryChannelDetails\\\" class=\\\"btn btn-default\\\">Delivery Channel Details</a>\\n              <a class=\\\"btn btn-default active\\\">Create/Edit Delivery Channel</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <br>\\n    <form [formGroup]=\\\"frmEditDeliveryChannel\\\" (ngSubmit)=\\\"onFormSubmit(frmEditDeliveryChannel.value)\\\">\\n      <div class=\\\"col-lg-9 col-lg-offset-1\\\">\\n          <mat-card>\\n              <div class=\\\"row\\\">\\n                <!-- <div class=\\\"col-md-1\\\"></div> -->\\n                <!-- <div class=\\\" col-md-3\\\">\\n                  Delievery Channel Name:\\n                </div> -->\\n                <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                      <mat-label>channel Name </mat-label>\\n                    <!-- <mat-select placeholder=\\\"Channel Name\\\" formControlName=\\\"DeliveryChannelName\\\" name=\\\"ChannelName1\\\" required>\\n                        <mat-option>--  Select Cahnnel Name --</mat-option>\\n                      <mat-option *ngFor=\\\"let chName of ChannelNameArr\\\" [value]=\\\"chName.ChannelName\\\">\\n                        {{chName.ChannelName}}\\n                      </mat-option>\\n                    </mat-select> -->\\n                    <input type=\\\"text\\\" matInput placeholder=\\\"Channel Name\\\" formControlName=\\\"DeliveryChannelName\\\"\\n                    [errorStateMatcher]=\\\"matcher\\\" required>\\n                    <mat-error>\\n                        <span *ngIf=\\\"!frmEditDeliveryChannel.get('DeliveryChannelName').valid && frmEditDeliveryChannel.get('DeliveryChannelName').touched\\\">Please select user access</span>\\n                      </mat-error>\\n                    <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>how_to_reg</mat-icon> -->\\n                    <!-- [selected]=\\\"car.color.id == qlikSenseApps.Appid\\\" -->\\n                  </mat-form-field>\\n                  </div>\\n                  </div>\\n                  <!-- <div class=\\\"col-md-1\\\"></div> -->\\n                  <!-- <div class=\\\" col-md-3\\\">\\n                      Channel Type:\\n                    </div> -->\\n                    <div class=\\\"col-md-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                          <mat-label>Channel Type</mat-label>\\n                        <mat-select placeholder=\\\"Channel Type\\\" formControlName=\\\"DeliveryChannelType\\\" name=\\\"DeliveryChannelType\\\" (selectionChange)=\\\"ChannelTypeChanged($event.value)\\\" required >\\n                            <mat-option>-- Select Channel TYpe --</mat-option>\\n                          <mat-option *ngFor=\\\"let CType of ChannelType\\\" [value]=\\\"CType.CahnnelTypeName\\\">\\n                            {{CType.CahnnelTypeName}}\\n                          </mat-option>\\n                        </mat-select>\\n                        <mat-error>\\n                            <span *ngIf=\\\"!frmEditDeliveryChannel.get('DeliveryChannelType').valid && frmEditDeliveryChannel.get('DeliveryChannelType').touched\\\">Please select user role</span>\\n                          </mat-error>\\n                        <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>beenhere</mat-icon> -->\\n                        <!-- [selected]=\\\"car.color.id == qlikSenseApps.Appid\\\" -->\\n                      </mat-form-field>\\n                      </div>\\n                      </div>\\n                  </div>\\n          </mat-card>\\n        <ng-container *ngIf=\\\"ShowEmail\\\">\\n            <mat-panel-title>\\n                Email Connection Details:\\n            </mat-panel-title>\\n     <mat-card>\\n     <div class=\\\"container\\\">\\n             <div class=\\\"from-group\\\">\\n                 <div class=\\\"row\\\">\\n                    \\n                     <div class=\\\"col-md-5\\\">\\n                       <!-- <input type=\\\"text\\\" class=\\\"form-control\\\"> -->\\n                       <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                         <mat-label>Address *</mat-label>\\n                         <!-- <span matPrefix><mat-icon matPrefix>edit</mat-icon> &nbsp;</span> -->\\n                         <input matInput placeholder=\\\"Enter Delivery Channel Name\\\" formControlName=\\\"Address\\\"\\n                                [errorStateMatcher]=\\\"matcher\\\">\\n                         <mat-error>\\n                           <span *ngIf=\\\"!frmEditDeliveryChannel.get('Address').valid && frmEditDeliveryChannel.get('Address').touched\\\">Please enter User Name</span>\\n                         </mat-error>\\n                         <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>supervised_user_circle</mat-icon> -->\\n                       </mat-form-field>\\n                     </div>\\n                     <!-- <div class=\\\"col-md-1\\\"></div> -->\\n                     \\n                     <div class=\\\"col-md-4\\\">\\n                       <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n                         <mat-label>PortNo *</mat-label>\\n                         <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n                         <input  matInput placeholder=\\\"Select Cahnnel\\\" formControlName=\\\"PortNo\\\"\\n                                [errorStateMatcher]=\\\"matcher\\\">\\n                                <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n\\n                                <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>perm_identity</mat-icon> -->\\n\\n                         <mat-error>\\n                           <span *ngIf=\\\"!frmEditDeliveryChannel.get('PortNo').valid && frmEditDeliveryChannel.get('PortNo').touched\\\">Please enter User ID</span>\\n                         </mat-error>\\n                       </mat-form-field>\\n                     </div>\\n                     \\n                 </div>\\n             <br>\\n             <div class=\\\"row\\\">\\n                 \\n                 <div class=\\\"col-md-5\\\">\\n                     <mat-radio-group formControlName=\\\"SecurityLayerID\\\">\\n                         <mat-radio-button class=\\\"example-margin\\\" color =\\\"warn\\\" value=\\\"TLS Security\\\" (click)=\\\"show = 'false' \\\">Use TLS(Transport Layer Security)</mat-radio-button>\\n                         <mat-radio-button class=\\\"example-margin\\\" color =\\\"warn\\\" value=\\\"SSL Security\\\" (click)=\\\"show = 'true' \\\">Use SSL(Secure Socet Layer)</mat-radio-button>\\n                     </mat-radio-group>\\n                 </div>\\n             </div>\\n             <br>\\n             <div class=\\\"row\\\">\\n                \\n                 <div class=\\\"col-md-5\\\">\\n                   <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                     <mat-label>User Email *</mat-label>\\n                     <!-- <span matPrefix>+1 &nbsp;</span> -->\\n                     <input matInput placeholder=\\\"Enter User Email\\\" formControlName=\\\"EmailUserName\\\"\\n                            [errorStateMatcher]=\\\"matcher\\\">\\n                     <mat-error>\\n                       <span *ngIf=\\\"!frmEditDeliveryChannel.get('EmailUserName').valid && frmEditDeliveryChannel.get('EmailUserName').touched\\\">Please enter User Directory</span>\\n                     </mat-error>\\n                     <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>folder_shared</mat-icon> -->\\n                   </mat-form-field>\\n                 </div>\\n               <div class=\\\"col-md-6\\\">\\n                   <div class=\\\"row\\\">\\n                       \\n                       <div class=\\\"col-md-5\\\">\\n                         <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n                           <mat-label>Password *</mat-label>\\n                           <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n                           <input type=\\\"password\\\" matInput placeholder=\\\"Enter Password\\\" formControlName=\\\"Password\\\"\\n                                  [errorStateMatcher]=\\\"matcher\\\">\\n                                  <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n \\n                                  <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>perm_identity</mat-icon> -->\\n \\n                           <mat-error>\\n                             <span *ngIf=\\\"!frmEditDeliveryChannel.get('Password').valid && frmEditDeliveryChannel.get('Password').touched\\\">Please enter password</span>\\n                           </mat-error>\\n                         </mat-form-field>\\n                       </div>\\n                     <div class=\\\"col-md-2\\\">\\n                         <button class=\\\"btn btn-primary\\\">Test Connection</button>\\n                     </div>\\n                   </div>\\n               </div>\\n             </div><br>\\n             <div class=\\\"row\\\">\\n                \\n                 <div class=\\\"col-md-5\\\">\\n                   <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n                     <mat-label>Default Sender Email ID *</mat-label>\\n                     <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n                     <input matInput placeholder=\\\"Enter Default Sennder Email Id\\\" formControlName=\\\"DefaultSenderEmail\\\"\\n                            [errorStateMatcher]=\\\"matcher\\\">\\n                            <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n\\n                            <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>perm_identity</mat-icon> -->\\n\\n                     <mat-error>\\n                       <span *ngIf=\\\"!frmEditDeliveryChannel.get('DefaultSenderEmail').valid && frmEditDeliveryChannel.get('DefaultSenderEmail').touched\\\">Please enter User ID</span>\\n                     </mat-error>\\n                   </mat-form-field>\\n                 </div>\\n               </div>\\n              \\n           </div>\\n           <br><br><br>\\n         <!-- <div class=\\\"row\\\">\\n           <div class=\\\"col-md-5\\\"></div>\\n           <div>\\n             <button class=\\\" col-md-2\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onAddValues(email, app)\\\" type=\\\"submit\\\">Save</button>\\n             &nbsp;&nbsp;&nbsp;&nbsp;\\n             <button class=\\\" col-md-2\\\" class=\\\"btn btn-default\\\" >Cancel</button>\\n           </div>\\n\\n\\n         </div> -->\\n     </div>\\n\\n     </mat-card>\\n        </ng-container>        \\n         \\n\\n<!-- Mobile Channel Details -->\\n<!-- *********************************************** -->\\n<ng-container *ngIf=\\\"ShowMobileApp\\\">\\n  <mat-panel-title>\\n    Mobile App Connection Details:\\n  </mat-panel-title>\\n  <mat-card>\\n  <div class=\\\"container\\\">\\n  <div class=\\\"from-group\\\">\\n    <div class=\\\"row\\\">\\n        \\n        <div class=\\\"col-md-5\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\"> -->\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n            <mat-label>Device Name *</mat-label>\\n          <mat-select placeholder=\\\"Device Name\\\" formControlName=\\\"DeviceName\\\" name=\\\"DeviceName\\\" required>\\n              <mat-option>--  Select Device Name --</mat-option>\\n            <mat-option *ngFor=\\\"let chName of MobileChannels\\\" [value]=\\\"chName.name\\\">\\n              {{chName.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n              <span *ngIf=\\\"!frmEditDeliveryChannel.get('DeviceName').valid && frmEditDeliveryChannel.get('DeviceName').touched\\\">Please Select Device Name</span>\\n            </mat-error>\\n          <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>how_to_reg</mat-icon> -->\\n          <!-- [selected]=\\\"car.color.id == qlikSenseApps.Appid\\\" -->\\n        </mat-form-field>\\n        </div>\\n        <!-- <div class=\\\"col-md-1\\\"></div> -->      \\n        \\n    </div>\\n  <br>\\n\\n  <!-- API KEY Contol -->\\n  <div class=\\\"row\\\">\\n    \\n    <div class=\\\"col-md-5\\\">\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n        <mat-label>API Key *</mat-label>\\n        <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n        <input matInput placeholder=\\\"Enter API Key\\\" formControlName=\\\"APIKey\\\"\\n                [errorStateMatcher]=\\\"matcher\\\">\\n                <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n\\n                <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>perm_identity</mat-icon> -->\\n\\n        <mat-error>\\n          <span *ngIf=\\\"!frmEditDeliveryChannel.get('APIKey').valid && frmEditDeliveryChannel.get('APIKey').touched\\\">Please Enter API Key</span>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n\\n  <!-- Sender Key Controls -->\\n  <div class=\\\"row\\\">\\n    \\n    <div class=\\\"col-md-5\\\">\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n        <mat-label>Sender Key *</mat-label>\\n        <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n        <input matInput placeholder=\\\"Enter Sender Key\\\" formControlName=\\\"SenderKey\\\"\\n              [errorStateMatcher]=\\\"matcher\\\">\\n              <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n\\n              <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>perm_identity</mat-icon> -->\\n\\n        <mat-error>\\n          <span *ngIf=\\\"!frmEditDeliveryChannel.get('SenderKey').valid && frmEditDeliveryChannel.get('SenderKey').touched\\\">Please Enter Sender Key</span>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n\\n  <!-- Server controls -->\\n  <div class=\\\"row\\\">\\n    \\n    <div class=\\\"col-md-5\\\">\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n        <mat-label>Server *</mat-label>\\n        <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n        <input matInput placeholder=\\\"Enter Server\\\" formControlName=\\\"Server\\\"\\n              [errorStateMatcher]=\\\"matcher\\\">\\n              <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n\\n              <!-- <mat-icon class=\\\"text-ping\\\" matSuffix>perm_identity</mat-icon> -->\\n\\n        <mat-error>\\n          <span *ngIf=\\\"!frmEditDeliveryChannel.get('Server').valid && frmEditDeliveryChannel.get('Server').touched\\\">Please Enter Server Details</span>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n\\n\\n  </div>\\n  <br><br><br>\\n  <!-- <div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\"></div>\\n  <div>\\n  <button class=\\\" col-md-2\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onAddValues(email, app)\\\" type=\\\"submit\\\">Save</button>\\n  &nbsp;&nbsp;&nbsp;&nbsp;\\n  <button class=\\\" col-md-2\\\" class=\\\"btn btn-default\\\" >Cancel</button>\\n  </div>\\n\\n\\n  </div> -->\\n  </div>\\n\\n  </mat-card>\\n</ng-container>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\"></div>\\n  <div>\\n  <button class=\\\"col-md-2\\\" [disabled]=\\\"!frmEditDeliveryChannel.valid\\\"  class=\\\"btn btn-danger\\\"  type=\\\"submit\\\">Update</button>\\n  &nbsp;&nbsp;&nbsp;&nbsp;\\n  <button class=\\\" col-md-2\\\" [routerLink]=\\\"['/admin/deliveryChannelDetails']\\\" class=\\\"btn btn-default\\\" >Cancel</button>\\n  </div>\\n\\n\\n  </div>\\n      </div>\\n    </form>\\n    <!-- <p>Form value: {{ frmEditDeliveryChannel.value | json }}</p> -->\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '../../../../../node_modules/@angular/router';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators, FormArray } from '@angular/forms';\nimport { ParamMap } from '@angular/router';\nimport { LocalStorageService, SessionStorageService } from '../../../../../node_modules/angular-web-storage';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminService } from '../../admin.service';\nimport { AppService } from '../../../app.service';\n\n@Component({\n  selector: 'app-edit-delivery-channel',\n  templateUrl: './edit-delivery-channel.component.html',\n  styleUrls: ['./edit-delivery-channel.component.css']\n})\nexport class EditDeliveryChannelComponent implements OnInit {\n  matcher;\n  ChannelNameArr = [        \n  ];\n  ChannelType = [        \n  ];\n  public ShowMobileApp:boolean = true;\n  public ShowEmail:boolean = true;\n  selectedChannelValue:any='';\n\n  frmEditDeliveryChannel: FormGroup;\n  DeliveryChannelID: String='';\n  DeliveryChannelName: String='';\n  DeliveryChannelType : String='';\n  Address : String=''; \n  PortNo : String='';\n  SecurityLayerID : String='';\n  EmailUserName : String='';\n  Password:String='';\n  DefaultSenderEmail:String='';  \n  InsertBy : String= ''; \n  usercount:String='';\n  count: number=0;\n  LoginUserID: string = '';\n  userID: string = '';\n  uID: any =  '';\n  DeviceName:string='';\n  APIKey:string='';\n  SenderKey:string='';\n  Server:string='';\n // DeviceName: new FormControl(this.MobileChannels, Validators.required),\n  AAccess = [\n    { id: 1, name: 'Use Qlik Security' },\n    { id: 2, name: 'Manage in Ping' }\n  ];\n\n\n  RRole = [\n    { id: 2, name: 'Administrator' },\n    { id: 3, name: 'Connnection Manager' },\n    { id: 4, name: 'User' }\n  ];\n  MobileChannels = [\n    { id: 1, name: 'IOS' },\n    { id: 2, name: 'Android' }\n  ];\n  constructor(private route: ActivatedRoute,private commanApi:AppService, private api: AdminService, private router: Router,\n    private formBuilder: FormBuilder,public snackbar: MatSnackBar,\n    public local: LocalStorageService, public session: SessionStorageService) { }\n\n    ngOnInit() {\n      console.log('route succesfully');\n      console.log(this.route.snapshot.params['id']);\n      this.onEdit(this.route.snapshot.params['id']);\n  \n      console.log('test route succesfully');\n      console.log(this.route.snapshot.params['id']);\n      this.onEdit(this.route.snapshot.params['id']);\n     \n      this.commanApi.getLoggeddUser().subscribe(res=>{\n        console.log(\"Pinguser details Id check \",res);\n        this.frmEditDeliveryChannel.get('InsertBy').setValue(res.PingUserName) \n        this.frmEditDeliveryChannel.get('LoginUserID').setValue(res.PingUserID)\n        this.api.getDeliveryCahnnels()\n        .subscribe(res => {\n         // console.log(res);\n          this.count=res.length;\n          this.count=this.count+1;\n          this.userID = 'DC-' + this.count ;\n          this.uID = this.frmEditDeliveryChannel.get('DeliveryChannelID').setValue(this.userID);\n    \n        }, err => {\n          console.log(err);\n          this.usercount='0';\n        });\n    \n        //Get channel Name\n        this.api.getChannelNames()\n        .subscribe(res => {\n        console.log(res);\n    \n        for (var i = 0; i < res.length; i++) {\n                    var ChannelID ;\n                    var ChannelName;                \n                    ChannelID =  res[i].ChannelID;\n                    ChannelName =  res[i].ChannelName;\n    \n                    //console.log('-------',ChannelID,'-----',ChannelName);\n                   // console.log('Applist data -----',JSON.stringify(res[i],null,4));\n    \n                    this.ChannelNameArr.push(\n                      {\n                        \"ChannelID\": ChannelID,\n                        \"ChannelName\": ChannelName\n                      }\n                    );\n            }\n            var chnName=JSON.stringify(this.ChannelNameArr,null,4);\n           // console.log(\"New Channel Name\"+chnName) ;\n            console.log(\"----------------------------\");\n            // console.log(this.QlikSenseMeasures);\n            // console.log(\"--------------------------------\")\n            // console.log(this.QlikSenseDiamentions);\n    \n        // this.visibleProgressBar=false;    \n        }, err => {\n           console.log(err);\n          //  this.visibleProgressBar=false;\n        });\n  \n        //Get Channel Type\n        this.api.getChannelTypes()\n        .subscribe(res => {\n       console.log('Cahnnel Types*****'+res);\n       \n        for (var i = 0; i < res.length; i++) {\n                    var ChannelTypeID ;\n                    var ChannelTypeName;                \n                    ChannelTypeID =  res[i].ChannelTypeID;\n                    ChannelTypeName =  res[i].ChannelTypeName;\n       \n                    console.log('-------',ChannelTypeID,'-----',ChannelTypeName);\n                   // console.log('Applist data -----',JSON.stringify(res[i],null,4));\n       \n                    this.ChannelType.push(\n                      {\n                        \"ChannelTypeID\": ChannelTypeID,\n                        \"CahnnelTypeName\": ChannelTypeName\n                      }\n                    );\n            }\n            var chnName1=JSON.stringify(this.ChannelType,null,4);\n           console.log(\"New Channel Type  Name\"+chnName1) ;\n            console.log(\"----------------------------\");\n            // console.log(this.QlikSenseMeasures);\n            // console.log(\"--------------------------------\")\n            // console.log(this.QlikSenseDiamentions);\n       \n        // this.visibleProgressBar=false;    \n        }, err => {\n           console.log(err);\n          //  this.visibleProgressBar=false;\n        });\n      },err => {\n      console.log(\"err\");\n      console.log(err);\n      this.router.navigate(['/login']);\n    })\n\n      \n\n      this.frmEditDeliveryChannel=this.formBuilder.group({\n        // PingUserID:[null,Validators.required],\n        // PingUserName:[null,Validators.required],\n        // PingUserDirectory :[null,Validators.required],\n        // PingUserAccess : [null,Validators.required],\n        // PingMemberID :'',\n        // PingGroupID : '',\n        // PingRole : [null,Validators.required],\n        // InsertBy : '',\n        // EmailID:[null,Validators.required],\n        // password:[null,Validators.required],\n\n        DeliveryChannelID: '',\n        DeliveryChannelName: new FormControl(this.ChannelNameArr, Validators.required),\n        DeliveryChannelType : new FormControl(this.ChannelType,Validators.required),\n        Address : '', \n        PortNo : '',\n        SecurityLayerID : '',\n        EmailUserName : '',\n        Password:'',\n        DefaultSenderEmail:'',\n        \n        APIKey:'',\n        SenderKey:'',\n        Server:'',\n        InsertBy : '',\n        usercount:'',\n        count: '',\n        DeviceName:'',\n        LoginUserID:'',\n\n      })\n     \n    }\n\n    onEdit(id) {\n      console.log('In Edit alert');\n      console.log(id);\n      this.api.getDeliveryCahnnel(id).subscribe( res => {\n        console.log('Get Edit Data');\n        console.log(res);\n  \n        const id8 = res._id;\n        console.log(id8);\n        console.log(res.DeliveryChannelID);\n        console.log(\"Cahnnel Name \"+res);\n        \n        // console.log(res.PingUserDirectory);\n        // console.log(\"Deliverto\"+res.PingUserID);\n        // console.log(\"Data Sourse\"+res.PingUserName);\n         this.frmEditDeliveryChannel.get('DeliveryChannelID').setValue(res.DeliveryChannelID);\n         this.frmEditDeliveryChannel.get('DeliveryChannelName').setValue(res.DeliveryChannelName);\n         this.frmEditDeliveryChannel.get('DeliveryChannelType').setValue(res.DeliveryChannelType);\n         this.frmEditDeliveryChannel.get('Address').setValue(res.Address);\n         this.frmEditDeliveryChannel.get('EmailUserName').setValue(res.EmailUserName);\n         this.frmEditDeliveryChannel.get('Password').setValue(res.Password);\n  \n         this.frmEditDeliveryChannel.get('PortNo').setValue(res.PortNo);\n         this.frmEditDeliveryChannel.get('SecurityLayerID').setValue(res.SecurityLayerID);\n         this.frmEditDeliveryChannel.get('DefaultSenderEmail').setValue(res.DefaultSenderEmail);\n      \n         this.frmEditDeliveryChannel.get('DeviceName').setValue(res.DeviceName);\n  \n         this.frmEditDeliveryChannel.get('APIKey').setValue(res.APIKey);\n         this.frmEditDeliveryChannel.get('SenderKey').setValue(res.SenderKey);\n         this.frmEditDeliveryChannel.get('Server').setValue(res.Server);\n      \n      \n          // this.frmAlert.setValue(res.frmCntDataSource);\n        //  this.frmAlert.setValue(res.frmCntMeasures.pingMeasuresqLabel);\n        //  this.frmAlert.setValue(res.frmCntApplication.AppName);\n  \n        //  this.frmAlert.setValue({\n        //   frmCntAlertID: res.frmCntAlertID,\n        //   frmCntAlertName: res.frmCntAlertName,\n        //   frmCntRecipient: res.frmCntRecipient,  \n        //   frmCntDeliverTo: res.frmCntDeliverTo,\n        //   frmCntDataSource: res.frmCntDataSource,\n        //   frmCntMeasures: res.frmCntMeasures,\n        //   frmCntApplication: res.frmCntApplication,\n        \n        // });\n      });\n      \n    }\n  \n    ChannelTypeChanged(event) {\n      //update the ui\n      this.selectedChannelValue =event;\n      console.log(\"Selected Value is\"+this.selectedChannelValue)  \n      if(event==\"Email\"){\n        console.log(\"In email select value\"+this.selectedChannelValue);\n          this.ShowEmail=true;\n          this.ShowMobileApp=false;\n          // this.QlikServer = this.formBuilder.group({\n          //    id: '',\n          //   // DeliveryChannelID:[this.uID,Validators.required],\n          //   // DeliveryChannelName: new FormControl(this.ChannelNameArr, Validators.required),\n          //   // DeliveryChannelType : new FormControl(this.ChannelType,Validators.required),\n          //   Address :[null,Validators.required],\n          //   PortNo :[null,Validators.required],\n          //   SecurityLayerID :[null,Validators.required],\n          //   EmailUserName :[null,Validators.required],\n          //   Password:[null,Validators.required],\n          //   DefaultSenderEmail:[null,Validators.required],\n          //   InsertBy : AuthService.loggedUserName,\n          //   LoginUserID:AuthService.loggedUserTableID,\n          //   APIKey:[null],\n          //   SenderKey:[null],\n          //   Server:[null],\n          //   DeviceName: new FormControl(this.MobileChannels),\n          // })\n      }\n      else if(event==\"Mobile App\"){\n        console.log(\"In Mobile App select value\"+this.selectedChannelValue);\n        this.ShowMobileApp=true;\n        this.ShowEmail=false;\n        // this.frmEditDeliveryChannel = this.formBuilder.group({\n        //    id: '',\n        //   // DeliveryChannelID:[this.uID,Validators.required],\n        //   // DeliveryChannelName: new FormControl(this.ChannelNameArr, Validators.required),\n        //   // DeliveryChannelType : new FormControl(this.ChannelType,Validators.required),\n        //   Address :[null],\n        //   PortNo :[null],\n        //   SecurityLayerID :[null],\n        //   EmailUserName :[null],\n        //   Password:[null],\n        //   DefaultSenderEmail:[null],\n        //   InsertBy : AuthService.loggedUserName,\n        //   LoginUserID:AuthService.loggedUserTableID,\n        //   APIKey:[null,Validators.required],\n        //   SenderKey:[null,Validators.required],\n        //   Server:[null,Validators.required],\n        //   DeviceName: new FormControl(this.MobileChannels, Validators.required),\n        // })\n      }\n      else{\n        this.ShowMobileApp=false;\n        this.ShowEmail=false;\n      }\n    }\n    onFormSubmit(form:NgForm) {\n      console.log(this.route.snapshot.params['id'])\n      this.api.UpdateDeliveryChannel(this.route.snapshot.params['id'], form)\n        .subscribe(res => {\n            res['_id']=this.route.snapshot.params['id']\n            let id = res['_id'];\n            this.snackbar.open('Succesfully updated Delivery Channel Details', 'Close', {\n              duration: 3000,\n            });\n            this.router.navigate(['/admin/deliveryChannelDetails']);\n          }, (err) => {\n            this.snackbar.open('Something went wrong...!!', 'Close', {\n              duration: 3000,\n            });\n            console.log(err);\n          }\n        );\n    }\n  \n  }","module.exports = \".headerMargin{\\r\\n    padding-top: 10%;\\r\\n    }\\r\\n    .PaddingTop{\\r\\n        padding-top: \\\"100px\\\";\\r\\n        }\\r\\n    .PaddingHeader\\r\\n    {\\r\\n        padding-left: 50px;padding-top: 30px\\r\\n    }\\r\\n    .footer {\\r\\n        position: fixed;\\r\\n        background-color: darkgray;\\r\\n        color: black;\\r\\n        text-align: center;\\r\\n    }\"","module.exports = \"<div class=\\\"row headerMargin\\\">\\n  <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n    <mat-card>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <h4 class=\\\"text-success\\\"><b>Ping License Details</b></h4>\\n        </div>\\n      </div>\\n      <br>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3\\\">\\n            <img src=\\\"../../../../assets/imgs/LicenseImg.png\\\" height=\\\"100\\\" width=\\\"100\\\">\\n        </div>\\n        <div class=\\\"col-lg-9\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-5\\\">\\n                <p>User ID :</p>\\n            </div>\\n            <div class=\\\"col-lg-7\\\">\\n                <p>  {{userID}}</p>\\n                \\n              </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-5\\\">\\n                  <p>User Name :</p>\\n              </div>\\n              <div class=\\\"col-lg-7\\\">\\n                  <p>  {{UserName}}</p>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-5\\\">\\n                    <p>User Role :</p>\\n                </div>\\n                <div class=\\\"col-lg-7\\\">\\n                    <p>  {{UserRole}}</p>\\n                  </div>\\n            </div>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-5\\\">\\n                      <p>License :</p>\\n                  </div>\\n                  <div class=\\\"col-lg-7\\\">\\n                      <p>  Trail Version</p>\\n                  </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-5\\\">\\n                      <p>Key Status :</p>\\n                  </div>\\n                  <div class=\\\"col-lg-7\\\">\\n                      <p>  {{KeyStatus}}</p>\\n                    </div>\\n              </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-5\\\">\\n                        <p>Activation Date :</p>\\n                    </div>\\n                    <div class=\\\"col-lg-7\\\">\\n                        <p>  {{ActivationDate}}</p>\\n                      </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-5\\\">\\n                        <p>Expiration Date :</p>\\n                    </div>\\n                    <div class=\\\"col-lg-7\\\">\\n                        <p>  {{ExpirationDate}}</p>\\n                      </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-5\\\">\\n                        <p>Days Remaining :</p>\\n                    </div>\\n                    <div class=\\\"col-lg-7\\\">\\n                        <p>  {{DaysRemainig}}</p>\\n                      </div>\\n                </div>\\n        </div>\\n      </div>\\n<br>\\n<div class=\\\"row text-center\\\">\\n        <div class=\\\"col-lg-4 col-lg-offset-2\\\">\\n          <input type=\\\"button\\\" [disabled]=\\\"RenewStatus\\\" (click)=\\\"renewKey()\\\" class=\\\"btn btn-success\\\" value=\\\"Renew License\\\"/>\\n        </div>\\n        <div class=\\\"col-lg-4\\\">\\n            <input type=\\\"button\\\"  class=\\\"btn btn-info\\\" value=\\\"More Info\\\" style=\\\"padding-left: 20px\\\"/>\\n          </div>\\n      </div>\\n\\n    </mat-card>\\n  </div>\\n</div>\\n\"","import { Component, OnInit,ViewChild , Output, EventEmitter} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { LoginService } from '../../../LoginModule/login.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { existentialTypeParam } from 'babel-types';\nimport { promise } from 'protractor';\nimport { resolve, reject } from 'q';\nimport PasswordField from 'material-ui-password-field'\nimport { AdminService } from 'src/app/Admin/admin.service';\nimport { SuperAdminService } from 'src/app/SuperAdmin/super-admin.service';\nimport { AppService } from 'src/app/app.service';\nimport {AppComponent} from '../../../app.component'\nimport { HeaderComponent } from 'src/app/shared/header/header.component';\nimport { state } from '@angular/animations';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-license-details',\n  templateUrl: './license-details.component.html',\n  styleUrls: ['./license-details.component.css']\n})\nexport class LicenseDetailsComponent implements OnInit {\n  RenewStatus:boolean=false;\n  userID:string;\n  UserName:string\n  KeyStatus:string;\n  ActivationDate:string;\n  UserRole:string;\n  ExpirationDate:string;\n  DaysCounter:string;\n  DaysRemainig:string;\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private api: LoginService,\n    private formBuilder: FormBuilder,\n    public snackbar: MatSnackBar,\n    public superAdminService:SuperAdminService,\n    private commanAPI:AppService,\n    public PingAdminFlag:AppComponent,\n    private _flashMessagesService:FlashMessagesService \n  ) {}\n\n  ngOnInit() {\n    this.commanAPI.getLoggeddUser().subscribe(res=>{\n      this.userID=res.PingUserID\n      this.UserName=res.PingUserName     \n      this.UserRole=res.PingRole\n      this.api.CheckDateLocker().subscribe(resLic=>{\n        console.log(\"License Data\",resLic)\n      this.KeyStatus=resLic.LicenceStatus\n        this.ActivationDate=resLic.InstallationDate\n        this.ExpirationDate=resLic.ExpiryDate\n        this.DaysCounter=resLic.DayCounter\n        this.DaysRemainig=resLic.DaysRemaining\n        if(this.KeyStatus!=\"active\")\n        {\n          this.RenewStatus=false;\n        }\n        else\n        {\n          this.RenewStatus=true;\n        }\n      });\n    },err=>{\n\n      console.log(err)\n    });\n  }\n\n  renewKey(){\n    console.log(\"Create New Registery Key\");\n    this.api.RenewLicense().subscribe(res=>{\n      console.log(\"New RegisteryKey In Registery\",res)\n      this.router.navigate(['/login']); \n    });  \n\n  }\n\n}\n","module.exports = \"/* Structure */\\r\\ntable {\\r\\n    width: 100%;\\r\\n    transition: none !important;\\r\\n    box-shadow: none !important;\\r\\n    margin-top: -30px;\\r\\n  }\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 70%;\\r\\n  }\\r\\n#table-responsive{\\r\\n    margin-top: 5px;\\r\\n  }\\r\\n#row2{\\r\\n    margin-top: -2px;\\r\\n    padding-top: 8px;\\r\\n    padding-bottom: 10px;\\r\\n  }\\r\\n.table-responsive{\\r\\n    margin-top: -15px;\\r\\n    padding-top: 40px;\\r\\n  }\\r\\ntr.mat-header-row{\\r\\n    height: 37px;\\r\\n  }\\r\\n.table-bordered>thead>tr>th{\\r\\n    border: 1px solid rgb(231, 76, 60);\\r\\n  }\\r\\ntd{\\r\\n    color: rgb(127, 127, 127)\\r\\n  }\\r\\n.mat-header-cell {\\r\\n    color: rgb(102,102,102);\\r\\n  }\\r\\nth{\\r\\n    padding-top: -100px;\\r\\n    font-size: 14px;\\r\\n    background-color: rgb(238, 238, 238);\\r\\n  }\\r\\n#btn{\\r\\n    background-color: rgb(249, 25, 66);\\r\\n    color: rgb(255, 255, 255)\\r\\n  }\\r\\n#th_allign{\\r\\n    text-align: center;\\r\\n  }\"","module.exports = \"<br><br><br><br>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"btn-group btn-breadcrumb \\\">\\n                <a routerLink=\\\"/pingAlert/alertInbox\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n                <a routerLink=\\\"/UserRoleCreate\\\" class=\\\"btn btn-default\\\">Users</a>\\n                <a routerLink=\\\"/UserRoleDetails\\\" class=\\\"btn btn-default\\\">Channel Type Details</a>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4 pull-right\\\">\\n        <div class=\\\"input-group\\\" style=\\\"float:right\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" id=\\\"txtSearch\\\"/> -->\\n          <input class=\\\"form-control\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" >\\n              <div class=\\\"input-group-btn\\\">\\n                  <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n                      <span class=\\\"glyphicon glyphicon-search\\\"></span>\\n                  </button>\\n              </div>\\n          </div>\\n       </div>\\n\\n\\n    </div>\\n</div>\\n\\n<!--\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-3\\\"></div>\\n  <div class=\\\"col-xs-4\\\">\\n\\n  </div>\\n</div> -->\\n<br>\\n\\n\\n    <div class=\\\"container\\\" id=\\\"table-responsive\\\">\\n          <div class=\\\"table-responsive\\\" >\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\" mat-elevation-z8 table-bordered table-striped\\\">\\n\\n                <!-- Channel Type Id Column -->\\n                <ng-container matColumnDef=\\\"ChannelTypeID\\\">\\n                <th class=\\\"text-center\\\" id=\\\"th_allign\\\" mat-header-cell *matHeaderCellDef >Channel Type ID</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ChannelTypeID}} </td>\\n                </ng-container>\\n\\n                <!-- Channel Type name Column -->\\n                <ng-container matColumnDef=\\\"ChannelTypeName\\\">\\n                  <th mat-header-cell id=\\\"th_allign\\\" class=\\\"text-center\\\" *matHeaderCellDef> Channel Type Name </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.ChannelTypeName}} </td>\\n                  </ng-container>\\n\\n                <!-- Insert By Column -->\\n                <ng-container matColumnDef=\\\"InsertBy\\\">\\n                <th mat-header-cell id=\\\"th_allign\\\" class=\\\"text-center\\\" *matHeaderCellDef> Insert By </th>\\n                <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.InsertBy}} </td>\\n                </ng-container>\\n\\n                <!-- Is aCtive Column -->\\n                <ng-container matColumnDef=\\\"IsActive\\\">\\n                  <th mat-header-cell id=\\\"th_allign\\\" class=\\\"text-center\\\"  *matHeaderCellDef>Is Active </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.IsActive}} </td>\\n                  </ng-container> \\n                \\n                <!-- Colum Edit/ Delete -->\\n                <ng-container matColumnDef=\\\"edit\\\">\\n                    <th mat-header-cell id=\\\"th_allign\\\" class=\\\"text-center\\\" *matHeaderCellDef>Edit / Delete  </th>\\n\\n                   <td mat-cell *matCellDef=\\\"let element\\\">\\n                     <div class=\\\"row col-md-offset-3\\\">\\n                       <div class=\\\"col-md-2\\\">\\n                          <!-- <a routerLink=\\\"/edit_alert\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                          <!-- <a type='submit' [routerLink]=\\\"['/edit_new',element.id]\\\" (click)=\\\"onEdit(element._id)\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                          <a type='submit' [routerLink]=\\\"['/UserRoleEdit/',element._id]\\\"  style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a>\\n\\n                        </div>\\n                       &nbsp;\\n                       <div class=\\\"col-md-2\\\">\\n                            <a style=\\\"cursor: pointer;\\\" (click)=\\\"deleteUser(element._id)\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></a>\\n                           <!-- <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteAlert(element._id)\\\"><mat-icon>delete</mat-icon></a> -->\\n                        </div>\\n                     </div>\\n                   </td>\\n                 </ng-container>\\n\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n              </table>\\n\\n          </div>\\n\\n\\n        <br>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">\\n              <button mat-raised-button id=\\\"btn\\\" [routerLink]=\\\"['/admin/createChannelType']\\\">Create Channel Type</button>\\n          </div>\\n          <div class=\\\"col-md-4\\\"></div>\\n          <div class=\\\"col-md-5\\\">\\n            <mat-paginator  [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20, 30, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n        </div>\\n        </div>\\n      </div>\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit , ViewChild, Injectable} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Location} from '@angular/common';\nimport {  FormGroup, FormControl, NgForm } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminService } from '../../../../admin.service';\n@Component({\n  selector: 'app-channel-type-details',\n  templateUrl: './channel-type-details.component.html',\n  styleUrls: ['./channel-type-details.component.css']\n})\nexport class ChannelTypeDetailsComponent implements OnInit {\n  frmChannelType: FormGroup;\n  ChannelTypeID: string;\n  ChannelTypeName: string; \n  //IsActive:string;  \n    InsertBy : string;\n    constructor(private api: AdminService, private router: Router, private location: Location, private route: ActivatedRoute,public snackbar: MatSnackBar) { }\n    displayedColumns = ['ChannelTypeID','ChannelTypeName','InsertBy','edit'];\n    dataSource = new MatTableDataSource();\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n  \n    applyFilter(filterValue: string) {\n      filterValue = filterValue.trim(); // Remove whitespace\n      filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n      this.dataSource.filter = filterValue;\n    }\n    ngOnInit() {\n      console.log(\"in channel Type Init\");\n     //this.onEdit(this.route.snapshot.params['id']);\n      this.api.getChannelTypes()\n      .subscribe(res => {\n        // if(res.code == 200){\n          // console.log(\"Got oit\"+res);\n          this.dataSource = new MatTableDataSource(res);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        // }   \n      }, err => {\n        console.log(err);\n      });\n      this.frmChannelType = new FormGroup ({\n        ChannelID:new FormControl(),\n    ChannelName:new FormControl(),\n    //IsActive:new FormControl(),\n      InsertBy :new FormControl(localStorage.getItem('User')),\n       \n      });\n    }\n                // Edit User\nonEdit(id) {\n  console.log('In Edit User');\n  console.log(id);\n  this.api.getCahnnelType(id)\n  .subscribe( res => {\n    console.log(res);\n    this.ChannelTypeID = id;\n  });\n}\n// delete User\ndeleteUser(id) {\n  console.log('In Delete User');\n  console.log(id);\n  this.api.deleteCahnnelType(id)\n  .subscribe(res => {\n    console.log('ping user new Data');\n    this.api.getChannelNames()\n    .subscribe(res => {\n      console.log(res);\n      this.dataSource = new MatTableDataSource(res);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.snackbar.open('Succesfully deleted user', 'Close', {\n        duration: 3000,\n      });\n      \n    }, err => {\n      console.log(err);\n    });\n           \n  }, (err) => {\n  console.log(err);\n  }\n  );\n}\n\n}\nexport class AlertDataSource extends DataSource<any> {\n  constructor(private api: AdminService) {\n    super();\n  }\n\n  connect() {\n    return  this.api.getChannelTypes()\n  }\n\n  disconnect() {\n\n  }\n}","module.exports = \"/* Structure */\\r\\ntable {\\r\\n    width: 100%;\\r\\n    transition: none !important;\\r\\n    box-shadow: none !important;\\r\\n    margin-top: -30px;\\r\\n  }\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 70%;\\r\\n  }\\r\\n#table-responsive{\\r\\n    margin-top: 5px;\\r\\n  }\\r\\n#row2{\\r\\n    margin-top: -2px;\\r\\n    padding-top: 8px;\\r\\n    padding-bottom: 10px;\\r\\n  }\\r\\n.table-responsive{\\r\\n    margin-top: -15px;\\r\\n    padding-top: 40px;\\r\\n  }\\r\\ntr.mat-header-row{\\r\\n    height: 37px;\\r\\n  }\\r\\n.table-bordered>thead>tr>th{\\r\\n    border: 1px solid rgb(231, 76, 60);\\r\\n  }\\r\\n/* Switch Button */\\r\\nth{\\r\\n    padding-top: -100px;\\r\\n  }\\r\\ntd{\\r\\n    color: rgb(127, 127, 127)\\r\\n  }\\r\\n.mat-header-cell {\\r\\n    color: rgb(255, 255, 255);\\r\\n  }\\r\\nth{\\r\\n    font-size: 14px;\\r\\n    background-color: rgb(249, 55, 66);\\r\\n  \\r\\n  }\\r\\n.btn-danger{\\r\\n    background-color: rgb(249, 55, 66);\\r\\n    color: rgb(255, 255, 255)\\r\\n  }\\r\\n.switch {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    width: 60px;\\r\\n    height: 24px;\\r\\n  }\\r\\n/* Hide default HTML checkbox */\\r\\n.switch input {display:none;}\\r\\n/* The slider */\\r\\n.slider {\\r\\n    position: absolute;\\r\\n    cursor: pointer;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    background-color: rgb(216, 50, 50);\\r\\n    transition: .4s;\\r\\n  }\\r\\n.slider:before {\\r\\n    position: absolute;\\r\\n    content: \\\"\\\";\\r\\n    height: 16px;\\r\\n    width: 16px;\\r\\n    left: 4px;\\r\\n    bottom: 4px;\\r\\n    background-color: white;\\r\\n    transition: .4s;\\r\\n  }\\r\\ninput:checked + .slider {\\r\\n    background-color:rgb(64, 143, 64);\\r\\n  }\\r\\ninput:focus + .slider {\\r\\n    box-shadow: 0 0 1px rgb(64, 143, 64);\\r\\n  }\\r\\ninput:checked + .slider:before {\\r\\n    -webkit-transform: translateX(26px);\\r\\n    transform: translateX(36px);\\r\\n  }\\r\\n/* Rounded sliders */\\r\\n.slider.round {\\r\\n    border-radius: 34px;\\r\\n  }\\r\\n.slider.round:before {\\r\\n    border-radius: 50%;\\r\\n  }\\r\\n  \"","module.exports = \"<br><br><br><br>\\n\\n<br><br><br><br>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"btn-group btn-breadcrumb \\\">\\n              <a routerLink=\\\"/pingAlert/alertInbox\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n              <a class=\\\"btn btn-default\\\">Admin</a>\\n              <a routerLink=\\\"/UserRoleDetails\\\" class=\\\"btn btn-default\\\">User Preferences</a>\\n              <a class=\\\"btn btn-default active\\\">Add User Preference</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\"> \\n    <br>\\n    <form [formGroup]=\\\"ChannelType\\\" (ngSubmit)=\\\"onFormSubmit(ChannelType.value)\\\">\\n      <div class=\\\"col-lg-9 col-lg-offset-1\\\">\\n          <div class=\\\"panel panel-default\\\">\\n              <div class=\\\"panel-heading\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">Channel Type</div>\\n                  <div class=\\\"col-lg-2\\\"></div>\\n                  <div class=\\\"col-lg-3\\\"></div>\\n                  <div class=\\\"col-lg-4\\\"><button mat-stroked-button class=\\\"text-ping pull-right\\\" [routerLink]=\\\"['/UserRoleDetails']\\\" ><mat-icon class=\\\"text-ping\\\" matSuffix>format_list_numbered</mat-icon>View User</button></div>\\n                </div>\\n               \\n                  \\n              </div>\\n              <div class=\\\"panel-body\\\">                \\n              <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-9\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                          <mat-label>Channel Type ID *</mat-label>\\n                          <!-- <span matPrefix><mat-icon matPrefix>edit</mat-icon> &nbsp;</span> -->\\n                          <input matInput placeholder=\\\"Enter Channel Type\\\" formControlName=\\\"ChannelTypeID\\\"\\n                                 [errorStateMatcher]=\\\"matcher\\\">\\n                          <mat-error>\\n                            <span *ngIf=\\\"!ChannelType.get('ChannelTypeID').valid && ChannelType.get('ChannelTypeID').touched\\\">Please enter Cahnnel Type ID</span>\\n                          </mat-error>\\n                          <mat-icon class=\\\"text-ping\\\" matSuffix>supervised_user_circle</mat-icon>\\n                        </mat-form-field>\\n                \\n                        </div>\\n                  </div>\\n                  \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-9\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                        <mat-label>Channel Name *</mat-label>\\n                        <!-- <span matPrefix><mat-icon matPrefix>edit</mat-icon> &nbsp;</span> -->\\n                        <input matInput placeholder=\\\"Enter Channel Type\\\" formControlName=\\\"ChannelTypeName\\\"\\n                               [errorStateMatcher]=\\\"matcher\\\">\\n                        <mat-error>\\n                          <span *ngIf=\\\"!ChannelType.get('ChannelTypeName').valid && ChannelType.get('ChannelTypeName').touched\\\">Please enter Channel Type</span>\\n                        </mat-error>\\n                        <mat-icon class=\\\"text-ping\\\" matSuffix>supervised_user_circle</mat-icon>\\n                      </mat-form-field>\\n              \\n                      </div>\\n                </div>\\n               \\n                \\n                 \\n                  <!-- <div class=\\\"row\\\"> \\n                    <div class=\\\"col-lg-4\\\">\\n                      <button mat-stroked-button class=\\\"text-ping\\\" [routerLink]=\\\"['/UserRoleDetails']\\\" ><mat-icon class=\\\"text-ping\\\" matSuffix>format_list_numbered</mat-icon>View User</button>                    </div>\\n                    <div class=\\\"col-lg-4\\\">\\n                      <button mat-stroked-button class=\\\"text-ping\\\"><mat-icon class=\\\"text-ping\\\" matSuffix>group</mat-icon>Group Details</button>\\n                    </div>\\n                  \\n                  </div> -->\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-9\\\">\\n                          \\n                      <button type=\\\"submit\\\" [disabled]=\\\"!ChannelType.valid\\\" mat-raised-button class=\\\"text-ping\\\"><mat-icon>save</mat-icon></button>\\n                  \\n              </div>\\n                    <!-- <div class=\\\"col-lg-offset-3\\\">\\n                        <button mat-fab class=\\\"text-ping\\\">{{usercount}}</button>\\n                    </div> -->\\n                    \\n                  </div>\\n                  \\n                    \\n              </div></div>\\n            </div>\\n      </div>\\n      \\n        \\n    </form>\\n\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminService } from '../../../../admin.service';\nimport { AppService } from '../../../../../app.service';\n\n\n@Component({\n  selector: 'app-create-channel-type',\n  templateUrl: './create-channel-type.component.html',\n  styleUrls: ['./create-channel-type.component.css']\n})\nexport class CreateChannelTypeComponent implements OnInit {\n  matcher;\n  ChannelType: FormGroup;\n  PingUserID: string;\n  ChannelTypeID: String;\n  ChannelTypeName: String;   \n    InsertBy : String='QlikAdmin';   \n    UpdateBy : String; \n    count: number=0;\n    LoginUserID: string = 'User101';\n    userID: string = '';\n    uID: any =  '';\n    LoggedUserName :string='';\n    LoggedUSerID:string='';\n    usercount:String='';\n    constructor(private router: Router,private commanApi:AppService,  private api: AdminService, private formBuilder: FormBuilder,public snackbar: MatSnackBar,) { }\n  \n    ngOnInit() {\n      this.commanApi.getLoggeddUser().subscribe( res => {\n        this.LoggedUserName=res.PingUserName;\n        this.LoggedUSerID=res.PingUserID; \n        this.ChannelType.get('InsertBy').setValue(res.PingUserName) \n        this.ChannelType.get('LoginUserID').setValue(res.PingUserID)\n       // console.log(\"USr Name\"+this.LoggedUserName+\"  Id\"+this.LoggedUSerID) \n        this.api.getChannelTypes()\n      .subscribe(res => {\n        this.count=res.length;\n        this.count=this.count+1;\n        this.userID = 'ChannelType-' + this.count ;\n        this.uID = this.ChannelType.get('ChannelTypeID').setValue(this.userID);\n  \n      }, err => {\n        console.log(err);\n        this.usercount='0';\n      });\n  \n     \n                            \n      \n      },err => {\n        console.log(\"err\");\n        console.log(err);\n        this.router.navigate(['/login']);\n      })\n      this.ChannelType = this.formBuilder.group({\n        // id: '',\n        ChannelTypeID:[this.uID,Validators.required],\n        ChannelTypeName: [null,Validators.required],\n        InsertBy : '',\n        LoginUserID:'',    \n      })  \n       \n    }\n    onFormSubmit(form:NgForm) {\n      console.log('Form Submited ',form);\n      this.api.postChannelType(form)\n        .subscribe(res => {\n            //let id = res['_id'];\n            this.snackbar.open('Succesfully Submitted Channel Type Details', 'Close', {\n              duration: 3000,\n            });\n            this.router.navigate(['/admin/channelTypeDetails']);\n            console.log(\"Channel Type Record Successfully  Saved....\");\n          }, (err) => {\n            this.snackbar.open('Something went wrong..!!', 'Close', {\n              duration: 3000,\n            });\n            console.log(err);\n          });\n    }\n\n}\n\n","module.exports = \"/* Structure */\\r\\ntable {\\r\\n    width: 100%;\\r\\n    transition: none !important;\\r\\n    box-shadow: none !important;\\r\\n    margin-top: -30px;\\r\\n  }\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 70%;\\r\\n  }\\r\\n#table-responsive{\\r\\n    margin-top: 5px;\\r\\n  }\\r\\n#row2{\\r\\n    margin-top: -2px;\\r\\n    padding-top: 8px;\\r\\n    padding-bottom: 10px;\\r\\n  }\\r\\n.table-responsive{\\r\\n    margin-top: -15px;\\r\\n    padding-top: 40px;\\r\\n  }\\r\\ntr.mat-header-row{\\r\\n    height: 37px;\\r\\n  }\\r\\n.table-bordered>thead>tr>th{\\r\\n    border: 1px solid rgb(231, 76, 60);\\r\\n  }\\r\\n/* Switch Button */\\r\\nth{\\r\\n    padding-top: -100px;\\r\\n  }\\r\\ntd{\\r\\n    color: rgb(127, 127, 127)\\r\\n  }\\r\\n.mat-header-cell {\\r\\n    color: rgb(102,102,102);\\r\\n  }\\r\\nth{\\r\\n    padding-top: -100px;\\r\\n    font-size: 14px;\\r\\n    background-color: rgb(238, 238, 238);\\r\\n  }\\r\\n#btn{\\r\\n    background-color: rgb(249, 25, 66);\\r\\n    color: rgb(255, 255, 255)\\r\\n  }\\r\\n#th-align{\\r\\n    text-align: center;\\r\\n  }\\r\\n            \"","module.exports = \"<br><br><br><br>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"btn-group btn-breadcrumb \\\">\\n                <a routerLink=\\\"/pingAlert/alertInbox\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n                <a class=\\\"btn btn-default\\\">Admin</a>\\n                <a routerLink=\\\"/admin/channelNameDetails\\\" class=\\\"btn btn-default\\\">Channel Details</a>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4 pull-right\\\">\\n        <div class=\\\"input-group\\\" style=\\\"float:right\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" id=\\\"txtSearch\\\"/> -->\\n          <input class=\\\"form-control\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" >\\n              <div class=\\\"input-group-btn\\\">\\n                  <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n                      <span class=\\\"glyphicon glyphicon-search\\\"></span>\\n                  </button>\\n              </div>\\n          </div>\\n       </div>\\n    </div>\\n</div>\\n\\n<br>\\n\\n\\n    <div class=\\\"container\\\" id=\\\"table-responsive\\\">\\n          <div class=\\\"table-responsive\\\" >\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\" mat-elevation-z8 table-bordered table-striped\\\">\\n\\n                <!-- Channel name id Column -->\\n                <ng-container matColumnDef=\\\"ChannelID\\\">\\n                <th  mat-header-cell id=\\\"th-align\\\" class=\\\"text-center\\\" *matHeaderCellDef style=\\\"margin-left: 100px;\\\">Channel ID</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ChannelID}} </td>\\n                </ng-container>\\n\\n                <!-- channel name  Column -->\\n                <ng-container matColumnDef=\\\"ChannelName\\\">\\n                  <th mat-header-cell id=\\\"th-align\\\" class=\\\"text-center\\\"  *matHeaderCellDef> Channel Name </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.ChannelName}} </td>\\n                  </ng-container>\\n\\n                <!-- Insert By Column -->\\n                <ng-container matColumnDef=\\\"InsertBy\\\">\\n                <th mat-header-cell id=\\\"th-align\\\" class=\\\"text-center\\\"  *matHeaderCellDef> Insert By </th>\\n                <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.InsertBy}} </td>\\n                </ng-container>\\n\\n                <!-- Is active Column -->\\n                <ng-container matColumnDef=\\\"IsActive\\\">\\n                  <th mat-header-cell id=\\\"th-align\\\" class=\\\"text-center\\\"  *matHeaderCellDef>&nbsp;&nbsp;Is Active </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.IsActive}} </td>\\n                  </ng-container> \\n                  \\n                   \\n                <!-- Colum Edit/ Delete -->\\n                <ng-container matColumnDef=\\\"edit\\\">\\n                    <th mat-header-cell id=\\\"th-align\\\" class=\\\"text-center\\\" *matHeaderCellDef>Edit / Delete  </th>\\n\\n                   <td mat-cell *matCellDef=\\\"let element\\\">\\n                     <div class=\\\"row col-md-offset-3\\\">\\n                       <div class=\\\"col-md-2\\\">\\n                          <!-- <a routerLink=\\\"/edit_alert\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                          <!-- <a type='submit' [routerLink]=\\\"['/edit_new',element.id]\\\" (click)=\\\"onEdit(element._id)\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                          <!-- <a type='submit' [routerLink]=\\\"['/UserRoleEdit/',element._id]\\\"  style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n\\n                        </div>\\n                       &nbsp;\\n                       <div class=\\\"col-md-2\\\">\\n                            <a style=\\\"cursor: pointer;\\\" (click)=\\\"deleteUser(element._id)\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></a>\\n                           <!-- <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteAlert(element._id)\\\"><mat-icon>delete</mat-icon></a> -->\\n                        </div>\\n                     </div>\\n                   </td>\\n                 </ng-container>\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n              </table>\\n          </div>\\n        <br>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">\\n              <button mat-raised-button id=\\\"btn\\\" [routerLink]=\\\"['/admin/createChannelName']\\\">Create Channel</button>\\n          </div>\\n          <div class=\\\"col-md-4\\\"></div>\\n          <div class=\\\"col-md-5\\\">\\n            <mat-paginator  [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20, 30, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n        </div>\\n        </div>\\n      </div>\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit , ViewChild, Injectable} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Location} from '@angular/common';\nimport {  FormGroup, FormControl, NgForm } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminService } from '../../../admin.service';\nimport { AppService } from '../../../../app.service';\n@Component({\n  selector: 'app-channel-name-details',\n  templateUrl: './channel-name-details.component.html',\n  styleUrls: ['./channel-name-details.component.css']\n})\nexport class ChannelNameDetailsComponent implements OnInit {\n  frmChannelName: FormGroup;\n  ChannelID: string;\n  ChannelName: string; \n  //IsActive:string;  \n    InsertBy : string;\n    constructor(private api: AdminService,private commanApi:AppService, private router: Router, private location: Location, private route: ActivatedRoute,public snackbar: MatSnackBar) { }\n    displayedColumns = ['ChannelID','ChannelName','InsertBy','edit'];\n    dataSource = new MatTableDataSource();\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n  \n    applyFilter(filterValue: string) {\n      filterValue = filterValue.trim(); // Remove whitespace\n      filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n      this.dataSource.filter = filterValue;\n    }\n\n    ngOnInit() {\n      this.commanApi.getLoggeddUser()\n      .subscribe(res=>{\n        this.api.getChannelNames()\n        .subscribe(res => {\n        // if(res.code == 200){\n          //console.log(\"Got oit\"+res);\n          this.dataSource = new MatTableDataSource(res);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n      }, err => {\n        console.log(err);\n        this.router.navigate(['/login']);\n      });\n      },err => {\n        console.log(\"err\");\n        console.log(err);\n        this.router.navigate(['/login']);\n      }) \n      \n      this.frmChannelName = new FormGroup ({\n        ChannelID:new FormControl(),\n        ChannelName:new FormControl(),\n        //IsActive:new FormControl(),\n        InsertBy :new FormControl(localStorage.getItem('User'))\n       \n      });\n    }\n      // Edit User\n    onEdit(id) {\n      //console.log('In Edit Channel Name');\n      //console.log(id);\n      this.api.getCahnnelName(id)\n      .subscribe( res => {\n        //console.log(res);\n        this.ChannelID = id;\n      });\n    }\n    // delete User\n    deleteUser(id) {\n     // console.log('In Delete Channel Name ');\n      //console.log(id);\n      this.api.deleteCahnnelName(id)\n      .subscribe(res => {\n        //console.log('ping user new Data');\n        this.api.getChannelNames()\n        .subscribe(res => {\n          this.snackbar.open('Succesfully deleted Channel Name', 'Close', {\n            duration: 3000,\n          });\n          //console.log(res);\n          this.dataSource = new MatTableDataSource(res);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }, err => {\n          console.log(err);\n        });\n                // this.api.getPingUsersNew()\n                // .subscribe( res => {\n                //   console.log('ping user new Data');\n                //   console.log(res);\n                //   this.snackbar.open('Succesfully deleted user', 'Close', {\n                //     duration: 3000,\n                //   });\n                //   this.dataSource = new MatTableDataSource(res);\n                //   this.dataSource.sort = this.sort;\n                //   this.dataSource.paginator = this.paginator;\n                // }, err => {\n                //   console.log(err);\n                // });\n\n        // this.router.navigateByUrl(\"/alert_Inbox\");\n        // this.router.navigate(['/alert_examples']);\n      }, (err) => {\n      console.log(err);\n      }\n      );\n    }\n\n}\n    export class AlertDataSource extends DataSource<any> {\n      constructor(private api: AdminService,private commanApi:AppService) {\n        super();\n      }\n\n      connect() {\n        return  this.api.getChannelNames()\n      }\n\n      disconnect() {\n\n      }\n    }\n","module.exports = \"#edit{\\r\\n    background-color:rgb(231, 76, 60);\\r\\n    padding-top: 14px;\\r\\n  }\\r\\n  \\r\\n  .btn-primary{\\r\\n    margin-left: 40%;\\r\\n  }\\r\\n  \\r\\n  #container1{\\r\\n    border: 1px solid rgb(236, 235, 235);\\r\\n    margin-left:13%\\r\\n  }\\r\\n  \\r\\n  /* #margin{\\r\\n    margin-left: 10% ;\\r\\n  } */\\r\\n  \\r\\n  .btn-primary {\\r\\n  background-color:rgb(231, 76, 60);\\r\\n  border: rgb(231, 76, 60);\\r\\n  }\\r\\n  \\r\\n  #btn{\\r\\n    background-color: rgb(249, 25, 66);\\r\\n    color: rgb(255, 255, 255)\\r\\n  }\\r\\n  \\r\\n  .example-form {\\r\\n    min-width: 80px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width:nth-last-child() {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  \\r\\n  .button-row {\\r\\n    margin: 10px 0;\\r\\n  }\\r\\n  \\r\\n  .text-ping{\\r\\n    color: red\\r\\n  }\\r\\n  \\r\\n  .text-white{\\r\\n    color: white;\\r\\n  }\\r\\n  \"","module.exports = \"<br><br><br><br>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"btn-group btn-breadcrumb \\\">\\n              <a routerLink=\\\"/pingAlert/alertInbox\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n              <a class=\\\"btn btn-default\\\">Admin</a>\\n              <a routerLink=\\\"/admin/channelNameDetails\\\" class=\\\"btn btn-default\\\">Channel Details</a>\\n              <a class=\\\"btn btn-default active\\\">Add Channel Name</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\"> \\n    <br>\\n    <form [formGroup]=\\\"frmChannelName\\\" (ngSubmit)=\\\"onFormSubmit(frmChannelName.value)\\\">\\n      <div class=\\\"col-lg-9 col-lg-offset-1\\\">\\n          <div class=\\\"panel panel-default\\\">\\n              <div class=\\\"panel-heading\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">Channel Name</div>\\n                  <div class=\\\"col-lg-2\\\"></div>\\n                  <div class=\\\"col-lg-3\\\"></div>\\n                  <div class=\\\"col-lg-4\\\"><button mat-stroked-button class=\\\"text-ping pull-right\\\" [routerLink]=\\\"['/admin/channelNameDetails']\\\" ><mat-icon class=\\\"text-ping\\\" matSuffix>format_list_numbered</mat-icon>View Channels</button></div>\\n                </div>\\n               \\n                  \\n              </div>\\n              <div class=\\\"panel-body\\\">                \\n              <div class=\\\"col-lg-6\\\">\\n\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-9\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                          <mat-label>Channel ID *</mat-label>\\n                          <!-- <span matPrefix><mat-icon matPrefix>edit</mat-icon> &nbsp;</span> -->\\n                          <input matInput placeholder=\\\"Enter Channel Name\\\" formControlName=\\\"ChannelID\\\"\\n                                 [errorStateMatcher]=\\\"matcher\\\">\\n                          <mat-error>\\n                            <span *ngIf=\\\"!frmChannelName.get('ChannelID').valid && frmChannelName.get('ChannelID').touched\\\">Please enter User Name</span>\\n                          </mat-error>\\n                          <mat-icon class=\\\"text-ping\\\" matSuffix>supervised_user_circle</mat-icon>\\n                        </mat-form-field>\\n                \\n                        </div>\\n                  </div>\\n                  \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-9\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                        <mat-label>Channel Name *</mat-label>\\n                        <!-- <span matPrefix><mat-icon matPrefix>edit</mat-icon> &nbsp;</span> -->\\n                        <input matInput placeholder=\\\"Enter Channel Name\\\" formControlName=\\\"ChannelName\\\"\\n                               [errorStateMatcher]=\\\"matcher\\\">\\n                        <mat-error>\\n                          <span *ngIf=\\\"!frmChannelName.get('ChannelName').valid && frmChannelName.get('ChannelName').touched\\\">Please enter User Name</span>\\n                        </mat-error>\\n                        <mat-icon class=\\\"text-ping\\\" matSuffix>supervised_user_circle</mat-icon>\\n                      </mat-form-field>\\n              \\n                      </div>\\n                </div>\\n               \\n                \\n                 \\n                  <!-- <div class=\\\"row\\\"> \\n                    <div class=\\\"col-lg-4\\\">\\n                      <button mat-stroked-button class=\\\"text-ping\\\" [routerLink]=\\\"['/UserRoleDetails']\\\" ><mat-icon class=\\\"text-ping\\\" matSuffix>format_list_numbered</mat-icon>View User</button>                    </div>\\n                    <div class=\\\"col-lg-4\\\">\\n                      <button mat-stroked-button class=\\\"text-ping\\\"><mat-icon class=\\\"text-ping\\\" matSuffix>group</mat-icon>Group Details</button>\\n                    </div>\\n                  \\n                  </div> -->\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-9\\\">\\n                          \\n                      <button type=\\\"submit\\\" mat-raised-button id=\\\"btn\\\" [disabled]=\\\"!frmChannelName.valid\\\" mat-raised-button class=\\\"text-ping\\\">Save</button>\\n                  \\n              </div>\\n                    <!-- <div class=\\\"col-lg-offset-3\\\">\\n                        <button mat-fab class=\\\"text-ping\\\">{{usercount}}</button>\\n                    </div> -->\\n                    \\n                  </div>\\n                  \\n                    \\n              </div></div>\\n            </div>\\n      </div>\\n      \\n        \\n    </form>\\n\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminService } from '../../../admin.service';\nimport { AppService } from '../../../../app.service';\n@Component({\n  selector: 'app-create-channel-name',\n  templateUrl: './create-channel-name.component.html',\n  styleUrls: ['./create-channel-name.component.css']\n})\nexport class CreateChannelNameComponent implements OnInit {\n  matcher;\n  frmChannelName: FormGroup;\n  PingUserID: string;\n  ChannelID: String;\n    ChannelName: String;   \n    InsertBy : String;     \n    UpdateBy : String; \n    IsActive:Boolean\n    count: number=0;\n    LoginUserID: string;\n    userID: string = '';\n    uID: any =  '';\n    usercount:String='';\n    constructor(private router: Router, private commanAPI:AppService, private api: AdminService, private formBuilder: FormBuilder,public snackbar: MatSnackBar,) { }\n    ngOnInit() {\n      this.commanAPI.getLoggeddUser()\n      .subscribe(res=>{\n        this.frmChannelName.get('InsertBy').setValue(res.PingUserName) \n        this.frmChannelName.get('LoginUserID').setValue(res.PingUserID)       \n        this.api.getChannelNames()\n        .subscribe(res => {\n          console.log(res);\n          this.count=res.length;\n          this.count=this.count+1;\n          this.userID = 'Channel-' + this.count ;\n          this.uID = this.frmChannelName.get('ChannelID').setValue(this.userID);\n    \n        }, err => {\n          console.log(err);\n          this.usercount='0';\n        });\n      },err => {\n        console.log(\"err\");\n        console.log(err);\n        this.router.navigate(['/login']);\n      }) \n      this.frmChannelName = this.formBuilder.group({\n        // id: '',\n        ChannelID:[this.uID,Validators.required],\n        ChannelName: [null,Validators.required],\n        InsertBy : [''],\n        LoginUserID:[''],\n      }) \n       \n    }\n  \n    onFormSubmit(form:NgForm) {\n      this.api.postChannelName(form)\n        .subscribe(res => {\n            this.snackbar.open('Succesfully submitted channel details', 'Close', {\n              duration: 3000,\n            });\n            this.router.navigate(['/admin/channelNameDetails']);\n            console.log(\"Successfully Record Saved....\");\n          }, (err) => {\n            this.snackbar.open('Something went wrong..!!', 'Close', {\n              duration: 3000,\n            });\n            console.log(err);\n          });\n    }\n\n}\n","module.exports = \"/* Structure */\\r\\ntable {\\r\\n    width: 100%;\\r\\n    transition: none !important;\\r\\n    box-shadow: none !important;\\r\\n    margin-top: -30px;\\r\\n  }\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 70%;\\r\\n  }\\r\\n#row2{\\r\\n    margin-top: -2px;\\r\\n    padding-top: 8px;\\r\\n    padding-bottom: 10px;\\r\\n    /* width: 99%; */\\r\\n  }\\r\\n/* mat-slide-toggle {\\r\\n    margin-left: 10px;\\r\\n  } */\\r\\n.table-responsive{\\r\\n    margin-top: -15px;\\r\\n    padding-top: 40px;\\r\\n  }\\r\\ntr.mat-header-row{\\r\\n    height: 37px;\\r\\n  }\\r\\n.table-bordered>thead>tr>th{\\r\\n    border: 1px solid rgb(231, 76, 60);\\r\\n  }\\r\\ntd{\\r\\n    color: rgb(127, 127, 127)\\r\\n  }\\r\\n.mat-header-cell {\\r\\n    color: rgb(102,102,102);\\r\\n  }\\r\\nth{\\r\\n    padding-top: -100px;\\r\\n    font-size: 14px;\\r\\n    background-color: rgb(238, 238, 238);\\r\\n  }\\r\\n#th_allign{\\r\\n    text-align: center;\\r\\n  }\\r\\n#button{\\r\\n    background-color: rgb(249, 25, 66);\\r\\n    color: rgb(255, 255, 255);\\r\\n    text-decoration: none;\\r\\n  }\\r\\n#height{\\r\\n    height: 10px;\\r\\n  }\\r\\n* {\\r\\n    font-family: 'Nunito', 'Glyphicons Halflings';\\r\\n  }\\r\\n  \"","module.exports = \"<br><br><br><br>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\" id=\\\"height\\\">\\n          <flash-messages></flash-messages>\\n      </div>\\n    </div>\\n</div>\\n<div>\\n      \\n  <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\"></div>\\n        <div class=\\\"col-md-4\\\"></div>\\n          <div class=\\\"col-md-4 \\\">\\n            <div class=\\\"input-group\\\">\\n              <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" id=\\\"txtSearch\\\"/> -->\\n              <input class=\\\"form-control\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" >\\n                  <div class=\\\"input-group-btn\\\">\\n                      <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n                          <span class=\\\"glyphicon glyphicon-search\\\"></span>\\n                      </button>\\n                  </div>\\n              </div>\\n           \\n    </div>\\n      </div>\\n    </div>\\n<!-- <div class=\\\"row\\\">\\n  <div class=\\\"col-xs-3\\\"></div>\\n  <div class=\\\"col-xs-4\\\">\\n\\n  </div>\\n</div> -->\\n<br>\\n<div class=\\\"container\\\" id=\\\"table-responsive\\\">\\n  <div class=\\\"table-responsive\\\" >\\n      <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\" mat-elevation-z8 table-bordered table-striped\\\">\\n\\n          <!-- frmCntAlertID Column -->\\n          <ng-container matColumnDef=\\\"AlertID\\\">\\n          <th  mat-header-cell *matHeaderCellDef  >Alert Id</th>\\n          <td  mat-cell *matCellDef=\\\"let element\\\">&nbsp; {{element.frmCntAlertID}} </td>\\n          </ng-container>\\n\\n          <!-- frmCntAlertName Column -->\\n          <ng-container matColumnDef=\\\"AlertName\\\" >\\n            <th mat-header-cell  *matHeaderCellDef id=\\\"th_allign\\\" > Alert Name </th>\\n           <td  mat-cell *matCellDef=\\\"let element\\\">&nbsp; {{element.frmCntAlertName}} </td>\\n          </ng-container>\\n\\n         \\n          <!-- frmCntApplication Column -->\\n          <ng-container matColumnDef=\\\"ApplicationName\\\" >\\n            <th mat-header-cell  *matHeaderCellDef  id=\\\"th_allign\\\" > Application Name </th>\\n            <td  mat-cell *matCellDef=\\\"let element\\\"> &nbsp; {{element.frmCntApplication.AppName }} </td>\\n          </ng-container>\\n<!-- frmCntMeasures -->\\n          <ng-container matColumnDef=\\\"Measures\\\" >\\n            <th mat-header-cell  *matHeaderCellDef id=\\\"th_allign\\\"  >Measures  </th>\\n            <td  mat-cell *matCellDef=\\\"let element\\\">&nbsp; {{element.frmCntMeasures.pingMeasuresqLabel }} </td>\\n          </ng-container>\\n\\n           <!-- alertsetTime Column -->\\n           <ng-container matColumnDef=\\\"Setdate\\\" >\\n              <th mat-header-cell  *matHeaderCellDef id=\\\"th_allign\\\" >Set Date </th>\\n              <td class=\\\"text-center\\\" mat-cell *matCellDef=\\\"let element\\\">&nbsp;  {{element.alertsetTime | date:\\\"yyyy-MM-dd\\\"}} </td>\\n            </ng-container>\\n  \\n  \\n               <!-- alertsetTime Column -->\\n           <ng-container matColumnDef=\\\"SetTime\\\">\\n              <th mat-header-cell  *matHeaderCellDef id=\\\"th_allign\\\"  > Set Time </th>\\n               <td class=\\\"text-center\\\" mat-cell *matCellDef=\\\"let element\\\"> &nbsp;{{element.alertsetTime | date:\\\"shortTime\\\"}} </td>\\n            </ng-container>    \\n  \\n\\n\\n<!-- Trigger -->\\n\\n          <ng-container matColumnDef=\\\"trigger\\\">\\n            <th mat-header-cell *matHeaderCellDef id=\\\"th_allign\\\"  >Trigger  </th>\\n           <!-- <td mat-cell *matCellDef=\\\"let element\\\"> {{element.trigger}} </td> -->\\n           <td class=\\\"text-center\\\" mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">\\n                <mat-slide-toggle \\n                      class=\\\"example-margin\\\"\\n                      (change)=\\\"onTriggerChange($event,element._id)\\\"\\n                      [color]=\\\"color\\\"\\n                      [checked]=\\\"checked\\\"\\n                      [disabled]=\\\"disabled\\\"\\n                      [(ngModel)]=\\\"element.trigger\\\"> \\n                </mat-slide-toggle>\\n            </td>\\n          </ng-container>\\n\\n          <!-- Colum Edit/ Delete -->\\n          <ng-container matColumnDef=\\\"edit\\\">\\n              <th mat-header-cell *matHeaderCellDef id=\\\"th_allign\\\" >Edit / Delete  </th>\\n             <td mat-cell *matCellDef=\\\"let element\\\">\\n               <div class=\\\"row col-md-offset-3\\\"  >\\n                  &nbsp; &nbsp;\\n                 <div class=\\\"col-md-2\\\">\\n                     <a style=\\\"cursor: pointer;\\\" [routerLink]=\\\"['/pingAlert/editAlert/',element._id]\\\" ><i matTooltip=\\\"Edit\\\" class=\\\"glyphicon glyphicon-pencil\\\" ></i></a>\\n                 </div>\\n                 &nbsp;\\n                 <div class=\\\"col-md-2\\\">\\n                      <a  matTooltip=\\\"Delete\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteAlert(element._id)\\\"> <i class=\\\"glyphicon glyphicon-trash\\\"></i></a>\\n                     <!-- <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteAlert(element._id)\\\"><mat-icon>delete</mat-icon></a> -->\\n                  </div>\\n               </div>\\n             </td>\\n           </ng-container>\\n\\n          <!-- <ng-container matColumnDef=\\\"Edit/Delete\\\">\\n              <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;<strong>Edit / Delete</strong>  </th>\\n\\n             <td>\\n               <div class=\\\"row\\\">\\n                 <div class=\\\"col-md-2\\\">\\n                  <button class=\\\"btn btn-primary\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></button>\\n                 </div>\\n                 <div class=\\\"col-md-2\\\">\\n                    <button class=\\\"btn btn-primary\\\"> <i class=\\\"glyphicon glyphicon-trash\\\"></i></button>\\n                  </div>\\n               </div>\\n             </td>\\n\\n          </ng-container> -->\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        </table>\\n  </div>\\n\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\">\\n        <a id=\\\"button\\\" mat-raised-button [routerLink]=\\\"['/pingAlert/createAlert']\\\">Create Alert</a>\\n    </div>\\n    <div class=\\\"col-md-9\\\">\\n        <mat-paginator [pageSizeOptions]=\\\"[10,20,50,100,150,200,250]\\\" showFirstLastButtons></mat-paginator>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit , ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport {Location} from '@angular/common';\nimport { NotificationsService } from 'angular2-notifications';\nimport { AlertsService } from 'angular-alert-module';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AppService } from 'src/app/app.service';\nimport { PingAlertService } from 'src/app/PingAlert/ping-alert.service';\n@Component({\n  selector: 'app-alert-list',\n  templateUrl: './alert-list.component.html',\n  styleUrls: ['./alert-list.component.css']\n})\nexport class AlertListComponent implements OnInit {\n  color = 'primary';\n  checked = false;\n  disabled = false;\n  device = false;\n\nconstructor(private api: PingAlertService,private commanApi:AppService,private router: Router,private location:Location,private _service: NotificationsService,private _flashMessagesService:FlashMessagesService) { }\n\ndisplayedColumns = ['AlertID', 'AlertName','ApplicationName', 'Measures', 'Setdate', 'SetTime', 'trigger', 'edit'];\ndataSource = new MatTableDataSource();\n@ViewChild(MatPaginator) paginator: MatPaginator;\n// @ViewChild(MatSort) sort: MatSort;\n\napplyFilter(filterValue: string) {\nfilterValue = filterValue.trim(); // Remove whitespace\nfilterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\nthis.dataSource.filter = filterValue;\n}\n\nngOnInit() {\n  console.log(\"In Alert Inbox Init\")\n  // AuthService.loggedUserTableID =localStorage.getItem('loggedUserTableID');\n  // console.log(\"AuthService.loggedUserTableID>>>>\", AuthService.loggedUserTableID);\n      this.commanApi.getLoggeddUser().subscribe(res=>{\n        console.log(res.PingUserID);\n        this.api.getAlerts()\n        .subscribe(res => {\n          console.log(res);\n          this.dataSource = new MatTableDataSource(res);\n          this.dataSource.paginator = this.paginator;\n          // this.dataSource.sort =this.sort;\n        }, err => {\n          console.log(err);\n        });\n      },err => {\n        console.log(\"err\");\n        console.log(err);\n        this.router.navigate(['/login']);\n      })\n      \n  }\n  // delete Alert's\n  deleteAlert(id) {\n  console.log(\"In Delete Alert\");\n  console.log(id);\n  this.api.deleteAlert(id)\n  .subscribe(res => {\n  this.ngOnInit();\n      this.api.getAlerts()\n      .subscribe(res => {\n        this.ngOnInit();\n        this.dataSource = new MatTableDataSource(res);\n        // this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      }, err => {\n        console.log(err);\n      });\n  // this.router.navigateByUrl(\"/alert_Inbox\");\n  // this.router.navigate(['/alert_examples']);\n  }, (err) => {\n  console.log(err);\n  }\n  );\n  }\n  onTriggerChange(event,id){\n      var triggerStatus={\n      trigger : event.checked,\n      id : id\n    }\n\n    this.api.updatetriggerAlert(triggerStatus).subscribe(res=>{\n        console.log(res.ok);\n        if(res.ok == 1){\n        if(triggerStatus.trigger === true){\n        this._flashMessagesService.show(' successfully! Trigger ON',{cssClass:'alert-success',timeout:500});\n        }else{\n        this._flashMessagesService.show('successfully! Trigger OFF',{cssClass:'alert-danger',timeout:500});\n        }\n      }\n    })\n  }\n\n  StatusAlert(id) {\n  console.log(\"In Delete Alert\");\n  console.log(id);\n  this.api.deleteAlert(id)\n  .subscribe(res => {\n\n      this.api.getAlerts()\n      .subscribe(res => {\n        console.log(res);\n        this.dataSource = new MatTableDataSource(res);\n        // this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      }, err => {\n        console.log(err);\n      });\n\n  // this.router.navigateByUrl(\"/alert_Inbox\");\n  // this.router.navigate(['/alert_examples']);\n  }, (err) => {\n  console.log(err);\n  }\n  );\n  }\n\n\n}\n","module.exports = \"/* Structure */\\r\\n\\r\\ninput[type=\\\"file\\\"] {\\r\\n    display: none;\\r\\n  }\\r\\n\\r\\n.custom-file-upload {\\r\\n    border: 1px solid #ccc;\\r\\n    display: inline-block;\\r\\n    padding: 6px 12px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\ntable {\\r\\n      width: 100%;\\r\\n      transition: none !important;\\r\\n      box-shadow: none !important;\\r\\n      margin-top: -30px;\\r\\n    }\\r\\n\\r\\n.mat-form-field {\\r\\n      font-size: 14px;\\r\\n      width: 70%;\\r\\n    }\\r\\n\\r\\n#table-responsive{\\r\\n      margin-top: 5px;\\r\\n    }\\r\\n\\r\\n#row2{\\r\\n      margin-top: -2px;\\r\\n      padding-top: 8px;\\r\\n      padding-bottom: 10px;\\r\\n    }\\r\\n\\r\\n.table-responsive{\\r\\n      margin-top: -15px;\\r\\n      padding-top: 40px;\\r\\n    }\\r\\n\\r\\ntr.mat-header-row{\\r\\n      height: 37px;\\r\\n    }\\r\\n\\r\\n.table-bordered>thead>tr>th{\\r\\n      border: 1px solid rgb(231, 76, 60);\\r\\n    }\\r\\n\\r\\n/* Switch Button */\\r\\n\\r\\nth{\\r\\n      padding-top: -100px;\\r\\n    }\\r\\n\\r\\n#th_allign{\\r\\n      text-align: center;\\r\\n    }\\r\\n\\r\\ntd{\\r\\n      color: rgb(127, 127, 127)\\r\\n    }\\r\\n\\r\\n.mat-header-cell {\\r\\n      color: rgb(102,102,102);\\r\\n    }\\r\\n\\r\\nth{\\r\\n      font-size: 14px;\\r\\n      background-color: rgb(238, 238, 238);\\r\\n      /* background-color: rgb(249, 55, 66); */\\r\\n    \\r\\n    }\\r\\n\\r\\n#btn-danger{\\r\\n      background-color: rgb(249, 25, 66);\\r\\n      color: rgb(255, 255, 255)\\r\\n    }\\r\\n\\r\\n* {\\r\\n    font-family: 'Nunito', 'Glyphicons Halflings';\\r\\n  }\"","module.exports = \"<br><br><br><br>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"btn-group btn-breadcrumb \\\">\\n                <a routerLink=\\\"/admin/sAdminHome\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n                <a class=\\\"btn btn-default\\\">SuperAdmin</a>\\n                <a class=\\\"btn btn-default\\\">All Users</a>\\n            </div>\\n      </div>\\n      <div class=\\\"col-md-2 text-center\\\"><h4>All Users</h4></div>\\n      <div class=\\\"col-md-4 pull-right\\\">\\n        <div class=\\\"input-group\\\" style=\\\"float:right\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" id=\\\"txtSearch\\\"/> -->\\n          <input class=\\\"form-control\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" >\\n              <div class=\\\"input-group-btn\\\">\\n                  <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n                      <span class=\\\"glyphicon glyphicon-search\\\"></span>\\n                  </button>\\n              </div>\\n          </div>\\n       </div>\\n\\n\\n    </div>\\n</div>\\n\\n<!--\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-3\\\"></div>\\n  <div class=\\\"col-xs-4\\\">\\n\\n  </div>\\n</div> -->\\n<br>\\n\\n\\n    <div class=\\\"container\\\" id=\\\"table-responsive\\\">\\n          <div class=\\\"table-responsive\\\" >\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\" mat-elevation-z8 table-bordered table-striped\\\">\\n\\n                <!-- USerID Column -->\\n                <ng-container matColumnDef=\\\"PingUserID\\\">\\n                <th  mat-header-cell *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\"> User ID</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.PingUserID}} </td>\\n                </ng-container>\\n\\n                <!-- USerNAme Column -->\\n                <ng-container matColumnDef=\\\"PingUserName\\\">\\n                <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\"> User Name </th>\\n                <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.PingUserName}} </td>\\n                </ng-container>\\n\\n              \\n                  \\n                    <!-- Access Column -->\\n                <ng-container matColumnDef=\\\"PingUserAccess\\\">\\n                  <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">User Access </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.PingUserAccess}} </td>\\n                  </ng-container> \\n\\n                    <!-- Role Column -->\\n                <ng-container matColumnDef=\\\"PingRole\\\">\\n                  <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">Role </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\" >  &nbsp; {{element.PingRole}} </td>\\n                  </ng-container> \\n\\n                    <!-- EmailId Column -->\\n                <ng-container matColumnDef=\\\"EmailID\\\">\\n                  <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">Email Id </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.EmailID}} </td>\\n                  </ng-container> \\n\\n                    <!-- Insert bY Column -->\\n                <ng-container matColumnDef=\\\"InsertBy\\\">\\n                    <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">Created By </th>\\n                    <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.InsertBy}} </td>\\n                    </ng-container> \\n\\n\\n                <!-- alertsetTime Column -->\\n                <!-- <ng-container matColumnDef=\\\"Setdate\\\">\\n                <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp; Set date </th>\\n                <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp;{{element.alertsetTime | date}} </td>\\n                </ng-container> -->\\n\\n\\n                   <!-- alertsetTime Column -->\\n               <!-- <ng-container matColumnDef=\\\"SetTime\\\">\\n                  <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp; Set Time </th>\\n                  <td mat-cell name=\\\"SetTime\\\" *matCellDef=\\\"let element\\\">  &nbsp;{{element.alertsetTime | date:\\\"HH:MM\\\"}} </td>\\n                </ng-container> -->\\n\\n      <!-- Trigger -->\\n\\n                <!-- <ng-container matColumnDef=\\\"trigger\\\">\\n                  <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Trigger  </th> -->\\n                 <!-- <td mat-cell *matCellDef=\\\"let element\\\"> {{element.trigger}} </td> -->\\n                 <!-- <td mat-cell *matCellDef=\\\"let element\\\">\\n                      <mat-slide-toggle\\n                            class=\\\"example-margin\\\"\\n                            name=\\\"trigger\\\"\\n                            [color]=\\\"color\\\"\\n                            [checked]=\\\"checked\\\"\\n                            [disabled]=\\\"disabled\\\"\\n                            [(ngModel)]=\\\"element.trigger\\\"> {{element.trigger}}\\n                      </mat-slide-toggle>\\n                   </td>\\n                </ng-container> -->\\n\\n                <!-- Colum Edit/ Delete -->\\n                <ng-container matColumnDef=\\\"edit\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">Edit / Delete  </th>\\n\\n                   <td mat-cell *matCellDef=\\\"let element\\\">\\n                     <div class=\\\"row col-lg-offset-3\\\">\\n                       <div class=\\\"col-md-2\\\">\\n                          <!-- <a routerLink=\\\"/edit_alert\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                          <!-- <a type='submit' [routerLink]=\\\"['/edit_new',element.id]\\\" (click)=\\\"onEdit(element._id)\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                          <a class=\\\"text-center\\\" type='submit' [routerLink]=\\\"['/admin/editUserDetails/',element._id]\\\"  style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a>\\n\\n                        </div>\\n                       &nbsp;\\n                       <div class=\\\"col-md-2\\\">\\n                            <a class=\\\"text-center\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteUser(element._id)\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></a>\\n                           <!-- <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteAlert(element._id)\\\"><mat-icon>delete</mat-icon></a> -->\\n                        </div>\\n                     </div>\\n                   </td>\\n                 </ng-container>\\n                <!-- <ng-container matColumnDef=\\\"Edit/Delete\\\">\\n                    <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;<strong>Edit / Delete</strong>  </th>\\n                   <td>\\n                     <div class=\\\"row\\\">\\n                       <div class=\\\"col-md-2\\\">\\n                        <button class=\\\"btn btn-primary\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></button>\\n                       </div>\\n                       <div class=\\\"col-md-2\\\">\\n                          <button class=\\\"btn btn-primary\\\"> <i class=\\\"glyphicon glyphicon-trash\\\"></i></button>\\n                        </div>\\n                     </div>\\n                   </td>\\n\\n                </ng-container> -->\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n              </table>\\n          </div>\\n\\n        <br>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1\\\" >\\n              <button \\n              mat-raised-button \\n              id=\\\"btn-danger\\\" \\n              [routerLink]=\\\"['/admin/createUser']\\\">Create User</button>\\n          </div>        \\n          \\n        </div>\\n        <!-- <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1\\\"></div>\\n            <div class=\\\"col-md-2\\\" style=\\\"margin-left: 20px;\\\">\\n                <a (click)=\\\"downloadFile()\\\" style=\\\"cursor:pointer; \\\">Download Template</a>    \\n            </div>\\n        </div> -->\\n        <div class=\\\"col-md-12\\\">\\n            <mat-paginator  [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20, 30, 50, 100]\\\"\\n             showFirstLastButtons></mat-paginator>\\n        </div>\\n      </div>\\n  \\n\\n\\n\\n\"","import { Component, OnInit , ViewChild, Injectable} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\nimport { AdminService } from '../../admin.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Location} from '@angular/common';\nimport {  FormGroup, FormControl, NgForm } from '@angular/forms';\n// import { identifier } from '../../../../node_modules/@types/babel-types';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AppService } from '../../../app.service';\n// import { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-show-all-user-list',\n  templateUrl: './show-all-user-list.component.html',\n  styleUrls: ['./show-all-user-list.component.css']\n})\nexport class ShowAllUserListComponent implements OnInit {\n\n  editPingUser: FormGroup;\n  PingUserID: string;\n    PingUserName: string;\n    PingUserDirectory : string;\n    PingUserAccess : string; \n    PingMemberID : string; \n    PingGroupID : string; \n    PingRole : string; \n    InsertBy : string; \n    EmailID:string;\n    password:string;\n    constructor(private api: AdminService,private commanAPI:AppService, private router: Router, private location: Location, private route: ActivatedRoute,public snackbar: MatSnackBar) { }\n    displayedColumns = ['PingUserID','PingUserName','PingUserAccess','PingRole','EmailID','InsertBy','edit'];\n    dataSource = new MatTableDataSource();\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n  \n    applyFilter(filterValue: string) {\n      filterValue = filterValue.trim(); // Remove whitespace\n      filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n      this.dataSource.filter = filterValue;\n    }\n\n    ngOnInit() {\n      this.commanAPI.getLoggeddUser().subscribe(res=>{\n        this.api.getPingUserStatusWise(true)\n        .subscribe(res => {\n          // if(res.code == 200){\n            console.log(\"User Details :\",res.body);\n            this.dataSource = new MatTableDataSource(res.body);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          // }\n        \n      \n        }, err => {\n          console.log(err);\n        });\n      },res=>{\n        this.router.navigate(['/login'])\n      })\n      \n      \n      this.editPingUser = new FormGroup ({\n        PingUserID:new FormControl(),\n        PingUserName: new FormControl(),\n        PingUserDirectory :new FormControl(),\n        PingUserAccess : new FormControl(),\n        PingMemberID :new FormControl(),\n        PingGroupID : new FormControl(),\n        PingRole : new FormControl(),\n        InsertBy : new FormControl(''),\n        EmailID: new FormControl(),\n      password: new FormControl(),\n      });\n    }\n\n       // Edit User\n  onEdit(id) {\n    console.log('In Edit User');\n    console.log(id);\n    this.api.getPingUserIDDetails(id)\n    .subscribe( res => {\n      console.log(res);\n      this.PingUserID = id;\n    });\n  }\n  // delete User\n  deleteUser(id) {\n    console.log('In Delete User');\n    console.log(id);\n    this.ngOnInit();\n    this.api.deletePingUserNew(id)\n    .subscribe(res => {\n      console.log('ping user new Data');\n      this.ngOnInit();\n      this.api.getPingUsersNew()\n      .subscribe(res => {\n        this.snackbar.open('Succesfully deleted user', 'Close', {\n          duration: 3000,\n        });\n        console.log(res);\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }, err => {\n        console.log(err);\n      });\n              // this.api.getPingUsersNew()\n              // .subscribe( res => {\n              //   console.log('ping user new Data');\n              //   console.log(res);\n              //   this.snackbar.open('Succesfully deleted user', 'Close', {\n              //     duration: 3000,\n              //   });\n              //   this.dataSource = new MatTableDataSource(res);\n              //   this.dataSource.sort = this.sort;\n              //   this.dataSource.paginator = this.paginator;\n              // }, err => {\n              //   console.log(err);\n              // });\n  \n      // this.router.navigateByUrl(\"/alert_Inbox\");\n      // this.router.navigate(['/alert_examples']);\n    }, (err) => {\n    console.log(err);\n    }\n    );\n  }\n\n}\n","module.exports = \"/* Structure */\\r\\n\\r\\ninput[type=\\\"file\\\"] {\\r\\n    display: none;\\r\\n  }\\r\\n\\r\\n.custom-file-upload {\\r\\n    border: 1px solid #ccc;\\r\\n    display: inline-block;\\r\\n    padding: 6px 12px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\ntable {\\r\\n      width: 100%;\\r\\n      transition: none !important;\\r\\n      box-shadow: none !important;\\r\\n      margin-top: -30px;\\r\\n    }\\r\\n\\r\\n.mat-form-field {\\r\\n      font-size: 14px;\\r\\n      width: 70%;\\r\\n    }\\r\\n\\r\\n#table-responsive{\\r\\n      margin-top: 5px;\\r\\n    }\\r\\n\\r\\n#row2{\\r\\n      margin-top: -2px;\\r\\n      padding-top: 8px;\\r\\n      padding-bottom: 10px;\\r\\n    }\\r\\n\\r\\n.table-responsive{\\r\\n      margin-top: -15px;\\r\\n      padding-top: 40px;\\r\\n    }\\r\\n\\r\\ntr.mat-header-row{\\r\\n      height: 37px;\\r\\n    }\\r\\n\\r\\n.table-bordered>thead>tr>th{\\r\\n      border: 1px solid rgb(231, 76, 60);\\r\\n    }\\r\\n\\r\\n/* Switch Button */\\r\\n\\r\\nth{\\r\\n      padding-top: -100px;\\r\\n    }\\r\\n\\r\\n#th_allign{\\r\\n      text-align: center;\\r\\n    }\\r\\n\\r\\ntd{\\r\\n      color: rgb(127, 127, 127)\\r\\n    }\\r\\n\\r\\n.mat-header-cell {\\r\\n      color: rgb(102,102,102);\\r\\n    }\\r\\n\\r\\nth{\\r\\n      font-size: 14px;\\r\\n      background-color: rgb(238, 238, 238);\\r\\n      /* background-color: rgb(249, 55, 66); */\\r\\n    \\r\\n    }\\r\\n\\r\\n#btn-danger{\\r\\n      background-color: rgb(249, 25, 66);\\r\\n      color: rgb(255, 255, 255)\\r\\n    }\\r\\n\\r\\n* {\\r\\n    font-family: 'Nunito', 'Glyphicons Halflings';\\r\\n  }\"","module.exports = \"<br><br><br><br>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"btn-group btn-breadcrumb \\\">\\n                <a routerLink=\\\"/admin/sAdminHome\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n                <a class=\\\"btn btn-default\\\">SuperAdmin</a>\\n                <a class=\\\"btn btn-default\\\">All Users</a>\\n            </div>\\n      </div>\\n      <div class=\\\"col-md-2 text-center\\\"><h4> InActive Users</h4></div>\\n      <div class=\\\"col-md-4 pull-right\\\">\\n        <div class=\\\"input-group\\\" style=\\\"float:right\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" id=\\\"txtSearch\\\"/> -->\\n          <input class=\\\"form-control\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" >\\n              <div class=\\\"input-group-btn\\\">\\n                  <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n                      <span class=\\\"glyphicon glyphicon-search\\\"></span>\\n                  </button>\\n              </div>\\n          </div>\\n       </div>\\n\\n\\n    </div>\\n</div>\\n\\n<!--\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-3\\\"></div>\\n  <div class=\\\"col-xs-4\\\">\\n\\n  </div>\\n</div> -->\\n<br>\\n\\n\\n    <div class=\\\"container\\\" id=\\\"table-responsive\\\">\\n          <div class=\\\"table-responsive\\\" >\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\" mat-elevation-z8 table-bordered table-striped\\\">\\n\\n                <!-- USerID Column -->\\n                <ng-container matColumnDef=\\\"PingUserID\\\">\\n                <th  mat-header-cell *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\"> User ID</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.PingUserID}} </td>\\n                </ng-container>\\n\\n                <!-- USerNAme Column -->\\n                <ng-container matColumnDef=\\\"PingUserName\\\">\\n                <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\"> User Name </th>\\n                <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.PingUserName}} </td>\\n                </ng-container>\\n\\n              \\n                  \\n                    <!-- Access Column -->\\n                <ng-container matColumnDef=\\\"PingUserAccess\\\">\\n                  <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">User Access </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.PingUserAccess}} </td>\\n                  </ng-container> \\n\\n                    <!-- Role Column -->\\n                <ng-container matColumnDef=\\\"PingRole\\\">\\n                  <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">Role </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\" >  &nbsp; {{element.PingRole}} </td>\\n                  </ng-container> \\n\\n                    <!-- EmailId Column -->\\n                <ng-container matColumnDef=\\\"EmailID\\\">\\n                  <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">Email Id </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.EmailID}} </td>\\n                  </ng-container> \\n\\n                    <!-- Insert bY Column -->\\n                <ng-container matColumnDef=\\\"InsertBy\\\">\\n                    <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">Created By </th>\\n                    <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.InsertBy}} </td>\\n                    </ng-container> \\n\\n\\n                <!-- alertsetTime Column -->\\n                <!-- <ng-container matColumnDef=\\\"Setdate\\\">\\n                <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp; Set date </th>\\n                <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp;{{element.alertsetTime | date}} </td>\\n                </ng-container> -->\\n\\n\\n                   <!-- alertsetTime Column -->\\n               <!-- <ng-container matColumnDef=\\\"SetTime\\\">\\n                  <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp; Set Time </th>\\n                  <td mat-cell name=\\\"SetTime\\\" *matCellDef=\\\"let element\\\">  &nbsp;{{element.alertsetTime | date:\\\"HH:MM\\\"}} </td>\\n                </ng-container> -->\\n\\n      <!-- Trigger -->\\n\\n                <!-- <ng-container matColumnDef=\\\"trigger\\\">\\n                  <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Trigger  </th> -->\\n                 <!-- <td mat-cell *matCellDef=\\\"let element\\\"> {{element.trigger}} </td> -->\\n                 <!-- <td mat-cell *matCellDef=\\\"let element\\\">\\n                      <mat-slide-toggle\\n                            class=\\\"example-margin\\\"\\n                            name=\\\"trigger\\\"\\n                            [color]=\\\"color\\\"\\n                            [checked]=\\\"checked\\\"\\n                            [disabled]=\\\"disabled\\\"\\n                            [(ngModel)]=\\\"element.trigger\\\"> {{element.trigger}}\\n                      </mat-slide-toggle>\\n                   </td>\\n                </ng-container> -->\\n\\n                <!-- Colum Edit/ Delete -->\\n                <ng-container matColumnDef=\\\"edit\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">Edit / Delete  </th>\\n\\n                   <td mat-cell *matCellDef=\\\"let element\\\">\\n                     <div class=\\\"row col-lg-offset-3\\\">\\n                       <div class=\\\"col-md-2\\\">\\n                          <!-- <a routerLink=\\\"/edit_alert\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                          <!-- <a type='submit' [routerLink]=\\\"['/edit_new',element.id]\\\" (click)=\\\"onEdit(element._id)\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                          <a class=\\\"text-center\\\" type='submit' [routerLink]=\\\"['/admin/editUserDetails/',element._id]\\\"  style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a>\\n\\n                        </div>\\n                       &nbsp;\\n                       <div class=\\\"col-md-2\\\">\\n                            <a class=\\\"text-center\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteUser(element._id)\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></a>\\n                           <!-- <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteAlert(element._id)\\\"><mat-icon>delete</mat-icon></a> -->\\n                        </div>\\n                     </div>\\n                   </td>\\n                 </ng-container>\\n                <!-- <ng-container matColumnDef=\\\"Edit/Delete\\\">\\n                    <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;<strong>Edit / Delete</strong>  </th>\\n                   <td>\\n                     <div class=\\\"row\\\">\\n                       <div class=\\\"col-md-2\\\">\\n                        <button class=\\\"btn btn-primary\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></button>\\n                       </div>\\n                       <div class=\\\"col-md-2\\\">\\n                          <button class=\\\"btn btn-primary\\\"> <i class=\\\"glyphicon glyphicon-trash\\\"></i></button>\\n                        </div>\\n                     </div>\\n                   </td>\\n\\n                </ng-container> -->\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n              </table>\\n          </div>\\n\\n        <br>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1\\\" >\\n              <button \\n              mat-raised-button \\n              id=\\\"btn-danger\\\" \\n              [routerLink]=\\\"['/admin/createUser']\\\">Create User</button>\\n          </div>        \\n          \\n        </div>\\n        <!-- <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1\\\"></div>\\n            <div class=\\\"col-md-2\\\" style=\\\"margin-left: 20px;\\\">\\n                <a (click)=\\\"downloadFile()\\\" style=\\\"cursor:pointer; \\\">Download Template</a>    \\n            </div>\\n        </div> -->\\n        <div class=\\\"col-md-12\\\">\\n            <mat-paginator  [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20, 30, 50, 100]\\\"\\n             showFirstLastButtons></mat-paginator>\\n        </div>\\n      </div>\\n  \\n\\n\\n\\n\"","import { Component, OnInit , ViewChild, Injectable} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\nimport { AdminService } from '../../admin.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Location} from '@angular/common';\nimport {  FormGroup, FormControl, NgForm } from '@angular/forms';\n// import { identifier } from '../../../../node_modules/@types/babel-types';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AppService } from '../../../app.service';\n// import { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-show-in-active-users',\n  templateUrl: './show-in-active-users.component.html',\n  styleUrls: ['./show-in-active-users.component.css']\n})\nexport class ShowInActiveUsersComponent implements OnInit {\n\n  editPingUser: FormGroup;\n  PingUserID: string;\n    PingUserName: string;\n    PingUserDirectory : string;\n    PingUserAccess : string; \n    PingMemberID : string; \n    PingGroupID : string; \n    PingRole : string; \n    InsertBy : string; \n    EmailID:string;\n    password:string;\n    constructor(private api: AdminService,private commanAPI:AppService, private router: Router, private location: Location, private route: ActivatedRoute,public snackbar: MatSnackBar) { }\n    displayedColumns = ['PingUserID','PingUserName','PingUserAccess','PingRole','EmailID','InsertBy','edit'];\n    dataSource = new MatTableDataSource();\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n  \n    applyFilter(filterValue: string) {\n      filterValue = filterValue.trim(); // Remove whitespace\n      filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n      this.dataSource.filter = filterValue;\n    }\n\n    ngOnInit() {\n      this.commanAPI.getLoggeddUser().subscribe(res=>{\n        this.api.getPingUserStatusWise(false)\n        .subscribe(res => {\n          // if(res.code == 200){\n            console.log(\"User Details :\",res.body);\n            this.dataSource = new MatTableDataSource(res.body);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          // }\n        \n      \n        }, err => {\n          console.log(err);\n        });\n      },res=>{\n        this.router.navigate(['/login'])\n      })\n      \n      \n      this.editPingUser = new FormGroup ({\n        PingUserID:new FormControl(),\n        PingUserName: new FormControl(),\n        PingUserDirectory :new FormControl(),\n        PingUserAccess : new FormControl(),\n        PingMemberID :new FormControl(),\n        PingGroupID : new FormControl(),\n        PingRole : new FormControl(),\n        InsertBy : new FormControl(''),\n        EmailID: new FormControl(),\n      password: new FormControl(),\n      });\n    }\n\n       // Edit User\n  onEdit(id) {\n    console.log('In Edit User');\n    console.log(id);\n    this.api.getPingUserIDDetails(id)\n    .subscribe( res => {\n      console.log(res);\n      this.PingUserID = id;\n    });\n  }\n  // delete User\n  deleteUser(id) {\n    console.log('In Delete User');\n    console.log(id);\n    this.ngOnInit();\n    this.api.deletePingUserNew(id)\n    .subscribe(res => {\n      console.log('ping user new Data');\n      this.ngOnInit();\n      this.api.getPingUsersNew()\n      .subscribe(res => {\n        this.snackbar.open('Succesfully deleted user', 'Close', {\n          duration: 3000,\n        });\n        console.log(res);\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }, err => {\n        console.log(err);\n      });\n              // this.api.getPingUsersNew()\n              // .subscribe( res => {\n              //   console.log('ping user new Data');\n              //   console.log(res);\n              //   this.snackbar.open('Succesfully deleted user', 'Close', {\n              //     duration: 3000,\n              //   });\n              //   this.dataSource = new MatTableDataSource(res);\n              //   this.dataSource.sort = this.sort;\n              //   this.dataSource.paginator = this.paginator;\n              // }, err => {\n              //   console.log(err);\n              // });\n  \n      // this.router.navigateByUrl(\"/alert_Inbox\");\n      // this.router.navigate(['/alert_examples']);\n    }, (err) => {\n    console.log(err);\n    }\n    );\n  }\n}\n","module.exports = \".gi-2x{font-size: 2em;}\\r\\n.gi-3x{font-size: 3em;}\\r\\n.gi-4x{font-size: 4em;}\\r\\n.gi-5x{font-size: 5em;}\"","module.exports = \"\\n<br><br><br><br><br>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\" id=\\\"height\\\">\\n          <flash-messages></flash-messages>\\n      </div>\\n    </div>\\n</div>\\n<div>\\n        <div class=\\\"row col-lg-offset-2\\\">\\n                <div class=\\\"col-md-3 col-sm-3 col-xs-6 text-center\\\">\\n                      <!-- <a routerLink=\\\"/admin/allUserList\\\" class=\\\"btn btn-default\\\"> -->\\n                              <div (click)='showActiveUsers()' data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"well top-block\\\" data-original-title=\\\"Active members.\\\">\\n                                      <i class=\\\"glyphicon glyphicon-list-alt gi-2x\\\"></i>\\n                                      <div><h4>Total Users</h4></div>\\n                                      <div class=\\\"badge badge-primary\\\">{{ActiveUserCount}}</div>\\n                              </div>\\n                      <!-- </a> -->\\n                </div>\\n              \\n                <div class=\\\"col-md-3 col-sm-3 col-xs-6 text-center\\\">\\n                    <div (click)='showDactiveUsers()' data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"well top-block\\\" data-original-title=\\\"Active Server.\\\">\\n                        <i class=\\\"glyphicon glyphicon-pushpin gi-2x\\\"></i>\\n              \\n                        <div><h4>Deactive User</h4></div>\\n                        <div class=\\\"badge badge-primary\\\">{{DactiveUser}}</div>\\n                    </div>\\n                </div>\\n              \\n                <div class=\\\"col-md-3 col-sm-3 col-xs-6 text-center\\\">    \\n                    <div (click)='showAlertList()' data-toggle=\\\"tooltip\\\" title=\\\"\\\" class=\\\"well top-block\\\" data-original-title=\\\"InActive User\\\">\\n                        <i class=\\\"glyphicon glyphicon-edit gi-2x\\\"></i>\\n                        <div><h4>Total Alerts</h4></div>\\n                        <div></div>\\n                        <br>\\n                    </div>\\n\\n                </div>\\n                \\n              </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { existentialTypeParam, thisExpression } from 'babel-types';\nimport { promise } from 'protractor';\nimport { resolve, reject } from 'q';\nimport PasswordField from 'material-ui-password-field'\nimport { AdminService } from 'src/app/Admin/admin.service';\nimport { SuperAdminService } from 'src/app/SuperAdmin/super-admin.service';\nimport { LoginService } from 'src/app/LoginModule/login.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport {AppComponent} from '../../../app.component'\n\n@Component({\n  selector: 'app-super-admin-home',\n  templateUrl: './super-admin-home.component.html',\n  styleUrls: ['./super-admin-home.component.css']\n})\nexport class SuperAdminHomeComponent implements OnInit {\n  matcher;\n  loginForm: FormGroup;\n  PingUserName: String='';\n  PingRole : String='';\n  EmailID:String='';\n  password:String='';\nloginFlag:boolean=false;\n  show =  false;\n    ActiveUserCount:string='0';\n    DactiveUser:string='0';\n    roleStr:string='Administrat';\n    pingUserID:string;\n    newRole:string;\n    loop1:Boolean=true;\n\n  private formSubmitAttempt: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private api: LoginService,\n    private formBuilder: FormBuilder,\n    public snackbar: MatSnackBar,\n    public superAdminService:SuperAdminService,\n    private _flashMessagesService:FlashMessagesService ,\n    public PingAdminFlag:AppComponent,  \n  ) {}\n\n  ngOnInit() {\n    this._flashMessagesService.show(' Your Trial Period For Ping Has Expired Within '+this.PingAdminFlag.LicenseCount,{cssClass:'alert-danger',timeout:5000});     \n    this.api.getPingUsersCount().subscribe(res=>{\n      console.log(res);\n      this.ActiveUserCount=res.body;\n\n    })\n    this.api.getDactivePingUsersCount().subscribe(res=>{\n      console.log(res);\n      this.DactiveUser=res.body;              \n    })\n\n  }\n  showActiveUsers()\n  {\n    this.router.navigate(['/admin/allUserList'])\n  }\n  showDactiveUsers()\n  {\n    this.router.navigate(['/admin/inActiveUsers'])\n  }\n  showAlertList()\n  {\n    this.router.navigate(['/admin/sAlertList'])\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserRegisterComponent } from './user-register/user-register.component';\r\nimport { UserDetailsComponent } from './user-register/user-details/user-details.component';\r\nimport { EditUserDetailsComponent } from './user-register/edit-user-details/edit-user-details.component';\r\nimport { CreateDeliveryChannelComponent } from './DeliveryChannel/create-delivery-channel/create-delivery-channel.component';\r\nimport { DeliveryChannelDetailsComponent } from './DeliveryChannel/delivery-channel-details/delivery-channel-details.component';\r\nimport { EditDeliveryChannelComponent } from './DeliveryChannel/edit-delivery-channel/edit-delivery-channel.component';\r\nimport { CreateDatasourceComponent } from './Datasource/create-datasource/create-datasource.component';\r\nimport { EditDatasourceComponent } from './Datasource/edit-datasource/edit-datasource.component';\r\nimport { DatasourceDetailsComponent } from './Datasource/datasource-details/datasource-details.component';\r\nimport { CreateChannelTypeComponent } from './MasterForms/ChannelMaster/ChannelType/create-channel-type/create-channel-type.component';\r\nimport { ChannelNameDetailsComponent } from './MasterForms/ChannelName/channel-name-details/channel-name-details.component';\r\nimport { CreateChannelNameComponent } from './MasterForms/ChannelName/create-channel-name/create-channel-name.component';\r\nimport { ChannelTypeDetailsComponent } from './MasterForms/ChannelMaster/ChannelType/channel-type-details/channel-type-details.component';\r\nimport { SuperAdminHomeComponent } from './SuperAdmin/super-admin-home/super-admin-home.component';\r\nimport { ShowAllUserListComponent } from './SuperAdmin/show-all-user-list/show-all-user-list.component';\r\nimport { ShowInActiveUsersComponent } from './SuperAdmin/show-in-active-users/show-in-active-users.component';\r\nimport { AlertListComponent } from './SuperAdmin/alert-list/alert-list.component';\r\nimport { LicenseDetailsComponent } from './LicenseDetails/license-details/license-details.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n    // {\r\n    //     path: 'supDashboard ',\r\n    //     component: SuperAdminDashboardComponent,  \r\n    //     pathMatch:'full'     \r\n    // },\r\n    //User start\r\n    {\r\n        path: 'createUser',\r\n        component: UserRegisterComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    {\r\n        path: 'userDetails',\r\n        component: UserDetailsComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    {\r\n        path: 'editUserDetails/:id',\r\n        component: EditUserDetailsComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    //**************************************** */\r\n    //Delivery Channel start\r\n    {\r\n        path: 'createDeliveryChannel',\r\n        component: CreateDeliveryChannelComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    {\r\n        path: 'deliveryChannelDetails',\r\n        component: DeliveryChannelDetailsComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    {\r\n        path: 'editDeliveryChannel/:id',\r\n        component: EditDeliveryChannelComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    //************************************************ */\r\n    //Datasource part\r\n    {\r\n        path: 'createDataSource',\r\n        component: CreateDatasourceComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    {\r\n        path: 'editDataSource/:id',\r\n        component: EditDatasourceComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    {\r\n        path: 'dataSourceDetails',\r\n        component: DatasourceDetailsComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    //Admin Master forms Routing\r\n    {\r\n        path: 'createChannelType',\r\n        component: CreateChannelTypeComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    {\r\n        path: 'channelTypeDetails',\r\n        component: ChannelTypeDetailsComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n\r\n    {\r\n        path: 'createChannelName',\r\n        component: CreateChannelNameComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    {\r\n        path: 'channelNameDetails',\r\n        component: ChannelNameDetailsComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    //Super Admin Dashboard\r\n    {\r\n        path: 'sAdminHome',\r\n        component: SuperAdminHomeComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    {\r\n        path: 'allUserList',\r\n        component: ShowAllUserListComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    {\r\n        path: 'inActiveUsers',\r\n        component: ShowInActiveUsersComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    {\r\n        path: 'sAlertList',\r\n        component: AlertListComponent,  \r\n        pathMatch:'full'     \r\n    },\r\n    //License Details\r\n    \r\n    {\r\n        path: 'LicenseDetails',\r\n        component: LicenseDetailsComponent,  \r\n        pathMatch:'full'     \r\n    }\r\n\r\n\r\n    \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {Ng2TelInputModule} from 'ng2-tel-input';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SimpleNotificationsModule } from 'angular2-notifications';\r\n// import { AlertsModule } from 'angular-alert-module';\r\nimport { AmazingTimePickerModule } from 'amazing-time-picker';\r\nimport { AngularWebStorageModule } from 'angular-web-storage';\r\nimport { ChartsModule } from 'ng2-charts';\r\n// material import\r\nimport {\r\n  MatInputModule,\r\n  MatPaginatorModule,\r\n  MatProgressSpinnerModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatIconModule,\r\n  MatSelectModule,\r\n  MatButtonModule,\r\n  MatCardModule, MatTooltipModule,\r\n  MatListModule, MatToolbarModule,\r\n  MatFormFieldModule,\r\n  MatSidenavModule,\r\n  MatSnackBarModule,\r\n  MatSlideToggle,\r\n  MatSlideToggleModule, MatRadioModule,\r\n  MatTabsModule, MatCheckboxModule, MatProgressBarModule, MatExpansionModule, \r\n  MatStepperModule, MatDialogModule, MatAutocompleteModule} from '@angular/material';\r\n  //Components\r\n  import { UserRegisterComponent } from './user-register/user-register.component';\r\n  \r\nimport { UserDetailsComponent } from './user-register/user-details/user-details.component';\r\nimport { EditUserDetailsComponent } from './user-register/edit-user-details/edit-user-details.component';\r\nimport { CreateDeliveryChannelComponent } from './DeliveryChannel/create-delivery-channel/create-delivery-channel.component';\r\nimport { DeliveryChannelDetailsComponent } from './DeliveryChannel/delivery-channel-details/delivery-channel-details.component';\r\nimport { EditDeliveryChannelComponent } from './DeliveryChannel/edit-delivery-channel/edit-delivery-channel.component';\r\nimport { EditDatasourceComponent } from './Datasource/edit-datasource/edit-datasource.component';\r\nimport { DatasourceDetailsComponent } from './Datasource/datasource-details/datasource-details.component';\r\nimport { CreateDatasourceComponent } from './Datasource/create-datasource/create-datasource.component';\r\nimport { CreateChannelTypeComponent } from './MasterForms/ChannelMaster/ChannelType/create-channel-type/create-channel-type.component';\r\nimport { ChannelTypeDetailsComponent } from './MasterForms/ChannelMaster/ChannelType/channel-type-details/channel-type-details.component';\r\nimport { CreateChannelNameComponent } from './MasterForms/ChannelName/create-channel-name/create-channel-name.component';\r\nimport { ChannelNameDetailsComponent } from './MasterForms/ChannelName/channel-name-details/channel-name-details.component';\nimport { SuperAdminHomeComponent } from './SuperAdmin/super-admin-home/super-admin-home.component';\nimport { ShowAllUserListComponent } from './SuperAdmin/show-all-user-list/show-all-user-list.component';\nimport { ShowInActiveUsersComponent } from './SuperAdmin/show-in-active-users/show-in-active-users.component';\nimport { AlertListComponent } from './SuperAdmin/alert-list/alert-list.component';\nimport { LicenseDetailsComponent } from './LicenseDetails/license-details/license-details.component';\r\n// import { SuperAdminDashboardComponent } from '../SuperAdmin/super-admin-dashboard/super-admin-dashboard.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n      \r\n    UserRegisterComponent,\r\n    UserDetailsComponent,\r\n    EditUserDetailsComponent,\r\n    CreateDeliveryChannelComponent,\r\n    DeliveryChannelDetailsComponent,\r\n    EditDeliveryChannelComponent,\r\n    CreateDatasourceComponent,\r\n    EditDatasourceComponent,\r\n    DatasourceDetailsComponent,\r\n    CreateChannelTypeComponent,\r\n    ChannelTypeDetailsComponent,\r\n    CreateChannelNameComponent,\r\n    ChannelNameDetailsComponent,\r\n    SuperAdminHomeComponent,\r\n    ShowAllUserListComponent,\r\n    ShowInActiveUsersComponent,\r\n    AlertListComponent,\r\n    LicenseDetailsComponent,\r\n    \r\n  ],\r\n  entryComponents:[\r\n    UserRegisterComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    FormsModule ,\r\n    ReactiveFormsModule,   \r\n    Ng2TelInputModule, \r\n    HttpClientModule,    \r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatToolbarModule,\r\n    MatStepperModule,\r\n    MatFormFieldModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatListModule, MatTooltipModule,\r\n    AngularWebStorageModule , ChartsModule, MatSnackBarModule,\r\n    MatRadioModule, MatTabsModule, MatCheckboxModule,MatProgressBarModule, MatExpansionModule,\r\n     AmazingTimePickerModule,\r\n    NgxMatSelectSearchModule,\r\n    SimpleNotificationsModule.forRoot(),\r\n    // AlertsModule.forRoot(),\r\n     FlashMessagesModule.forRoot()\r\n  \r\n    ],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class AdminModule { }","module.exports = \"#edit{\\r\\n    background-color:rgb(231, 76, 60);\\r\\n    padding-top: 14px;\\r\\n}\\r\\n\\r\\n#cancel{\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\n#hide{\\r\\n    visibility: hidden;\\r\\n}\\r\\n\\r\\n.btn-primary{\\r\\n    margin-left: 40%;\\r\\n}\\r\\n\\r\\n#container1{\\r\\n    border: 1px solid rgb(236, 235, 235);\\r\\n    margin-left:13%\\r\\n}\\r\\n\\r\\n/* #margin{\\r\\n    margin-left: 10% ;\\r\\n} */\\r\\n\\r\\n#save{\\r\\n  background-color:rgb(249, 25, 66);\\r\\n  color: white;\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n.example-form {\\r\\n    min-width: 80px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n.example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n.example-full-width:nth-last-child() {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n.button-row {\\r\\n    margin: 10px 0;\\r\\n  }\\r\\n\\r\\n.text-white{\\r\\n    color: white;\\r\\n}\\r\\n \"","module.exports = \"\\n<br><br><br><br>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"btn-group btn-breadcrumb \\\">\\n              <a routerLink=\\\"/pingAlert/alertInbox\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n              <a class=\\\"btn btn-default\\\">Admin</a>\\n              <a routerLink=\\\"/UserRoleDetails\\\" class=\\\"btn btn-default\\\">User Management</a>\\n              <a class=\\\"btn btn-default active\\\">Create/Edit User</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n    <br>\\n    <form [formGroup]=\\\"pingUserRoleFrm\\\" (ngSubmit)=\\\"onFormSubmit(pingUserRoleFrm.value)\\\">\\n      <div class=\\\"col-md-1\\\"></div>\\n      <div class=\\\"col-md-9 \\\">\\n          <div class=\\\"panel panel-default\\\">\\n              <div class=\\\"panel-body\\\">\\n                 <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                      <!-- <div class=\\\"col-lg-1 pull-left\\\"><mat-icon>person_add</mat-icon></div>\\n                      <div class=\\\"col-lg-11\\\"><h5>Please enter the user details below: </h5></div> -->\\n                    </div>\\n                      \\n                      <div class=\\\"col-md-9\\\">           \\n                        \\n                          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n                              <mat-label>User ID </mat-label>\\n                              <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n                              <input matInput placeholder=\\\"Enter User ID\\\" formControlName=\\\"PingUserID\\\"\\n                                     [errorStateMatcher]=\\\"matcher\\\">\\n                                     <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->                         \\n                              <mat-error>\\n                                <span *ngIf=\\\"!pingUserRoleFrm.get('PingUserID').valid && pingUserRoleFrm.get('PingUserID').touched\\\">Please enter User ID</span>\\n                              </mat-error>\\n                            </mat-form-field>\\n                      </div>\\n                      <div class=\\\"col-md-9\\\">\\n                          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                              <mat-label>User Name </mat-label>\\n                              <!-- <span matPrefix><mat-icon matPrefix>edit</mat-icon> &nbsp;</span> -->\\n                              <input matInput placeholder=\\\"Enter User Name\\\" formControlName=\\\"PingUserName\\\"\\n                                     [errorStateMatcher]=\\\"matcher\\\">\\n                              <mat-error>\\n                                <span *ngIf=\\\"!pingUserRoleFrm.get('PingUserName').valid && pingUserRoleFrm.get('PingUserName').touched\\\">Please enter User Name</span>\\n                              </mat-error>\\n                            </mat-form-field>\\n                      </div>  \\n\\n                    <!-- Password -->\\n                     <div class=\\\"col-md-9\\\">           \\n                        \\n                      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n                          <mat-label>Password*</mat-label>\\n                          <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n                          <input type=\\\"password\\\" matInput placeholder=\\\"Enter Password\\\" formControlName=\\\"password\\\"\\n                                 [errorStateMatcher]=\\\"matcher\\\">\\n                                 <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n                                 \\n                          <mat-error>\\n                            <span *ngIf=\\\"!pingUserRoleFrm.get('password').valid && pingUserRoleFrm.get('password').touched\\\">Please enter User ID</span>\\n                          </mat-error>\\n                        </mat-form-field>\\n                      </div>\\n\\n\\n                      <div class=\\\"col-md-9\\\">\\n                          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                              <mat-label>User Directory *</mat-label>\\n                              <!-- <span matPrefix>+1 &nbsp;</span> -->\\n                              <input matInput placeholder=\\\"Enter User Directory\\\" formControlName=\\\"PingUserDirectory\\\"\\n                                     [errorStateMatcher]=\\\"matcher\\\">\\n                              <mat-error>\\n                                <span *ngIf=\\\"!pingUserRoleFrm.get('PingUserDirectory').valid && pingUserRoleFrm.get('PingUserDirectory').touched\\\">Please enter User Directory</span>\\n                              </mat-error>\\n                            </mat-form-field>\\n                      </div>\\n                     \\n                      \\n                      <!-- EmailId -->\\n                      <div class=\\\"col-md-9\\\">           \\n                        \\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n                            <mat-label>Email Id*</mat-label>\\n                            <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n                           <input  matInput placeholder=\\\"Enter Email Id\\\" formControlName=\\\"EmailID\\\"\\n                            [errorStateMatcher]=\\\"matcher\\\">  \\n                                   <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->       \\n                            <mat-error>\\n                              <span *ngIf=\\\"!pingUserRoleFrm.get('EmailID').valid && pingUserRoleFrm.get('EmailID').touched\\\">Please enter User ID</span>\\n                            </mat-error>\\n                          </mat-form-field>\\n                    </div>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-9\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                            <mat-label>User Access </mat-label>\\n                          <mat-select placeholder=\\\"User Access\\\" formControlName=\\\"PingUserAccess\\\" name=\\\"UsreAccess\\\" required>\\n                              <mat-option>--  Select Access --</mat-option>\\n                            <mat-option *ngFor=\\\"let access of AAccess\\\" [value]=\\\"access.name\\\">\\n                              {{access.name}}\\n                            </mat-option>\\n                          </mat-select>\\n                          <mat-error>\\n                              <span *ngIf=\\\"!pingUserRoleFrm.get('PingUserAccess').valid && pingUserRoleFrm.get('PingUserAccess').touched\\\">Please select user access</span>\\n                            </mat-error>\\n                          <!-- [selected]=\\\"car.color.id == qlikSenseApps.Appid\\\" -->\\n                        </mat-form-field>\\n                      </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-9\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                            <mat-label>User Role</mat-label>\\n                          <mat-select placeholder=\\\"User Role\\\" formControlName=\\\"PingRole\\\" name=\\\"userRole\\\" required >\\n                              <mat-option>-- Select Role --</mat-option>\\n                            <mat-option *ngFor=\\\"let role of RRole\\\" [value]=\\\"role.name\\\">\\n                              {{role.name}}\\n                            </mat-option>\\n                          </mat-select>\\n                          <mat-error>\\n                              <span *ngIf=\\\"!pingUserRoleFrm.get('PingRole').valid && pingUserRoleFrm.get('PingRole').touched\\\">Please select user role</span>\\n                            </mat-error>\\n                          <!-- [selected]=\\\"car.color.id == qlikSenseApps.Appid\\\" -->\\n                        </mat-form-field>\\n                        <!-- <form #form>\\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-2\\\">\\n                                    <input type=\\\"file\\\" name=\\\"file\\\" \\n                                    class=\\\"upload\\\" accept=\\\"*.csv\\\" (change)=\\\"changeListener($event.target.files)\\\">\\n                              </div>\\n                            </div>\\n                          </form> -->\\n                      </div> \\n                </div>\\n                  \\n              </div>\\n            </div>\\n\\n            <!-- <br><br> -->\\n          </div>\\n      </div>\\n        <button type=\\\"submit\\\" id=\\\"save\\\" class=\\\"col-md-1\\\" [disabled]=\\\"!pingUserRoleFrm.valid\\\" mat-raised-button >Update</button>\\n        <button mat-raised-button id=\\\"cancel\\\" class=\\\"col-md-1\\\" [routerLink]=\\\"['/admin/userDetails']\\\" >Cancel</button>              \\n    </form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router ,ActivatedRoute} from '@angular/router';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators, FormArray } from '@angular/forms';\nimport { ParamMap } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminService } from '../../admin.service';\nimport { AppService } from '../../../app.service';\n\n@Component({\n  selector: 'app-edit-user-details',\n  templateUrl: './edit-user-details.component.html',\n  styleUrls: ['./edit-user-details.component.css']\n})\nexport class EditUserDetailsComponent implements OnInit {\n  matcher;\n  pingUserRoleFrm: FormGroup;\n  pingUserID: any = '';\n  AAccess = [\n    { id: 1, name: 'Use Qlik Security' },\n    { id: 2, name: 'Manage in Ping' }\n  ];\n\n\n  RRole = [\n    { id: 2, name: 'Administrator' },\n    { id: 3, name: 'Connnection Manager' },\n    { id: 4, name: 'User' }\n  ];\n  constructor(private route: ActivatedRoute,private commanAPI :AppService, private api: AdminService, private router: Router,\n    private formBuilder: FormBuilder,public snackbar: MatSnackBar,    ) { }\n\n    ngOnInit() {\n      this.commanAPI.getLoggeddUser().subscribe(res=>{\n        // console.log('route succesfully');\n        // console.log(this.route.snapshot.params['id']);\n        // this.onEdit(this.route.snapshot.params['id']);\n    \n        console.log('test route succesfully');\n        console.log(this.route.snapshot.params['id']);\n        this.onEdit(this.route.snapshot.params['id']);\n  \n      },err=>{\n        console.log(\"Session Expired in Edit user\")\n        this.router.navigate(['/login'])\n      })\n     \n      this.pingUserRoleFrm=this.formBuilder.group({\n        // PingUserID:[null,Validators.required],\n        // PingUserName:[null,Validators.required],\n        // PingUserDirectory :[null,Validators.required],\n        // PingUserAccess : [null,Validators.required],\n        // PingMemberID :'',\n        // PingGroupID : '',\n        // PingRole : [null,Validators.required],\n        // InsertBy : '',\n        // EmailID:[null,Validators.required],\n        // password:[null,Validators.required],\n\n        PingUserID:'',\n        PingUserName:'',\n        PingUserDirectory :'',\n        PingUserAccess : '',\n        PingMemberID :'',\n        PingGroupID : '',\n        PingRole : '',\n        InsertBy : '',\n        EmailID:'',\n        password:'',\n\n      })\n    }\n    onEdit(id) {\n      console.log('In Edit alert');\n      console.log(id);\n      this.api.getPingUserIDDetails(id).subscribe( res => {\n        console.log('Get Edit Data');\n        console.log(res);\n  \n        const id8 = res._id;\n        console.log(id8);\n        console.log(res.PingUserID);\n        console.log(res.PingUserName);\n        console.log(res.PingUserDirectory);\n        console.log(\"Deliverto\"+res.PingUserID);\n        console.log(\"Data Sourse\"+res.PingUserName);\n  \n  \n         this.pingUserRoleFrm.get('PingUserID').setValue(res.PingUserID);\n         this.pingUserRoleFrm.get('PingUserName').setValue(res.PingUserName);\n         this.pingUserRoleFrm.get('PingUserDirectory').setValue(res.PingUserDirectory);\n         this.pingUserRoleFrm.get('PingUserAccess').setValue(res.PingUserAccess);\n  \n         this.pingUserRoleFrm.get('PingMemberID').setValue(res.PingMemberID);\n         this.pingUserRoleFrm.get('PingGroupID').setValue(res.PingGroupID);\n         this.pingUserRoleFrm.get('PingRole').setValue(res.PingRole);\n         this.pingUserRoleFrm.get('InsertBy').setValue(res.InsertBy);\n         this.pingUserRoleFrm.get('EmailID').setValue(res.EmailID);\n         this.pingUserRoleFrm.get('password').setValue(res.password);\n     \n      \n          // this.frmAlert.setValue(res.frmCntDataSource);\n        //  this.frmAlert.setValue(res.frmCntMeasures.pingMeasuresqLabel);\n        //  this.frmAlert.setValue(res.frmCntApplication.AppName);\n  \n        //  this.frmAlert.setValue({\n        //   frmCntAlertID: res.frmCntAlertID,\n        //   frmCntAlertName: res.frmCntAlertName,\n        //   frmCntRecipient: res.frmCntRecipient,  \n        //   frmCntDeliverTo: res.frmCntDeliverTo,\n        //   frmCntDataSource: res.frmCntDataSource,\n        //   frmCntMeasures: res.frmCntMeasures,\n        //   frmCntApplication: res.frmCntApplication,\n        \n        // });\n      });\n      \n    }\n    onFormSubmit(form:NgForm) {\n      console.log(this.route.snapshot.params['id'])\n      this.api.UpdatePingUserRole(this.route.snapshot.params['id'], form)\n        .subscribe(res => {\n            res['_id']=this.route.snapshot.params['id']\n            let id = res['_id'];\n            this.snackbar.open('Succesfully updated user Role', 'Close', {\n              duration: 3000,\n            });\n            this.router.navigate(['admin/userDetails']);\n          }, (err) => {\n            this.snackbar.open('Something went wrong...!!', 'Close', {\n              duration: 3000,\n            });\n            console.log(err);\n          }\n        );\n    }\n}\n","module.exports = \"/* Structure */\\r\\n\\r\\ninput[type=\\\"file\\\"] {\\r\\n    display: none;\\r\\n  }\\r\\n\\r\\n.custom-file-upload {\\r\\n    border: 1px solid #ccc;\\r\\n    display: inline-block;\\r\\n    padding: 6px 12px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\ntable {\\r\\n      width: 100%;\\r\\n      transition: none !important;\\r\\n      box-shadow: none !important;\\r\\n      margin-top: -30px;\\r\\n    }\\r\\n\\r\\n.mat-form-field {\\r\\n      font-size: 14px;\\r\\n      width: 70%;\\r\\n    }\\r\\n\\r\\n#table-responsive{\\r\\n      margin-top: 5px;\\r\\n    }\\r\\n\\r\\n#row2{\\r\\n      margin-top: -2px;\\r\\n      padding-top: 8px;\\r\\n      padding-bottom: 10px;\\r\\n    }\\r\\n\\r\\n.table-responsive{\\r\\n      margin-top: -15px;\\r\\n      padding-top: 40px;\\r\\n    }\\r\\n\\r\\ntr.mat-header-row{\\r\\n      height: 37px;\\r\\n    }\\r\\n\\r\\n.table-bordered>thead>tr>th{\\r\\n      border: 1px solid rgb(231, 76, 60);\\r\\n    }\\r\\n\\r\\n/* Switch Button */\\r\\n\\r\\nth{\\r\\n      padding-top: -100px;\\r\\n    }\\r\\n\\r\\n#th_allign{\\r\\n      text-align: center;\\r\\n    }\\r\\n\\r\\ntd{\\r\\n      color: rgb(127, 127, 127)\\r\\n    }\\r\\n\\r\\n.mat-header-cell {\\r\\n      color: rgb(102,102,102);\\r\\n    }\\r\\n\\r\\nth{\\r\\n      font-size: 14px;\\r\\n      background-color: rgb(238, 238, 238);\\r\\n      /* background-color: rgb(249, 55, 66); */\\r\\n    \\r\\n    }\\r\\n\\r\\n#btn-danger{\\r\\n      background-color: rgb(249, 25, 66);\\r\\n      color: rgb(255, 255, 255)\\r\\n    }\\r\\n\\r\\n* {\\r\\n    font-family: 'Nunito', 'Glyphicons Halflings';\\r\\n  }\"","module.exports = \"<br><br><br><br>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"btn-group btn-breadcrumb \\\">\\n                <a routerLink=\\\"/pingAlert/alertInbox\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n                <a class=\\\"btn btn-default\\\">Admin</a>\\n                <a class=\\\"btn btn-default\\\">Users Details</a>\\n            </div>\\n      </div>\\n      <div class=\\\"col-md-4 pull-right\\\">\\n        <div class=\\\"input-group\\\" style=\\\"float:right\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" id=\\\"txtSearch\\\"/> -->\\n          <input class=\\\"form-control\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\" >\\n              <div class=\\\"input-group-btn\\\">\\n                  <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n                      <span class=\\\"glyphicon glyphicon-search\\\"></span>\\n                  </button>\\n              </div>\\n          </div>\\n       </div>\\n\\n\\n    </div>\\n</div>\\n\\n<!--\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-3\\\"></div>\\n  <div class=\\\"col-xs-4\\\">\\n\\n  </div>\\n</div> -->\\n<br>\\n\\n\\n    <div class=\\\"container\\\" id=\\\"table-responsive\\\">\\n          <div class=\\\"table-responsive\\\" >\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\" mat-elevation-z8 table-bordered table-striped\\\">\\n\\n                <!-- USerID Column -->\\n                <ng-container matColumnDef=\\\"PingUserID\\\">\\n                <th  mat-header-cell *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\"> User ID</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.PingUserID}} </td>\\n                </ng-container>\\n\\n                <!-- USerNAme Column -->\\n                <ng-container matColumnDef=\\\"PingUserName\\\">\\n                <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\"> User Name </th>\\n                <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.PingUserName}} </td>\\n                </ng-container>\\n\\n                <!-- Directory Column -->\\n                <ng-container matColumnDef=\\\"PingUserDirectory\\\">\\n                  <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">User Directory </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.PingUserDirectory}} </td>\\n                  </ng-container> \\n                  \\n                    <!-- Access Column -->\\n                <ng-container matColumnDef=\\\"PingUserAccess\\\">\\n                  <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">User Access </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.PingUserAccess}} </td>\\n                  </ng-container> \\n\\n                    <!-- Role Column -->\\n                <ng-container matColumnDef=\\\"PingRole\\\">\\n                  <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">Role </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\" >  &nbsp; {{element.PingRole}} </td>\\n                  </ng-container> \\n\\n                    <!-- EmailId Column -->\\n                <ng-container matColumnDef=\\\"EmailID\\\">\\n                  <th mat-header-cell  *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">Email Id </th>\\n                  <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp; {{element.EmailID}} </td>\\n                  </ng-container> \\n\\n\\n                <!-- alertsetTime Column -->\\n                <!-- <ng-container matColumnDef=\\\"Setdate\\\">\\n                <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp; Set date </th>\\n                <td mat-cell  *matCellDef=\\\"let element\\\">  &nbsp;{{element.alertsetTime | date}} </td>\\n                </ng-container> -->\\n\\n\\n                   <!-- alertsetTime Column -->\\n               <!-- <ng-container matColumnDef=\\\"SetTime\\\">\\n                  <th mat-header-cell  *matHeaderCellDef>&nbsp;&nbsp; Set Time </th>\\n                  <td mat-cell name=\\\"SetTime\\\" *matCellDef=\\\"let element\\\">  &nbsp;{{element.alertsetTime | date:\\\"HH:MM\\\"}} </td>\\n                </ng-container> -->\\n\\n      <!-- Trigger -->\\n\\n                <!-- <ng-container matColumnDef=\\\"trigger\\\">\\n                  <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Trigger  </th> -->\\n                 <!-- <td mat-cell *matCellDef=\\\"let element\\\"> {{element.trigger}} </td> -->\\n                 <!-- <td mat-cell *matCellDef=\\\"let element\\\">\\n                      <mat-slide-toggle\\n                            class=\\\"example-margin\\\"\\n                            name=\\\"trigger\\\"\\n                            [color]=\\\"color\\\"\\n                            [checked]=\\\"checked\\\"\\n                            [disabled]=\\\"disabled\\\"\\n                            [(ngModel)]=\\\"element.trigger\\\"> {{element.trigger}}\\n                      </mat-slide-toggle>\\n                   </td>\\n                </ng-container> -->\\n\\n                <!-- Colum Edit/ Delete -->\\n                <ng-container matColumnDef=\\\"edit\\\">\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\" id=\\\"th_allign\\\">Edit / Delete  </th>\\n\\n                   <td mat-cell *matCellDef=\\\"let element\\\">\\n                     <div class=\\\"row col-lg-offset-3\\\">\\n                       <div class=\\\"col-md-2\\\">\\n                          <!-- <a routerLink=\\\"/edit_alert\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                          <!-- <a type='submit' [routerLink]=\\\"['/edit_new',element.id]\\\" (click)=\\\"onEdit(element._id)\\\" style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a> -->\\n                          <a class=\\\"text-center\\\" type='submit' [routerLink]=\\\"['/admin/editUserDetails/',element._id]\\\"  style=\\\"cursor: pointer;\\\"><i class=\\\"glyphicon glyphicon-pencil\\\" ></i></a>\\n\\n                        </div>\\n                       &nbsp;\\n                       <div class=\\\"col-md-2\\\">\\n                            <a class=\\\"text-center\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteUser(element._id)\\\"><i class=\\\"glyphicon glyphicon-trash\\\"></i></a>\\n                           <!-- <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteAlert(element._id)\\\"><mat-icon>delete</mat-icon></a> -->\\n                        </div>\\n                     </div>\\n                   </td>\\n                 </ng-container>\\n                <!-- <ng-container matColumnDef=\\\"Edit/Delete\\\">\\n                    <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;<strong>Edit / Delete</strong>  </th>\\n                   <td>\\n                     <div class=\\\"row\\\">\\n                       <div class=\\\"col-md-2\\\">\\n                        <button class=\\\"btn btn-primary\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></button>\\n                       </div>\\n                       <div class=\\\"col-md-2\\\">\\n                          <button class=\\\"btn btn-primary\\\"> <i class=\\\"glyphicon glyphicon-trash\\\"></i></button>\\n                        </div>\\n                     </div>\\n                   </td>\\n\\n                </ng-container> -->\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n              </table>\\n          </div>\\n\\n        <br>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1\\\" >\\n              <button \\n              mat-raised-button \\n              id=\\\"btn-danger\\\" \\n              [routerLink]=\\\"['/admin/createUser']\\\">Create User</button>\\n          </div>\\n          <div class=\\\"col-md-2\\\" style=\\\"margin-left: 20px;\\\">\\n            <form #form>\\n                <!-- <input type=\\\"file\\\" mat-raised-button name=\\\"file\\\" \\n                class=\\\"upload\\\" accept=\\\"*.csv\\\" (change)=\\\"changeListener($event.target.files)\\\" > -->\\n                <label matTooltip=\\\"Upload .CSV file\\\" for=\\\"file-upload\\\" class=\\\"custom-file-upload\\\">\\n                  <i class=\\\"glyphicon glyphicon-upload\\\"></i> Upload Users\\n              </label>\\n              <input  id=\\\"file-upload\\\" type=\\\"file\\\" \\n              class=\\\"upload\\\" \\n              accept=\\\"*.csv\\\" \\n              (change)=\\\"changeListener($event.target.files)\\\"/>\\n            </form>\\n          </div>\\n          <div class=\\\"col-md-2\\\" style=\\\"margin-left: 20px;\\\">\\n            <form #form>\\n                <!-- <input type=\\\"file\\\" mat-raised-button name=\\\"file\\\" \\n                class=\\\"upload\\\" accept=\\\"*.csv\\\" (change)=\\\"changeListener($event.target.files)\\\" > -->\\n                <label matTooltip=\\\"Upload .CSV file\\\" (click)='AddQlikUser()' class=\\\"custom-file-upload\\\">\\n                  <i class=\\\"glyphicon glyphicon-upload\\\"></i> Upload Qlik Users\\n              </label>\\n             \\n            </form>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1\\\"></div>\\n            <div class=\\\"col-md-2\\\" style=\\\"margin-left: 20px;\\\">\\n                <a (click)=\\\"downloadFile()\\\" style=\\\"cursor:pointer; \\\">Download Template</a>    \\n            </div>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n            <mat-paginator  [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20, 30, 50, 100]\\\"\\n             showFirstLastButtons></mat-paginator>\\n        </div>\\n      </div>\\n  \\n\\n\\n\\n\"","import { Component, OnInit , ViewChild, Injectable} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\nimport { AdminService } from '../../admin.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Location} from '@angular/common';\nimport {  FormGroup, FormControl, NgForm } from '@angular/forms';\n// import { identifier } from '../../../../node_modules/@types/babel-types';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AppService } from '../../../app.service';\n// import { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  editPingUser: FormGroup;\n  PingUserID: string;\n    PingUserName: string;\n    PingUserDirectory : string;\n    PingUserAccess : string; \n    PingMemberID : string; \n    PingGroupID : string; \n    PingRole : string; \n    InsertBy : string; \n    EmailID:string;\n    password:string;\n    LoginUserID:string;\n    constructor(private api: AdminService,private commanAPI:AppService, private router: Router, private location: Location, private route: ActivatedRoute,public snackbar: MatSnackBar) { }\n    displayedColumns = ['PingUserID','PingUserName','PingUserDirectory','PingUserAccess','PingRole','EmailID','edit'];\n    dataSource = new MatTableDataSource();\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n  \n    applyFilter(filterValue: string) {\n      filterValue = filterValue.trim(); // Remove whitespace\n      filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n      this.dataSource.filter = filterValue;\n    }\n    ngOnInit() {\n      this.commanAPI.getLoggeddUser().subscribe(res=>{\n        this.api.getPingUsersLoginIDWise(res.PingUserID)\n        .subscribe(res => {\n         this.InsertBy= res.InsertBy;\n          this.LoginUserID= res.PingUserID;\n          // if(res.code == 200){\n            console.log(\"User Details :\",res.body);\n            this.dataSource = new MatTableDataSource(res.body);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          // }\n        \n      \n        }, err => {\n          console.log(err);\n        });\n      },res=>{\n        this.router.navigate(['/login'])\n      })\n      \n      \n      this.editPingUser = new FormGroup ({\n        PingUserID:new FormControl(),\n        PingUserName: new FormControl(),\n        PingUserDirectory :new FormControl(),\n        PingUserAccess : new FormControl(),\n        PingMemberID :new FormControl(),\n        PingGroupID : new FormControl(),\n        PingRole : new FormControl(),\n        InsertBy : new FormControl(''),\n        EmailID: new FormControl(),\n        LoginUserID:new FormControl(),\n      password: new FormControl(),\n      });\n    }\n  \n  \n    public changeListener(files: FileList){\n      console.log(\"*****************\"+files+\"**************\");\n      this.commanAPI.getLoggeddUser().subscribe(res1=>{\n          console.log(\"Res\"+JSON.stringify(res1,null,4))\n          if(files && files.length > 0) {\n            let file : File = files.item(0); \n              console.log(\"***File***\",file)\n              console.log(file.name);\n              console.log(file.size);\n              console.log(file.type);  \n              if (file.type == 'text/csv'||file.type == 'application/vnd.ms-excel'){\n              let reader: FileReader = new FileReader();\n              reader.readAsText(file);\n              reader.onload = (e) => {\n                 let csv: string = reader.result.toString();\n                 console.log(csv);\n                 let data = {data:csv,InsertBy:res1.PingUserName,LoginUserID:res1.PingUserID}\n                 this.api.postFileUpload(data)\n                 .subscribe(res => {\n                   console.log(\"Bulk Upload STatus\"+res);\n                   this.snackbar.open('Succesfully submitted user details', 'Close', {\n                     duration: 3000,\n                   });          \n                 }, err => {\n                   console.log(err);\n                   this.snackbar.open('Something went wrong..!!', 'Close', {\n                     duration: 3000,\n                   });\n                 });\n              }\n             }\n             else{\n               console.log(\"File type is not appropriate format\")\n               this.snackbar.open('File type is not appropriate format please upload CSV format file', 'Close', {\n                 duration: 3000,\n               });\n             }\n           }\n       \n      })\n         \n      \n    }\n  \n  \n    // Edit User\n  onEdit(id) {\n    console.log('In Edit User');\n    console.log(id);\n    this.api.getPingUserIDDetails(id)\n    .subscribe( res => {\n      console.log(res);\n      this.PingUserID = id;\n    });\n  }\n  // delete User\n  deleteUser(id) {\n    console.log('In Delete User');\n    console.log(id);\n    this.ngOnInit();\n    this.api.deletePingUserNew(id)\n    .subscribe(res => {\n      console.log('ping user new Data');\n      this.ngOnInit();\n      this.api.getPingUsersNew()\n      .subscribe(res => {\n        this.snackbar.open('Succesfully deleted user', 'Close', {\n          duration: 3000,\n        });\n        console.log(res);\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }, err => {\n        console.log(err);\n      });\n              // this.api.getPingUsersNew()\n              // .subscribe( res => {\n              //   console.log('ping user new Data');\n              //   console.log(res);\n              //   this.snackbar.open('Succesfully deleted user', 'Close', {\n              //     duration: 3000,\n              //   });\n              //   this.dataSource = new MatTableDataSource(res);\n              //   this.dataSource.sort = this.sort;\n              //   this.dataSource.paginator = this.paginator;\n              // }, err => {\n              //   console.log(err);\n              // });\n  \n      // this.router.navigateByUrl(\"/alert_Inbox\");\n      // this.router.navigate(['/alert_examples']);\n    }, (err) => {\n    console.log(err);\n    }\n    );\n  }\n  //File Donwload Template\n  downloadFile(){\n    let link = document.createElement(\"a\");\n    link.download = \"PingUserRole.csv\";\n    link.href = \"assets/PingUserRole.csv\";\n    link.click();\n  }\n  AddQlikUser()\n  {\n    console.log(\"Label Qliked\");\n    this.api.fetchQlikUsers().subscribe(res=>{\n      this.snackbar.open(\"Qlik Users Added Successfully\", 'Close', {\n        duration: 2000,\n      });\n    })\n  }\n  \n  }\n  \n  ","module.exports = \"#edit{\\r\\n    background-color:rgb(231, 76, 60);\\r\\n    padding-top: 14px;\\r\\n}\\r\\n\\r\\n#cancel{\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\n#hide{\\r\\n    visibility: hidden;\\r\\n}\\r\\n\\r\\n.btn-primary{\\r\\n    margin-left: 40%;\\r\\n}\\r\\n\\r\\n#container1{\\r\\n    border: 1px solid rgb(236, 235, 235);\\r\\n    margin-left:13%\\r\\n}\\r\\n\\r\\n/* #margin{\\r\\n    margin-left: 10% ;\\r\\n} */\\r\\n\\r\\n#save{\\r\\n  background-color:rgb(249, 25, 66);\\r\\n  color: white;\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n.example-form {\\r\\n    min-width: 80px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n.example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n.example-full-width:nth-last-child() {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\n.button-row {\\r\\n    margin: 10px 0;\\r\\n  }\\r\\n\\r\\n.text-white{\\r\\n    color: white;\\r\\n}\\r\\n \"","module.exports = \"\\n<br><br><br><br>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n          <div class=\\\"btn-group btn-breadcrumb \\\">\\n              <a routerLink=\\\"/pingAlert/alertInbox\\\" class=\\\"btn btn-default\\\"><i class=\\\"glyphicon glyphicon-home\\\"></i></a>\\n              <a class=\\\"btn btn-default\\\">Admin</a>\\n              <a routerLink=\\\"/UserRoleDetails\\\" class=\\\"btn btn-default\\\">User Management</a>\\n              <a class=\\\"btn btn-default active\\\">Create/Edit User</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n    <br>\\n    <form [formGroup]=\\\"QlikServer\\\" (ngSubmit)=\\\"onFormSubmit(QlikServer.value)\\\">\\n      <div class=\\\"col-md-1\\\"></div>\\n      <div class=\\\"col-md-9 \\\">\\n          <div class=\\\"panel panel-default\\\">\\n              <div class=\\\"panel-body\\\">\\n                 <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"row\\\">\\n                      <!-- <div class=\\\"col-lg-1 pull-left\\\"><mat-icon>person_add</mat-icon></div>\\n                      <div class=\\\"col-lg-11\\\"><h5>Please enter the user details below: </h5></div> -->\\n                    </div>\\n                      \\n                      <div *ngIf=\\\"HideField\\\" class=\\\"col-md-9\\\">           \\n                        \\n                          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n                              <mat-label>User ID </mat-label>\\n                              <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n                              <input required matInput placeholder=\\\"Enter User ID\\\" formControlName=\\\"PingUserID\\\"\\n                                     [errorStateMatcher]=\\\"matcher\\\">\\n                                     <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->                         \\n                              <mat-error>\\n                                <span *ngIf=\\\"!QlikServer.get('PingUserID').valid && QlikServer.get('PingUserID').touched\\\">Please enter User ID</span>\\n                              </mat-error>\\n                            </mat-form-field>\\n                      </div>\\n                      <div class=\\\"col-md-9\\\">\\n                          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                              <mat-label>User Name </mat-label>\\n                              <!-- <span matPrefix><mat-icon matPrefix>edit</mat-icon> &nbsp;</span> -->\\n                              <input required matInput placeholder=\\\"Enter User Name\\\" formControlName=\\\"PingUserName\\\"\\n                                     [errorStateMatcher]=\\\"matcher\\\">\\n                              <mat-error>\\n                                <span *ngIf=\\\"!QlikServer.get('PingUserName').valid && QlikServer.get('PingUserName').touched\\\">Please enter User Name</span>\\n                              </mat-error>\\n                            </mat-form-field>\\n                      </div>  \\n\\n                    <!-- Password -->\\n                     <div class=\\\"col-md-9\\\">           \\n                        \\n                      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n                          <mat-label>Password</mat-label>\\n                          <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n                          <input required type=\\\"password\\\" matInput placeholder=\\\"Enter Password\\\" formControlName=\\\"password\\\"\\n                                 [errorStateMatcher]=\\\"matcher\\\">\\n                                 <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\\n                                 \\n                          <mat-error>\\n                            <span *ngIf=\\\"!QlikServer.get('password').valid && QlikServer.get('password').touched\\\">Please enter user password</span>\\n                          </mat-error>\\n                        </mat-form-field>\\n                      </div>\\n\\n\\n                      <div class=\\\"col-md-9\\\">\\n                          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                              <mat-label>User Directory </mat-label>\\n                              <!-- <span matPrefix>+1 &nbsp;</span> -->\\n                              <input required matInput placeholder=\\\"Enter User Directory\\\" formControlName=\\\"PingUserDirectory\\\"\\n                                     [errorStateMatcher]=\\\"matcher\\\">\\n                              <mat-error>\\n                                <span *ngIf=\\\"!QlikServer.get('PingUserDirectory').valid && QlikServer.get('PingUserDirectory').touched\\\">Please enter User Directory</span>\\n                              </mat-error>\\n                            </mat-form-field>\\n                      </div>\\n                     \\n                      \\n                      <!-- EmailId -->\\n                      <div class=\\\"col-md-9\\\">           \\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\" >\\n                            <mat-label>Email Id</mat-label>\\n                            <!-- <span matPrefix><mat-icon matPrefix>edit_attributes</mat-icon>&nbsp;</span> -->\\n                           <input required matInput placeholder=\\\"Enter Email Id\\\" formControlName=\\\"EmailID\\\"\\n                            [errorStateMatcher]=\\\"matcher\\\">  \\n                                   <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->       \\n                            <mat-error>\\n                              <span *ngIf=\\\"!QlikServer.get('EmailID').valid && QlikServer.get('EmailID').touched\\\">Please enter User Email ID</span>\\n                            </mat-error>\\n                          </mat-form-field>\\n                    </div>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-9\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                            <mat-label>User Access </mat-label>\\n                          <mat-select required placeholder=\\\"User Access\\\" formControlName=\\\"PingUserAccess\\\" name=\\\"UsreAccess\\\" required>\\n                              <mat-option>--  Select Access --</mat-option>\\n                            <mat-option *ngFor=\\\"let access of AAccess\\\" [value]=\\\"access.name\\\">\\n                              {{access.name}}\\n                            </mat-option>\\n                          </mat-select>\\n                          <mat-error>\\n                              <span *ngIf=\\\"!QlikServer.get('PingUserAccess').valid && QlikServer.get('PingUserAccess').touched\\\">Please select user access</span>\\n                            </mat-error>\\n                          <!-- [selected]=\\\"car.color.id == qlikSenseApps.Appid\\\" -->\\n                        </mat-form-field>\\n                      </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-9\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"fill\\\">\\n                            <mat-label>User Role</mat-label>\\n                          <mat-select required placeholder=\\\"User Role\\\" formControlName=\\\"PingRole\\\" name=\\\"userRole\\\" required >\\n                              <mat-option>-- Select Role --</mat-option>\\n                            <mat-option *ngFor=\\\"let role of RRole\\\" [value]=\\\"role.name\\\">\\n                              {{role.name}}\\n                            </mat-option>\\n                          </mat-select>\\n                          <mat-error>\\n                              <span *ngIf=\\\"!QlikServer.get('PingRole').valid && QlikServer.get('PingRole').touched\\\">Please select user role</span>\\n                            </mat-error>\\n                          <!-- [selected]=\\\"car.color.id == qlikSenseApps.Appid\\\" -->\\n                        </mat-form-field>\\n                      </div> \\n                </div>\\n                <br>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-9\\\">\\n                        <!-- <input type=\\\"number\\\"\\n                        class=\\\"form-control\\\"\\n                          ng2TelInput\\n                          [ng2TelInputOptions]=\\\"{initialCountry: 'in'}\\\"\\n                          (hasError)=\\\"hasError($event)\\\"\\n                          (ng2TelOutput)=\\\"getNumber($event)\\\"\\n                          (intlTelInputObject)=\\\"telInputObject($event)\\\"\\n                          (countryChange)=\\\"onCountryChange($event)\\\" /> -->\\n                          <input type=\\\"number\\\"\\n                        class=\\\"form-control\\\"\\n                          ng2TelInput\\n                          [ng2TelInputOptions]=\\\"{initialCountry: 'in'}\\\"\\n                          (hasError)=\\\"hasError($event)\\\"\\n                          (ng2TelOutput)=\\\"getNumber($event)\\\"\\n                          (countryChange)=\\\"onCountryChange($event)\\\" />\\n                    </div>\\n                </div>\\n                  \\n              </div>\\n            </div>\\n\\n            <!-- <br><br> -->\\n          </div>\\n      </div>\\n      \\n        <div class=\\\"col-md-5\\\"></div>\\n        <button type=\\\"submit\\\" id=\\\"save\\\" class=\\\"col-md-1\\\" [disabled]=\\\"!QlikServer.valid\\\" mat-raised-button >Save</button>\\n        <button mat-raised-button id=\\\"cancel\\\" class=\\\"col-md-1\\\" [routerLink]=\\\"['/admin/userDetails']\\\" >Cancel</button>\\n    </form>\\n\\n\\n\\n\"","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminService } from '../admin.service';\nimport { AppService } from '../../app.service';\n\n@Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})\nexport class UserRegisterComponent implements OnInit {\n  matcher;\n  @ViewChild('form') form;\n  QlikServer: FormGroup;\n  PingUserID: String='';\n  PingUserName: String='';\n  PingUserDirectory : String='';\n  PingUserAccess : String=''; \n  PingMemberID : String='';\n  PingGroupID : String='';\n  PingRole : String='';\n  EmailID:String='';\n  password:String='';  \n  InsertBy : String= ''; \n  usercount:String='';\n  count: number=0;\n  LoginUserID: string = 'User8';\n  userID: string = '';\n  uID: any =  '';\n  AAccess = [\n    { id: 1, name: 'Use Qlik Security' },\n    { id: 2, name: 'Manage in Ping' }\n  ];\n  HideField:boolean=false; \n\n  RRole = [\n    { id: 2, name: 'Administrator' },\n    { id: 3, name: 'Connnection Manager' },\n    { id: 4, name: 'User' }\n  ];\n  constructor(private router: Router,private commanApi : AppService, private api: AdminService, private formBuilder: FormBuilder,public snackbar: MatSnackBar,) { }\n\n  ngOnInit() {\n    // this.myForm = new FormGroup ({\n    //   Access: new FormControl()\n    // });\n    // this.api.getPingUsers()\n    // .subscribe(res => {\n    //   console.log(res);\n    //   this.count=res.length;\n    //   this.count=this.count+1;\n    //   this.userID = 'User' + this.count ;\n    //   this.uID = this.QlikServer.get('PingUserID').setValue(this.userID);\n\n    // }, err => {\n    //   console.log(err);\n    //   this.usercount='0';\n    // });\n    // this.usercount=usersCnt\n    this.commanApi.getLoggeddUser().subscribe( res => {                         \n    this.QlikServer.get('InsertBy').setValue(res.InsertBy);\n    this.QlikServer.get('LoginUserID').setValue(res.PingUserID);\n    },err => {\n      console.log(\"err\");\n      console.log(err);\n      this.router.navigate(['/login']);\n    })\n\n    this.QlikServer = this.formBuilder.group({\n      // id: '',\n      PingUserID:['1',Validators.required],\n      PingUserName: [null,Validators.required],\n      PingUserDirectory : [null,Validators.required],\n      PingUserAccess : new FormControl(this.AAccess, Validators.required),\n      EmailID:[null,Validators.required],\n      password:[null,Validators.required], \n      PingMemberID : '1', \n      PingGroupID : '1', \n      PingRole : new FormControl(this.RRole,Validators.required), \n      InsertBy : '', \n      LoginUserID:'',   \n    })\n  \n    \n     \n  }\n\n  hasError(e){\n\n  }\n  getNumber(e){}\n  onCountryChange(e){}\n\n  public changeListener(files: FileList){\n    console.log(\"*****************\"+files+\"**************\");\n    if(files && files.length > 0) {\n       let file : File = files.item(0); \n         console.log(\"***File***\",file)\n         console.log(file.name);\n         console.log(file.size);\n         console.log(file.type);\n\n        if (file.type == 'text/csv'){\n         let reader: FileReader = new FileReader();\n         reader.readAsText(file);\n         reader.onload = (e) => {\n            let csv: string = reader.result.toString();\n            console.log(csv);\n            let data = {data:csv}\n            this.api.postFileUpload(data)\n            .subscribe(res => {\n              console.log(res);\n              this.snackbar.open('Succesfully submitted user details', 'Close', {\n                duration: 3000,\n              });\n        \n            }, err => {\n              console.log(err);\n              this.snackbar.open('Something went wrong..!!', 'Close', {\n                duration: 3000,\n              });\n            });\n         }\n        }\n        else{\n          console.log(\"File type is not appropriate format\")\n          this.snackbar.open('File type is not appropriate format please upload CSV format file', 'Close', {\n            duration: 3000,\n          });\n        }\n      }\n  }\n\n  onFormSubmit(form:NgForm) {\n    console.log('Form Submited ',form);\n    this.api.postPingUserDetails(form)\n      .subscribe(res => {\n          //let id = res['_id'];\n          console.log(res);\n          this.snackbar.open(res.msg, 'Close', {\n            duration: 6000,\n          });\n          this.router.navigate(['/admin/userDetails']);\n          console.log(\"Successfully Record Saved....\");\n        }, (err) => {\n\n          if(err.error.length > 1){\n              this.snackbar.open('Something went wrong..!!', 'Close', {\n                  duration: 3000,\n                });\n          }\n          else{\n                this.snackbar.open(err.error[0].msg, 'Close', {\n                  duration: 5000,\n                });\n          }\n                  \n        });\n  }\n\n  public reset() {\n    this.form.nativeElement.reset()\n  }\n\n}\n"],"sourceRoot":""}